<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>彭友谊的博客</title>
 <link href="" rel="self"/>
 <link href=""/>
 <updated>2023-08-30T14:39:27+08:00</updated>
 <id></id>
 <author>
   <name>pengyouyi</name>
   <email></email>
 </author>

 
 <entry>
   <title>HTML面试题</title>
   <link href="/html/2023/08/29/html-interview-questions"/>
   <updated>2023-08-29T00:00:00+08:00</updated>
   <id>/html/2023/08/29/html-interview-questions</id>
   <content type="html">&lt;h1 id=&quot;html&quot;&gt;HTML面试题&lt;/h1&gt;

&lt;h1 id=&quot;doctype&quot;&gt;Doctype&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Doctype作用？标准模式与兼容模式各有什么区别?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（1）、&amp;lt;!DOCTYPE&amp;gt;声明位于位于HTML文档中的第一行，处于 &amp;lt;html&amp;gt; 标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。&lt;/p&gt;

&lt;p&gt;（2）、标准模式的排版 和JS运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。&lt;/p&gt;

&lt;h1 id=&quot;lt-doctype-html-gt&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;HTML5 为什么只需要写 &amp;lt;!DOCTYPE HTML&amp;gt;？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTML5 不基于 SGML，因此不需要对DTD进行引用，但是需要doctype来规范浏览器的行为（让浏览器按照它们应该的方式来运行）；&lt;/p&gt;

&lt;p&gt;而HTML4.01基于SGML,所以需要对DTD进行引用，才能告知浏览器文档所使用的文档类型。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/github_39030531/article/details/72854443&quot;&gt;SGML&lt;/a&gt; - 标准通用标记语言（Standard Generalized Markup Language）&lt;/p&gt;

&lt;p&gt;DTD - 文档类型定义（Document Type Definition）&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;web&quot;&gt;WEB标准&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;WEB标准以及W3C标准是什么?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;标签闭合、标签小写、不乱嵌套、使用外链css和js、结构行为表现的分离。&lt;/p&gt;

&lt;h1 id=&quot;&gt;前端页面由哪三层构成&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;前端页面由哪三层构成，分别是什么?作用是什么?&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;结构层 Html(页面结构内容，骨架) &lt;/p&gt;

&lt;p&gt;表示层 CSS(网页的样式和外观) &lt;/p&gt;

&lt;p&gt;行为层 js(实现网页的交互，动画效果)&lt;/p&gt;

&lt;h1 id=&quot;block-amp-inline&quot;&gt;block &amp;amp; inline&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;首先：CSS规范规定，每个元素都有display属性，确定该元素的类型，每个元素都有默认的display值，如div的display默认值为“block”，则为“块级”元素；span默认display属性值为“inline”，是“行内”元素。&lt;/p&gt;

&lt;p&gt;（1）行内元素有：a b span img input select strong（图片，表单元素）&lt;br&gt;&lt;br&gt;
（2）块级元素有：div ul ol li dl dt dd h1 h2 h3 h4…p (标题，列表)&lt;br&gt;&lt;br&gt;
（3）常见的空元素：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;    \&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&amp;gt;&lt;/span&gt;
    鲜为人知的是：
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;area&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;base&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;col&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;command&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;embed&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;keygen&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;param&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;source&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;track&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;wbr&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;不同浏览器（版本）、HTML4（5）、CSS2等实际略有差异&lt;br&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/6867254/browsers-default-css-for-html-elements&quot;&gt;参考:&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;link-import&quot;&gt;link 和 @import&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;两者都是外部引用 CSS 的方式，使用 link 和 @import 有什么区别？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（1）link 属于 XHTML 标签，除了加载 CSS 外，还能用于定义 RSS, 定义 rel 连接属性等作用；而 @import 是 CSS 提供的，只能用于加载 CSS;&lt;br&gt;&lt;br&gt;
（2）页面被加载的时，link 会同时被加载，而 @import 引用的 CSS会等到页面被加载完再加载;&lt;br&gt;&lt;br&gt;
（3）link 是 XHTML 标签，无兼容问题; import 是 CSS2.1 提出的，只在 IE5 以上才能被识别;&lt;br&gt;&lt;br&gt;
（4）link 支持使用 Javascript 控制 DOM 去改变样式；而 @import不支持。  &lt;/p&gt;

&lt;h1 id=&quot;browser-kernel&quot;&gt;Browser kernel&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;介绍一下你对浏览器内核的理解？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎。&lt;/p&gt;

&lt;p&gt;渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。&lt;/p&gt;

&lt;p&gt;JS引擎则：解析和执行javascript来实现网页的动态效果。&lt;/p&gt;

&lt;p&gt;最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎。&lt;/p&gt;

&lt;h1 id=&quot;browser-core&quot;&gt;Browser core&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;常见的浏览器内核有哪些？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trident内核：IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML]&lt;br&gt;&lt;br&gt;
Gecko内核：Netscape6及以上版本，FF,MozillaSuite/SeaMonkey等&lt;br&gt;&lt;br&gt;
Presto内核：Opera7及以上。      [Opera内核原为：Presto，现为：Blink;]&lt;br&gt;&lt;br&gt;
Webkit内核：Safari,Chrome等。   [ Chrome的：Blink（WebKit的分支）]  &lt;/p&gt;

&lt;p&gt;详细文章：&lt;a href=&quot;http://www.cnblogs.com/fullhouse/archive/2011/12/19/2293455.html&quot;&gt;浏览器内核的解析和对比&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;html5-new-features&quot;&gt;html5 new features&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(1) 语义标签, 比如 article、footer、header、nav、section;&lt;br&gt;&lt;br&gt;
(2) 增强型表单, 比如新的表单 Input 输入类型[date、time、email、url、search]，和新增的表单属性;&lt;br&gt;&lt;br&gt;
(3) 视频 video 和音频 audio;&lt;br&gt;&lt;br&gt;
(4) Canvas 绘图;&lt;br&gt;&lt;br&gt;
(5) SVG 绘图;&lt;br&gt;&lt;br&gt;
(6) Geolocation（地理定位）;&lt;br&gt;&lt;br&gt;
(7) 拖放 API;&lt;br&gt;&lt;br&gt;
(8) Web Worker 为 JavaScript 创造多线程环境;&lt;br&gt;&lt;br&gt;
(9) Web Storage 存储【localStorage永久化、sessionStorage临时】;&lt;br&gt;&lt;br&gt;
(10) WebSocket 全双工通讯的协议;  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/vicky1018/p/7705223.html&quot;&gt;HTML5的十大新特性&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2018/07/web-worker.html&quot;&gt;Web Worker 使用教程&lt;/a&gt;;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;WebSocket 可以实现跨域通讯，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;移除的元素：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;纯表现的元素：basefont，big，center，font, s，strike，tt，u;&lt;br&gt;&lt;br&gt;
对可用性产生负面影响的元素：frame，frameset，noframes；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;支持HTML5新标签：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;IE8/IE7/IE6支持通过document.createElement方法产生的标签，&lt;br&gt;
 可以利用这一特性让这些浏览器支持HTML5新标签，&lt;br&gt;
 浏览器支持新标签后，还需要添加标签默认的样式。&lt;/p&gt;

&lt;p&gt;当然也可以直接使用成熟的框架、比如html5shim;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;
    `&amp;lt;script&amp;gt; src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&amp;lt;/script&amp;gt;`
 &amp;lt;![endif]--&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;如何区分HTML5：&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;DOCTYPE声明、新增的结构元素、功能元素&lt;/p&gt;

&lt;h1 id=&quot;semantic&quot;&gt;语义化-Semantic&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;简述一下你对HTML语义化的理解？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用正确的标签做正确的事情。&lt;br&gt;&lt;br&gt;
html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;&lt;br&gt;&lt;br&gt;
即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;&lt;br&gt;&lt;br&gt;
搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;&lt;br&gt;&lt;br&gt;
使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。   &lt;/p&gt;

&lt;h1 id=&quot;offline-storage&quot;&gt;离线储存-Offline storage&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;HTML5的离线储存怎么使用，工作原理能不能解释一下？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。&lt;/p&gt;

&lt;p&gt;原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。&lt;/p&gt;

&lt;p&gt;如何使用：&lt;/p&gt;

&lt;p&gt;1、页面头部像下面一样加入一个manifest的属性；&lt;/p&gt;

&lt;p&gt;2、在cache.manifest文件的编写离线存储的资源；&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;    CACHE MANIFEST
    #v0.11
    CACHE:
    js/app.js
    css/style.css
    NETWORK:
    resourse/logo.png
    FALLBACK:
    / /offline.html&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3、在离线状态时，操作window.applicationCache进行需求实现。&lt;/p&gt;

&lt;p&gt;详细的使用请参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://yanhaijing.com/html/2014/12/28/html5-manifest/&quot;&gt;HTML5 离线缓存-manifest简介&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://segmentfault.com/a/1190000000732617&quot;&gt;有趣的HTML5：离线存储&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;application-cache&quot;&gt;application cache&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行&lt;br&gt;
离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。&lt;/p&gt;

&lt;p&gt;离线的情况下，浏览器就直接使用离线存储的资源。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000732617&quot;&gt;有趣的HTML5：离线存储&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;cookies&quot;&gt;cookies&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;请描述一下 cookies，sessionStorage 和 localStorage 的区别？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;cookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。&lt;br&gt;&lt;br&gt;
cookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递。&lt;br&gt;&lt;br&gt;
sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;存储大小：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;cookie数据大小不能超过4k。  
sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;有期时间：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；  
sessionStorage  数据在当前浏览器窗口关闭后自动删除。  
cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;iframe&quot;&gt;iframe 的优缺点？&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;iframe 优点：&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;iframe 能够原封不动的把嵌入的网页展现出来。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果有多个网页引用 iframe，那么你只需要修改 iframe 的内容，就可以实现调用的每一个页面内容的更改，方便快捷【可以增加代码的可重用】。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果遇到加载缓慢的第三方内容如图标和广告，这些问题可以由 iframe 来解决。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;iframe 缺点&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;会产生很多页面，不容易管理。如果框架个数多的话，可能会出现上下、左右滚动条，会分散访问者的注意力，用户体验度差;&lt;/li&gt;
&lt;li&gt;搜索引擎的检索程序无法解读这种页面，不利于 SEO;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;iframe 会阻塞主页面的 Onload 事件;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;iframe 和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用 iframe 之前需要考虑这两个缺点。如果需要使用 iframe，最好是通过 javascript 动态给 iframe 添加 src 属性值，这样可以绕开以上两个问题。&lt;/p&gt;

&lt;h1 id=&quot;label&quot;&gt;Label&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Label的作用是什么？是怎么用的？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;label标签来定义表单控制间的关系,当用户选择该标签时，浏览器会自动将焦点转到和标签相关的表单控件上。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Number:&lt;span class=&quot;nt&quot;&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;“text“name=&quot;Name&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;label&amp;gt;&lt;/span&gt;Date:&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;form-close&quot;&gt;form close&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;HTML5的form如何关闭自动完成功能？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;给不想要提示的 form 或某个 input 设置为 autocomplete=off。&lt;/p&gt;

&lt;h1 id=&quot;websocket&quot;&gt;WebSocket&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;如何实现浏览器内多个标签页之间的通信?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebSocket、SharedWorker；&lt;br&gt;
也可以调用localstorge、cookies等本地存储方式；&lt;/p&gt;

&lt;p&gt;localstorge另一个浏览上下文里被添加、修改或删除时，它都会触发一个事件，&lt;br&gt;
我们通过监听事件，控制它的值来进行页面信息通信；&lt;br&gt;
注意quirks：Safari 在无痕模式下设置localstorge值时会抛出 QuotaExceededError 的异常；&lt;/p&gt;

&lt;h1 id=&quot;websocket&quot;&gt;webSocket&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;webSocket如何兼容低浏览器？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Adobe Flash Socket 、&lt;br&gt;
ActiveX HTMLFile (IE) 、&lt;br&gt;
基于 multipart 编码发送 XHR 、&lt;br&gt;
基于长轮询的 XHR&lt;/p&gt;

&lt;h1 id=&quot;page-visibility&quot;&gt;Page Visibility&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;页面可见性（Page Visibility API） 可以有哪些用途？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过 visibilityState 的值检测页面当前是否可见，以及打开网页的时间等;&lt;br&gt;
在页面被切换到其他后台进程的时候，自动暂停音乐或视频的播放；&lt;/p&gt;

&lt;h1 id=&quot;circle-click&quot;&gt;circle click&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;如何在页面上实现一个圆形的可点击区域？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1、map+area 或者 svg&lt;/p&gt;

&lt;p&gt;2、border-radius&lt;/p&gt;

&lt;p&gt;3、纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等&lt;/p&gt;

&lt;h1 id=&quot;1px&quot;&gt;1px&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;实现不使用 border 画出1px高的线，在不同浏览器的标准模式与怪异模式下都能保持一致的效果。&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;height:1px;overflow:hidden;background:red&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;verification-code&quot;&gt;Verification Code&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;网页验证码是干嘛的，是为了解决什么安全问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;区分用户是计算机还是人的公共全自动程序。可以防止恶意破解密码、刷票、论坛灌水；&lt;br&gt;&lt;br&gt;
有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。&lt;/p&gt;

&lt;h1 id=&quot;title&quot;&gt;title&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;title与h1的区别、b与strong的区别、i与em的区别？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;title属性没有明确意义只表示是个标题，H1则表示层次明确的标题，对页面信息的抓取也有很大的影响；&lt;/p&gt;

&lt;p&gt;strong是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：&amp;lt;strong&amp;gt;会重读，而&amp;lt;B&amp;gt;是展示强调内容。&lt;/p&gt;

&lt;p&gt;i内容展示为斜体，em表示强调的文本；&lt;/p&gt;

&lt;p&gt;Physical Style Elements -- 自然样式标签 : b, i, u, s, pre  &lt;/p&gt;

&lt;p&gt;Semantic Style Elements -- 语义样式标签 : strong, em, ins, del, code  &lt;/p&gt;

&lt;p&gt;应该准确使用语义样式标签, 但不能滥用, 如果不能确定时首选使用自然样式标签。&lt;/p&gt;

&lt;h1 id=&quot;reprint&quot;&gt;Reprint&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Questions-and-Answers&quot;&gt;转载-markYun&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;img-alt-title&quot;&gt;img 中的 alt 与 title 属性&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;alt 是图片加载失败时，显示在网页上的替代文字；&lt;/li&gt;
&lt;li&gt;title 是鼠标放在图片上面时显示的文字，title 是对图片的描述与进一步说明；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;alt 是 img 必要的属性&lt;/code&gt;，而 title 不是；&lt;br&gt;
对于网站 seo 优化来说，title 与 alt 还有最重要的一点：&lt;br&gt;
搜索引擎对图片意思的判断，主要靠 alt 属性。所以在图片 alt 属性中以简要的文字说明，同时包含关键词，也是页面优化的一部分。&lt;br&gt;
条件允许的话，可以在 title 属性里进一步对图片说明。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sass、Less 以及 CSS工程化、CSS优化</title>
   <link href="/css/2023/08/29/css-sass-less"/>
   <updated>2023-08-29T00:00:00+08:00</updated>
   <id>/css/2023/08/29/css-sass-less</id>
   <content type="html">&lt;h1 id=&quot;sass-less-css-css&quot;&gt;Sass、Less 以及 CSS工程化、CSS优化&lt;/h1&gt;

&lt;h1 id=&quot;less-sass-postcss&quot;&gt;less、sass，postCss 处理器&lt;/h1&gt;

&lt;p&gt;★★★&lt;br&gt;
&lt;strong&gt;CSS预处理器/后处理器是什么？为什么要使用它们？&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;预处理器&lt;/code&gt;， 如：sass，less，stylus，用来预编译 Sass 或 less，增强了 css 代码的复用性，还有层级、mixin、变量、循环、函数等，具有很方便的 UI 组件模块化开发能力，极大的提高工作效率。    &lt;/p&gt;

&lt;p&gt;&lt;code&gt;后处理器&lt;/code&gt;， 如： postCss，通常是在完成的样式表中根据 css 规范处理 css，让其更加有效。目前最常做的是给 css 属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;css 预处理器为 css 增加一些编程特性，无需考虑浏览器的兼容问题，可以在 CSS 中使用变量，简单的逻辑程序，函数等在编程语言中的一些基本的性能，可以让 css 更加的简洁，增加适应性以及可读性，可维护性等。&lt;/p&gt;

&lt;p&gt;其它 css 预处理器语言：Sass（Scss）, Less, Stylus, Turbine, Swithch css, CSS Cacheer, DT Css。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用原因：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;结构清晰， 便于扩展&lt;br&gt;&lt;/li&gt;
&lt;li&gt;可以很方便的屏蔽浏览器私有语法的差异&lt;br&gt;&lt;/li&gt;
&lt;li&gt;可以轻松实现多重继承&lt;br&gt;&lt;/li&gt;
&lt;li&gt;完美的兼容了 CSS 代码，可以应用到老项目中&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;css&quot;&gt;对 CSS 工程化的理解&lt;/h1&gt;

&lt;p&gt;★★&lt;br&gt;
CSS 工程化是为了解决以下问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;宏观设计：&lt;/strong&gt;CSS 代码如何组织、如何拆分、模块结构怎样设计？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编码优化：&lt;/strong&gt;怎样写出更好的 CSS？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构建：&lt;/strong&gt;如何处理我的 CSS，才能让它的打包结果最优？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可维护性：&lt;/strong&gt;代码写完了，如何最小化它后续的变更成本？如何确保任何一个同事都能轻松接手？&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以下三个方向都是时下比较流行的、普适性非常好的 CSS 工程化实践：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;❶ 预处理器：Less、 Sass 等；  &lt;/p&gt;

&lt;p&gt;❷ 重要的工程化插件： PostCss；  &lt;/p&gt;

&lt;p&gt;❸ Webpack loader 等 。  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;基于这三个方向，可以衍生出一些具有典型意义的子问题，这里我们逐个来看：&lt;/p&gt;

&lt;h2 id=&quot;sass-less&quot;&gt;预处理器 Sass、Less&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;（1）预处理器：为什么要用预处理器？它的出现是为了解决什么问题？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;预处理器，其实就是 CSS 世界的“轮子”。预处理器支持我们写一种类似 CSS、但实际并不是 CSS 的语言，然后把它编译成 CSS 代码：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;类 CSS 代码  -&amp;gt;  预处理器  -&amp;gt;  CSS 代码&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;那为什么写 CSS 代码写得好好的，偏偏要转去写“类 CSS”呢？这就和本来用 JS 也可以实现所有功能，但最后却写 React 的 jsx 或者 Vue 的模板语法一样——为了爽！要想知道有了预处理器有多爽，首先要知道的是传统 CSS 有多不爽。随着前端业务复杂度的提高，前端工程中对 CSS 提出了以下的诉求：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;宏观设计上：我们希望能优化 CSS 文件的目录结构，对现有的 CSS 文件实现复用；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;编码优化上：我们希望能写出结构清晰、简明易懂的 CSS，需要它具有一目了然的嵌套层级关系，而不是无差别的一铺到底写法；我们希望它具有变量特征、计算能力、循环能力等等更强的可编程性，这样我们可以少写一些无用的代码；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;可维护性上：更强的可编程性意味着更优质的代码结构，实现复用意味着更简单的目录结构和更强的拓展能力，这两点如果能做到，自然会带来更强的可维护性。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这三点是传统 CSS 所做不到的，也正是预处理器所解决掉的问题。预处理器普遍会具备这样的特性：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;嵌套代码的能力，通过嵌套来反映不同 css 属性之间的层级关系；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;支持定义 css 变量；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;提供计算函数；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;允许对代码片段进行 extend 和 mixin；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;支持循环语句的使用；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;支持将 CSS 文件模块化，实现复用。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;postcss&quot;&gt;后处理器 PostCss&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;（2）PostCss：PostCss 是如何工作的？我们在什么场景下会使用 PostCss？&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;旧的 CSS 代码  -&amp;gt;  PostCss  -&amp;gt;  新的 CSS 代码&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;它和预处理器的不同就在于，预处理器处理的是 类CSS，而 PostCss 处理的就是 CSS 本身。Babel 可以将高版本的 JS 代码转换为低版本的 JS 代码。PostCss 做的是类似的事情：它可以编译尚未被浏览器广泛支持的先进的 CSS 语法，还可以自动为一些需要额外兼容的语法增加前缀。更强的是，由于 PostCss 有着强大的插件机制，支持各种各样的扩展，极大地强化了 CSS 的能力。&lt;/p&gt;

&lt;p&gt;PostCss 在业务中的使用场景非常多：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;提高 CSS 代码的可读性：PostCss 其实可以做类似预处理器能做的工作；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当我们的 CSS 代码需要适配低版本浏览器时，PostCss 的 Autoprefixer 插件可以帮助我们自动增加浏览器前缀；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;允许我们编写面向未来的 CSS：PostCss 能够帮助我们编译 CSS next 代码；&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpack-css&quot;&gt;Webpack 处理 CSS&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;（3）Webpack 能处理 CSS 吗？如何实现？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Webpack 能处理 CSS 吗：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Webpack 在裸奔的状态下，是不能处理 CSS 的，Webpack 本身是一个面向 JavaScript 且只能处理 JavaScript 代码的模块化打包工具；&lt;br&gt;
Webpack 在 loader 的辅助下，是可以处理 CSS 的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如何用 Webpack 实现对 CSS 的处理：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Webpack 中操作 CSS 需要使用的两个关键的 loader：css-loader 和 style-loader&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注意，答出“用什么”有时候可能还不够，面试官会怀疑你是不是在背答案，所以你还需要了解每个 loader 都做了什么事情：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;css-loader：导入 CSS 模块，对 CSS 代码进行编译处理；&lt;/li&gt;
&lt;li&gt;style-loader：创建 style 标签，把 CSS 内容写入标签。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在实际使用中，css-loader 的执行顺序一定要安排在 style-loader 的前面。因为只有完成了编译过程，才可以对 css 代码进行插入；若提前插入了未编译的代码，那么 webpack 是无法理解这坨东西的，它会无情报错。&lt;/p&gt;

&lt;h1 id=&quot;css&quot;&gt;CSS 优化和提高性能的方法有哪些？&lt;/h1&gt;

&lt;p&gt;★★&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;加载性能：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）css 压缩：将写好的 css 进行打包压缩，可以减小文件体积。&lt;br&gt;&lt;br&gt;
（2）css 单一样式：当需要下边距和左边距的时候，很多时候会选择使用 margin:top 0 bottom 0；但 margin-bottom:bottom; margin-left:left;执行效率会更高。&lt;br&gt;&lt;br&gt;
（3）减少使用 @import，建议使用 link，因为后者在页面加载时一起加载，前者是等待页面加载完成之后再进行加载。  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;选择器性能：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）关键选择器（key selector）。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）。CSS选择符是从右到左进行匹配的。当使用后代选择器的时候，浏览器会遍历所有子元素来确定是否是指定的元素等等；&lt;br&gt;&lt;br&gt;
（2）如果规则拥有 ID 选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹配它们了）。&lt;br&gt;&lt;br&gt;
（3）避免使用通配规则，如 *{} 计算次数惊人，只对需要用到的元素进行选择。&lt;br&gt;&lt;br&gt;
（4）尽量少的去对标签进行选择，而是用 class。&lt;br&gt;&lt;br&gt;
（5）尽量少的去使用后代选择器，降低选择器的权重值。后代选择器的开销是最高的，尽量将选择器的深度降到最低，最高不要超过三层，更多的使用类来关联每一个标签元素。&lt;br&gt;&lt;br&gt;
（6）了解哪些属性是可以通过继承而来的，然后避免对这些属性重复指定规则。  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;渲染性能：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）慎重使用高性能属性：浮动、定位。&lt;br&gt;&lt;br&gt;
（2）尽量减少页面重排、重绘。&lt;br&gt;&lt;br&gt;
（3）去除空规则：｛｝。空规则的产生原因一般来说是为了预留样式。去除这些空规则无疑能减少 css 文档体积。&lt;br&gt;&lt;br&gt;
（4）属性值为0时，不加单位。&lt;br&gt;&lt;br&gt;
（5）属性值为浮动小数0.**，可以省略小数点之前的0。&lt;br&gt;&lt;br&gt;
（6）标准化各种浏览器前缀：带浏览器前缀的在前。标准属性在后。&lt;br&gt;&lt;br&gt;
（7）不使用 @import 前缀，它会影响 css 的加载速度。&lt;br&gt;&lt;br&gt;
（8）选择器优化嵌套，尽量避免层级过深。&lt;br&gt;&lt;br&gt;
（9）css 雪碧图，同一页面相近部分的小图标，方便使用，减少页面的请求次数，但是同时图片本身会变大，使用时，优劣考虑清楚，再使用。&lt;br&gt;&lt;br&gt;
（10）正确使用 display 的属性，由于 display 的作用，某些样式组合会无效，徒增样式体积的同时也影响解析性能。&lt;br&gt;&lt;br&gt;
（11）不滥用 web 字体。对于中文网站来说 WebFonts 可能很陌生，国外却很流行。web fonts 通常体积庞大，而且一些浏览器在下载 web fonts 时会阻塞页面渲染损伤性能。  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;可维护性、健壮性：&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;（1）将具有相同属性的样式抽离出来，整合并通过 class 在页面中进行使用，提高 css 的可维护性。&lt;br&gt;&lt;br&gt;
（2）样式与内容分离：将 css 代码定义到外部 css 中。  &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CSS 面试题集合 -- CSS 基础</title>
   <link href="/css/2023/08/29/css-interview"/>
   <updated>2023-08-29T00:00:00+08:00</updated>
   <id>/css/2023/08/29/css-interview</id>
   <content type="html">&lt;h1 id=&quot;css-display-block-inline&quot;&gt;CSS选择器、display:block/inline、隐藏元素&lt;/h1&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2023/7-8-9/css.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h1 id=&quot;selector&quot;&gt;selector 选择器&lt;/h1&gt;

&lt;p&gt;★★★★&lt;/p&gt;

&lt;h2 id=&quot;css&quot;&gt;CSS 选择器有哪些？&lt;/h2&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;格式&lt;/th&gt;
&lt;th&gt;优先级权重&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id选择器&lt;/td&gt;
&lt;td&gt;# myid&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;类选择器&lt;/td&gt;
&lt;td&gt;.myclassname&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;伪类选择器&lt;/td&gt;
&lt;td&gt;a:hover, li:nth-child&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性选择器&lt;/td&gt;
&lt;td&gt;a[target = &amp;quot;_blank&amp;quot;]&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标签选择器&lt;/td&gt;
&lt;td&gt;div, h1, p&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;伪元素选择器&lt;/td&gt;
&lt;td&gt;div::after&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;相邻兄弟选择器&lt;/td&gt;
&lt;td&gt;h1 + p&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;子选择器&lt;/td&gt;
&lt;td&gt;ul &amp;gt;li&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;后代选择器&lt;/td&gt;
&lt;td&gt;li a&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;通配符选择器&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h2 id=&quot;priority&quot;&gt;选择器 priority 优先级&lt;/h2&gt;

&lt;p&gt;★★★★&lt;/p&gt;

&lt;p&gt;!important &amp;gt; 行内样式 &amp;gt; ID选择器 &amp;gt; 类选择器 &amp;gt; 标签选择器 &amp;gt; 通配符 &amp;gt; 继承 &amp;gt; 浏览器默认属性&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;第一优先级：!important 会覆盖页面内任何位置的元素样式，权值为无穷大&lt;br&gt;&lt;/li&gt;
&lt;li&gt;行内（内联）样式，如 style=&amp;quot;color: green&amp;quot;，权值为 1000&lt;br&gt;&lt;/li&gt;
&lt;li&gt;ID 选择器，如 #app，权值为 100&lt;br&gt;&lt;/li&gt;
&lt;li&gt;类、伪类、属性选择器，如 .foo, :first-child, div[class=&amp;quot;foo&amp;quot;]，权值为 10&lt;br&gt;&lt;/li&gt;
&lt;li&gt;标签、伪元素选择器，如 div::first-line，权值为 1&lt;br&gt;&lt;/li&gt;
&lt;li&gt;通用选择器（*）、子选择器（&amp;gt;）和相邻同胞选择器（+），权值为 0&lt;br&gt;&lt;/li&gt;
&lt;li&gt;继承的样式没有权值，优先级最低&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;行内（内联）样式：&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;color:red;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
内部（内嵌）样式：&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;中嵌入代码&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
外部样式：&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&amp;gt;&lt;/span&gt; 或 @import引入.css文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;❶ CSS 的 3 种样式表的权重（优先级）：行内 &amp;gt; 内部 &amp;gt; 外部 &lt;/li&gt;
&lt;li&gt;❷ 使用不同的选择器修饰同一个元素的时候，考虑选择器的权重值，权重值相加，权重值大的样式保留。&lt;/li&gt;
&lt;li&gt;❸ 权重相同的情况下，位于后面的样式会覆盖前面的样式&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;count&quot;&gt;选择器权重计算 count&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;/*权重为 100+1=101 */  
#id1 div {...}

/*权重为 10+1=11 */  
.class1 div {...}

/*权重为 10+10+1=21 */
.class1 .class2 div {...}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;css&quot;&gt;浏览器是怎样解析CSS选择器的？&lt;/h2&gt;

&lt;p&gt;CSS 选择器的解析是 &lt;code&gt;从右向左&lt;/code&gt; 解析的。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;若从左向右的匹配，发现不符合规则，需要进行回溯，会损失很多性能。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;若从右向左匹配，先找到所有的最右节点，对于每一个节点，向上寻找其父节点直到找到根元素或满足条件的匹配规则，则结束这个分支的遍历。两种匹配规则的性能差别很大，是因为从右向左的匹配在第一步就筛选掉了大量的不符合条件的最右节点（叶子节点），而从左向右的匹配规则的性能都浪费在了失败的查找上面。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;而在 CSS 解析完毕后，需要将解析的结果与 DOM Tree 的内容一起进行分析建立一棵 Render Tree，最终用来进行绘图。在建立 Render Tree 时，浏览器就要为每个 DOM Tree 中的元素根据 CSS 的解析结果（Style Rules）来确定生成怎样的 Render Tree。&lt;/p&gt;

&lt;h1 id=&quot;css&quot;&gt;CSS中可继承与不可继承属性有哪些&lt;/h1&gt;

&lt;p&gt;★★★&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可继承的样式： font-size font-family color, ul li dl dd dt（字体属性，列表相关）;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;不可继承的样式：border padding margin width height (盒模型相关的属性);&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;display&quot;&gt;display&lt;/h1&gt;

&lt;h2 id=&quot;display&quot;&gt;display常用的属性值及其作用&lt;/h2&gt;

&lt;p&gt;★★★★&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性值&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;元素不显示，并且会从文档流中移除&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;block&lt;/td&gt;
&lt;td&gt;块级元素。默认宽度为父元素宽度，可设置宽高，换行显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inline&lt;/td&gt;
&lt;td&gt;行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inline-block&lt;/td&gt;
&lt;td&gt;默认宽度为内容宽度，可以设置宽高，同行显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list-item&lt;/td&gt;
&lt;td&gt;像块类型元素一样显示，并添加样式列表标记。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;table&lt;/td&gt;
&lt;td&gt;此元素会作为块级表格来显示。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inherit&lt;/td&gt;
&lt;td&gt;规定应该从父元素继承 display 属性的值。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h2 id=&quot;display-block-inline-inline-block&quot;&gt;display的block、inline和inline-block的区别&lt;/h2&gt;

&lt;p&gt;★★★★&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;display 的 block、inline 和 inline-block 的区别：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）block： 会独占一行，多个元素会另起一行，可以设置 width、height、margin 和 padding 属性；  &lt;/p&gt;

&lt;p&gt;（2）inline： 元素不会独占一行，设置 width、height 属性无效。但可以设置水平方向的 margin 和 padding 属性，不能设置垂直方向的 padding 和 margin；  &lt;/p&gt;

&lt;p&gt;（3）inline-block： 在内联和块之间提供了一个中间状态，使用之后生成一个内联块元素，该元素 width 和 height 属性会生效，padding，margin，以及 border 会推开其他元素。但是，它不会跳转到新行。  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对于块级元素和行内元素，其特点如下：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;（1）块级元素&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;可以设置宽高；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;设置 margin 和 padding 都有效；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;可以自动换行；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;多个块状，默认排列从上到下。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;（2）行内元素&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;设置宽高无效；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;可以设置水平方向的 margin 和 padding 属性，不能设置垂直方向的 padding 和 margin；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;不会自动换行；&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;hide&quot;&gt;hide 隐藏元素的方式有哪些&lt;/h1&gt;

&lt;p&gt;★★★★&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;① 设置 display: none；样式。这个样式会让元素在页面上彻底消失。元素本来占有的空间，也会被其他元素占有，所以，他会导致浏览器的重排和重绘。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;② 设置 visibilty：hidden；的样式。它和 display: none；的区别在于，元素在页面消失之后，它原本占有的空间依然会保留，所以，他只会导致浏览器的重绘，而不会重排。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;③ 设置 opacity：0；透明度为0。元素在页面中仍然占据空间。如果该元素已经绑定一些事件，如 click 事件，那么点击该区域，也能触发点击事件的。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;④ position: absolute; 通过使用绝对定位将元素移除可视区域内，以此来实现元素的隐藏。&lt;/li&gt;
&lt;li&gt;⑤ z-index: 负值; 来使其他元素遮盖住该元素，以此来实现隐藏。&lt;/li&gt;
&lt;li&gt;⑥ transform: scale(0,0); 将元素缩放为 0，来实现元素的隐藏。这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。&lt;/li&gt;
&lt;li&gt;⑦ clip/clip-path; 使用元素裁剪的方法来实现元素的隐藏，这种方法下，元素仍在页面中占据位置，但是不会响应绑定的监听事件。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;常用的是 ①②③ 这三种方法。&lt;/p&gt;

&lt;h1 id=&quot;display-none-visibility-hidden&quot;&gt;display:none与visibility:hidden的区别&lt;/h1&gt;

&lt;p&gt;★★★★&lt;/p&gt;

&lt;p&gt;这两个属性都是让元素隐藏，不可见。两者区别如下：&lt;/p&gt;

&lt;p&gt;（1）在渲染树中  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;display:none 会让元素完全从渲染树中消失，渲染时不会占据任何空间；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;visibility:hidden 不会让元素从渲染树中消失，渲染的元素还会占据相应的空间，只是内容不可见。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（2）是否是继承属性&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;display:none 是非继承属性，子孙节点会随着父节点从渲染树消失，通过修改子孙节点的属性也无法显示；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;visibility:hidden 是继承属性，子孙节点消失是由于继承了 hidden，通过设置 visibility:visible 可以让子孙节点显示；&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（3）修改常规文档流中元素的 display 通常会造成文档的重排，但是修改 visibility 属性只会造成本元素的重绘；&lt;/p&gt;

&lt;p&gt;（4）如果使用读屏器，设置为 display:none 的内容不会被读取，设置为 visibility:hidden 的内容会被读取。&lt;/p&gt;

&lt;h1 id=&quot;transition-animation&quot;&gt;transition 和 animation 的区别&lt;/h1&gt;

&lt;p&gt;★★&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;transition 是过度属性，强调过度，它的实现需要触发一个事件（比如鼠标移动上去，焦点，点击等）才执行动画。tranistion 只能设定头尾, transition 中所有样式属性都要一起变化。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;animation 是动画属性，它的实现不需要触发事件，设定好时间之后可以自己执行，且可以设定循环次数。animation 可以设定每一帧的样式和时间,且可以设置每一帧需要单独变化的样式属性。 &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;translate&quot;&gt;为什么有时候⽤translate来改变位置⽽不是定位？&lt;/h1&gt;

&lt;p&gt;★&lt;/p&gt;

&lt;p&gt;translate 是 transform 属性的⼀个值。改变 transform 或 opacity 不会触发浏览器重新布局（reflow）或重绘（repaint），只会触发复合（compositions）。⽽改变绝对定位会触发重新布局，进⽽触发重绘和复合。transform 使浏览器为元素创建⼀个 GPU 图层，但改变绝对定位会使⽤到 CPU。 因此 translate() 更⾼效，可以缩短平滑动画的绘制时间。 ⽽ translate 改变位置时，元素依然会占据其原始空间，绝对定位就不会发⽣这种情况。&lt;/p&gt;

&lt;h1 id=&quot;li&quot;&gt;li 空白间隔&lt;/h1&gt;

&lt;p&gt;★&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;li 与 li 之间有看不见的空白间隔是什么原因引起的？如何解决？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;浏览器会把 inline 内联元素间的空白字符（空格、换行、Tab等）渲染成一个空格。为了美观，通常是一个&amp;lt;li&amp;gt;放在一行，这导致&amp;lt;li&amp;gt;换行后产生换行字符，它变成一个空格，占用了一个字符的宽度。&lt;/p&gt;

&lt;p&gt;解决办法：&lt;/p&gt;

&lt;p&gt;（1）为&amp;lt;li&amp;gt;设置 float:left。不足：有些容器是不能设置浮动，如左右切换的焦点图等。&lt;/p&gt;

&lt;p&gt;（2）将所有&amp;lt;li&amp;gt;写在同一行。不足：代码不美观。&lt;/p&gt;

&lt;p&gt;（3）将&amp;lt;ul&amp;gt;内的字符尺寸直接设为0，即 font-size:0。不足：&amp;lt;ul&amp;gt;中的其他字符尺寸也被设为0，需要额外重新设定其他字符尺寸，且在 Safari 浏览器依然会出现空白间隔。&lt;/p&gt;

&lt;p&gt;（4）消除&amp;lt;ul&amp;gt;的字符间隔 letter-spacing:-8px，不足：这也设置了&amp;lt;li&amp;gt;内的字符间隔，因此需要将&amp;lt;li&amp;gt;内的字符间隔设为默认 letter-spacing:normal。&lt;/p&gt;

&lt;h1 id=&quot;line-height&quot;&gt;对line-height 的理解及其赋值方式&lt;/h1&gt;

&lt;p&gt;★&lt;br&gt;
&lt;strong&gt;（1）line-height的概念：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;line-height 指一行文本的高度，包含了字间距，实际上是下一行基线到上一行基线距离；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果一个标签没有定义 height 属性，那么其最终表现的高度由 line-height 决定；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;一个容器没有设置高度，那么撑开容器高度的是 line-height，而不是容器内的文本内容；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;把 line-height 值设置为 height 一样大小的值可以实现单行文字的垂直居中；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;line-height 和 height 都能撑开一个高度；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;（2）line-height 的赋值方式：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;带单位：px 是固定值，而 em 会参考父元素 font-size 值计算自身的行高&lt;br&gt;&lt;/li&gt;
&lt;li&gt;纯数字：会把比例传递给后代。例如，父级行高为 1.5，子元素字体为 18px，则子元素行高为 1.5 * 18 = 27px&lt;br&gt;&lt;/li&gt;
&lt;li&gt;百分比：将计算后的值传递给后代&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;text-overflow&quot;&gt;text-overflow 溢出隐藏&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;单行、多行文本溢出隐藏&lt;/strong&gt;&lt;br&gt;
★★★★&lt;/p&gt;

&lt;p&gt;单行文本溢出&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;溢出隐藏&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;text-overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ellipsis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;溢出用省略号显示&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;nowrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;规定段落中的文本不进行换行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;多行文本溢出&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;溢出隐藏&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;text-overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ellipsis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;溢出用省略号显示&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-webkit-box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;作为弹性伸缩盒子模型显示。&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-box-orient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;vertical&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;设置伸缩盒子的子元素排列方式：从上到下垂直排列&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-line-clamp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;显示的行数&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：由于上面的三个属性都是 CSS3 的属性，没有浏览器可以兼容，所以要在前面加一个 -webkit- 来兼容一部分浏览器。&lt;/p&gt;

&lt;h1 id=&quot;z-index&quot;&gt;z-index&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;z-index 属性在什么情况下会失效&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通常 z-index 的使用是在有两个重叠的标签，在一定的情况下控制其中一个在另一个的上方或者下方出现。z-index 值越大就越是在上层。z-index 元素的 position 属性需要是 relative， absolute 或是 fixed。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;z-index属性在下列情况下会失效：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;父元素 position 为 relative 时，子元素的 z-index 失效。解决：父元素 position 改为 absolute 或 static；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;元素没有设置 position 属性为非 static 属性。解决：设置该元素的 position 属性为 relative，absolute 或是 fixed 中的一种；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;元素在设置 z-index 的同时还设置了 float 浮动。解决：float去除，改为 display：inline-block；&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;more&quot;&gt;more&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_45506717/article/details/131285712&quot;&gt;高频前端面试题汇总之CSS篇&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CSS 面试题 - 图像格式以及雪碧图</title>
   <link href="/css/2023/08/29/css-image"/>
   <updated>2023-08-29T00:00:00+08:00</updated>
   <id>/css/2023/08/29/css-image</id>
   <content type="html">&lt;h1 id=&quot;css&quot;&gt;CSS图像格式、雪碧图&lt;/h1&gt;

&lt;h1 id=&quot;png-jpg-webp&quot;&gt;png、jpg、Webp&lt;/h1&gt;

&lt;p&gt;png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过 webp？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JPG（JPEG）：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;jpg 是一种有损压缩的方式，它会放弃图片的某些细节。所以要是对图片质量的要求不是很高，可以采用 jpg 的保存方式。jpg 是最普遍在万维网上被用来储存和传输照片的格式&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;优点：支持百万种色彩、压缩比高（180：1）&lt;/p&gt;

&lt;p&gt;缺点：有损压缩、不支持图形渐进、不支持背景透明、不支持动画&lt;/p&gt;

&lt;p&gt;适用：色彩丰富的照片适合jpg的保存方式&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;PNG：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;采用的是无损压缩，其目的是为了取代 gif。&lt;/p&gt;

&lt;p&gt;按存储方式不同，PNG可分为：PNG8、PNG24、PNG32&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;优点：无损压缩、支持间隔渐进显示（但会造成图片过大）、PNG24和PNG32支持颜色很多、能保留透明与半透明区域&lt;/p&gt;

&lt;p&gt;缺点：不支持动画、PNG24和PNG32对IE6支持不好、很多网站不支持PNG上传&lt;/p&gt;

&lt;p&gt;适用：小图标、平铺背景等色彩比较少的小型图片。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;GIF：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gif是使用了一种叫作LZW的算法进行压缩的，水平压缩（像素由上到下水平压缩），这也意味着同等条件下，横向的gif图片比竖向的gif图片更加小。例如500*10的图片比10*500的图片更加小。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;优点：无损压缩、支持背景透明、支持动画、支持图形渐进&lt;/p&gt;

&lt;p&gt;缺点：只有256种颜色，对于色彩丰富的图片压缩效果不好&lt;/p&gt;

&lt;p&gt;适用：小图标、线条、图纸、色彩不丰富的图片&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Webp格式：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Google开发的一种旨在加快图片加载速度的图片格式。图片压缩体积大约只有JPEG的2/3，并能节省大量的服务器带宽资源和数据空间。Facebook Ebay等知名网站已经开始测试并使用WebP格式。&lt;/p&gt;

&lt;p&gt;目前所知道的只有高版本的W3C浏览器才支持这种格式，比如chorme39+，safari7+等等。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;优点：体积小&lt;/p&gt;

&lt;p&gt;缺点：有损压缩、兼容性不好（android高版本、W3C高版本浏览器支持这种格式、ios不支持）&lt;/p&gt;

&lt;p&gt;适用：展望未来&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GIF/PNG和JPG这三种格式的图片被广泛应用在现今的互联网中,gif曾在过去互联网初期慢速的情况下几乎是做到了大一统的地位,而现如今随着互联网技术应用和硬件条件的提高,png和jpg格式的图片越来越多的被应用,gif昔日的辉煌一去不复, webp图片格式现在还不普及：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;体积比较：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;webp&amp;lt;JGP&amp;lt;PNG&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/playboyanta123/article/details/44655749&quot;&gt;Gif,png,jpg,webp几种图片格式整理&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sohu.com/a/111891781_165433&quot;&gt;gif、jpg、png、webp图片格式比较&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;css-sprites&quot;&gt;CSS Sprites 雪碧图&lt;/h1&gt;

&lt;p&gt;CSS Sprites（雪碧图），将一个页面涉及到的所有图片都包含到一张大图中去，然后利用 CSS的 background-image，background-repeat，background-position 属性的组合进行背景定位。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;利用CSS Sprites 能很好地减少网页的 http 请求，从而大大提高了页面的性能，这是 CSS Sprites 最大的优点；&lt;/li&gt;
&lt;li&gt;CSS Sprites 能减少图片的字节，把3张图片合并成1张图片的字节总是小于这3张图片的字节总和。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在图片合并时，要把多张图片有序的、合理的合并成一张图片，还要留好足够的空间，防止板块内出现不必要的背景。在宽屏及高分辨率下的自适应页面，如果背景不够宽，很容易出现背景断裂；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CSS Sprites 在开发的时候相对来说有点麻烦，需要借助 photoshop 或其他工具来对每个背景单元测量其准确的位置。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;维护方面：CSS Sprites 在维护的时候比较麻烦，页面背景有少许改动时，就要改这张合并的图片，无需改的地方尽量不要动，这样避免改动更多的 CSS，如果在原来的地方放不下，又只能（最好）往下加图片，这样图片的字节就增加了，还要改动 CSS。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3x-2x&quot;&gt;@3x, @2x 图片&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;什么是物理像素，逻辑像素和像素密度，为什么在移动端开发时需要用到@3x, @2x这种图片？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;以 iPhone XS 为例，当写 CSS 代码时，针对于单位 px，其宽度为 414px &amp;amp; 896px，也就是说当赋予一个 DIV 元素宽度为 414px，这个 DIV 就会填满手机的宽度；&lt;/p&gt;

&lt;p&gt;而如果有一把尺子来实际测量这部手机的物理像素，实际为 1242*2688 物理像素；经过计算可知，1242/414=3，也就是说，在单边上，一个逻辑像素 = 3个物理像素，就说这个屏幕的像素密度为 3，也就是常说的 3 倍屏。&lt;/p&gt;

&lt;p&gt;对于图片来说，为了保证其不失真，1个图片像素至少要对应一个物理像素，假如原始图片是 500300 像素，那么在 3 倍屏上就要放一个 1500900 像素的图片才能保证 1 个物理像素至少对应一个图片像素，才能不失真。&lt;/p&gt;

&lt;p&gt;当然，也可以针对所有屏幕，都只提供最高清图片。虽然低密度屏幕用不到那么多图片像素，而且会因为下载多余的像素造成带宽浪费和下载延迟，但从结果上说能保证图片在所有屏幕上都不会失真。&lt;/p&gt;

&lt;p&gt;还可以使用 CSS 媒体查询来判断不同的像素密度，从而选择不同的图片:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;my-image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;low&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#my-image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>CSS面试题</title>
   <link href="/css/2023/08/27/CSS-interview-questions"/>
   <updated>2023-08-27T00:00:00+08:00</updated>
   <id>/css/2023/08/27/CSS-interview-questions</id>
   <content type="html">&lt;h1 id=&quot;css&quot;&gt;CSS面试题&lt;/h1&gt;

&lt;h1 id=&quot;box-model&quot;&gt;box model&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;介绍一下标准的CSS的盒子模型？低版本IE的盒子模型有什么不同的？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;（1）有两种， IE 盒子模型、W3C 盒子模型；&lt;br&gt;&lt;br&gt;
（2）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)；&lt;br&gt;&lt;br&gt;
（3）区  别： IE的content部分把 border 和 padding计算了进去;  &lt;/p&gt;

&lt;p&gt;解决IE8及更早版本不兼容问题可以在HTML页面声明 &amp;lt;!DOCTYPE html&amp;gt;即可。&lt;/p&gt;

&lt;p&gt;在 CSS 中定义的宽和高，其实都是内容区域的宽和高，padding，border 和 margin 被排除在盒子尺寸之外。&lt;/p&gt;

&lt;p&gt;所以对于一个定义了宽度的盒子来说，其尺寸的计算方式：&lt;/p&gt;

&lt;p&gt;实际宽度 = margin(left+right) + border(left+right) + padding(left+right) + width(定义的值)&lt;/p&gt;

&lt;p&gt;实际高度 = margin(top+bottom) + border(top+bottom) + padding(top+bottom) + height(定义的值)&lt;/p&gt;

&lt;p&gt;可以利用 margin 调整两个元素之间的距离，用 padding 调整内容与元素边框之间的距离（留白）。这是标准的盒模型&lt;/p&gt;

&lt;h1 id=&quot;pseudo-class&quot;&gt;Pseudo class&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;CSS3新增伪类有那些？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;举例：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;p:first-of-type 选择属于其父元素的首个 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素的每个 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素。
p:last-of-type  选择属于其父元素的最后 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素的每个 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素。
p:only-of-type  选择属于其父元素唯一的 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素的每个 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素。
p:only-child        选择属于其父元素的唯一子元素的每个 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素。
p:nth-child(2)  选择属于其父元素的第二个子元素的每个 &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 元素。

:after          在元素之前添加内容,也可以用来做清除浮动。
:before         在元素之后添加内容
:enabled        
:disabled       控制表单控件的禁用状态。
:checked        单选框或复选框被选中。&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;layout&quot;&gt;页面布局有哪几种方式？layout&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;普通布局 display:inline/inline-block&lt;br&gt;&lt;/li&gt;
&lt;li&gt;浮动布局 float:left/right&lt;br&gt;&lt;/li&gt;
&lt;li&gt;定位布局 position: absolute/relative&lt;br&gt;&lt;/li&gt;
&lt;li&gt;弹性布局 display: flex&lt;br&gt;&lt;/li&gt;
&lt;li&gt;多列布局 column-count&lt;br&gt;&lt;/li&gt;
&lt;li&gt;表格布局 display:table/table-row&lt;br&gt;&lt;/li&gt;
&lt;li&gt;栅格布局 display: grid&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;div-center&quot;&gt;div center&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;如何居中div？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;水平居中：给div设置一个宽度，然后添加margin:0 auto属性&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;让绝对定位的div居中&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt; &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;/* 方便看效果 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;水平垂直居中一&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;err&quot;&gt;确定容器的宽高&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;宽&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;高&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;的层&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;设置层的外边距&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;的父元素需要设定高度，否则&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;无效&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;/* 相对定位或绝对定位均可 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-150px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-250px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;/* 外边距为自身宽高的一半 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;/* 方便看效果 */&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;水平垂直居中二&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt; &lt;span class=&quot;err&quot;&gt;未知容器的宽高，利用&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;属性&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;/* 相对定位或绝对定位均可 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;500px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;/* 方便看效果 */&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;水平垂直居中三&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;err&quot;&gt;利用&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;flex&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;布局&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;实际使用时应考虑兼容性&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;nl&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;/* 垂直居中 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;/* 水平居中 */&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;/* 方便看效果 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;position&quot;&gt;position&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;position的值relative和absolute定位原点是？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;absolute&lt;br&gt;&lt;br&gt;
生成绝对定位的元素，相对于值不为 static的第一个父元素进行定位。&lt;/p&gt;

&lt;p&gt;fixed （老IE不支持）&lt;br&gt;&lt;br&gt;
生成绝对定位的元素，相对于浏览器窗口进行定位。&lt;/p&gt;

&lt;p&gt;relative&lt;br&gt;&lt;br&gt;
生成相对定位的元素，相对于其正常位置进行定位。&lt;/p&gt;

&lt;p&gt;static&lt;br&gt;&lt;br&gt;
默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。&lt;/p&gt;

&lt;p&gt;inherit&lt;br&gt;&lt;br&gt;
规定从父元素继承 position 属性的值。&lt;/p&gt;

&lt;h1 id=&quot;css3-new-features&quot;&gt;css3 new features&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;CSS3有哪些新特性？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;❶ 新增各种 CSS 选择器  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last-child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 匹配父元素的最后一个子元素 E。 */&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nth-child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 匹配父元素的第 n 个子元素 E。 */&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nth-last-child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 匹配父元素的倒数第 n 个子元素 E。 */&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 所有 class 不是&quot;input&quot;的节点。 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❷ @Font-face 字体样式  &lt;/p&gt;

&lt;p&gt;Font-face 可以用来加载字体样式，而且它还能够加载服务器端的字体文件，让客户端显示客户端所没有安装的字体。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BorderWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;nl&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(BORDERW0.eot)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❸ 边框与圆角&lt;/p&gt;

&lt;p&gt;圆角 border-radius: 8px&lt;br&gt;&lt;br&gt;
边框效果 border-image: url（bt_blue.png） 0 10;  &lt;/p&gt;

&lt;p&gt;❹ 颜色透明度 color: rgba（255, 0, 0, 0.75）&lt;/p&gt;

&lt;p&gt;❺ 多列布局（multi-column layout）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.mul-col&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;column-count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 设置列的具体个数 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;column-gap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 两列之间的缝隙间隔 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;column-rule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 规定列之间的宽度、样式和颜色 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mul-col&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;新手上路&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;付款方式&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;淘宝特色&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;缺点：兼容性不好，还不够成熟。还不能用在实际项目中。&lt;br&gt;
应用：分栏布局实现古书的方式。&lt;/p&gt;

&lt;p&gt;❻ 弹性盒模型 display: flex;&lt;/p&gt;

&lt;p&gt;❼ 阴影和倒影&lt;/p&gt;

&lt;p&gt;阴影 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;（&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;text-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;倒影 &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;box-reflect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;below&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❽ 文字效果&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;text-shadow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 文本阴影 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nowrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 文本换行设置 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;word-break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;break-all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;/* 单词换行设置 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;text-overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ellipsis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 单词溢出的处理 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❾ 渐变（gradient）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;-webkit-gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#2A8BBE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#FE280E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里 linear 表示线性渐变，从左到右，由蓝色（#2A8BBE）到红色（#FE280E）的渐变。&lt;/p&gt;

&lt;p&gt;❿① transform 转换&lt;/p&gt;

&lt;p&gt;Transform 属性应用于元素的2D或3D转换。这个属性允许你将元素旋转，缩放，移动，倾斜等。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/* 移动 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 旋转 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 缩放 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skew&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 倾斜 */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.866&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0.866&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* 把所有 2D 转换方法组合在一起 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❿② transition 过渡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;❿③ 动画 @keyframes、animation&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfirst&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;-webkit-animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfirst&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* Safari and Chrome */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myfirst&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;yellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/lxcao/article/details/52797914&quot;&gt;CSS3有哪些新特性？&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;flexbox&quot;&gt;Flexbox&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;请解释一下CSS3的Flexbox（弹性盒布局模型）,以及适用场景？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一个用于页面布局的全新CSS3功能，Flexbox可以把列表放在同一个方向（从上到下排列，从左到右），并让列表能延伸到占用可用的空间。&lt;/p&gt;

&lt;p&gt;较为复杂的布局还可以通过嵌套一个伸缩容器（flex container）来实现。&lt;/p&gt;

&lt;p&gt;采用Flex布局的元素，称为Flex容器（flex container），简称&amp;quot;容器&amp;quot;。&lt;/p&gt;

&lt;p&gt;它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称&amp;quot;项目&amp;quot;。&lt;/p&gt;

&lt;p&gt;常规布局是基于块和内联流方向，而Flex布局是基于flex-flow流可以很方便的用来做局中，能对不同屏幕大小自适应。&lt;/p&gt;

&lt;p&gt;在布局上有了比以前更加灵活的空间。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3cplus.com/css3/flexbox-basics.html&quot;&gt;具体&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;css3-pseudo-class&quot;&gt;CSS3 新增伪类 pseudo class&lt;/h1&gt;

&lt;p&gt;❶ 动态伪类&lt;/p&gt;

&lt;p&gt;:link&lt;br&gt;&lt;br&gt;
:visited&lt;br&gt;&lt;br&gt;
:hover&lt;br&gt;&lt;br&gt;
:active  &lt;/p&gt;

&lt;p&gt;❷ UI元素状态伪类&lt;/p&gt;

&lt;p&gt;:enabled&lt;br&gt;&lt;br&gt;
:disabled&lt;br&gt;&lt;br&gt;
:checked&lt;/p&gt;

&lt;p&gt;❸ :nth 选择器&lt;/p&gt;

&lt;p&gt;❹ 否定选择器（:not）&lt;/p&gt;

&lt;p&gt;❺ 伪元素&lt;/p&gt;

&lt;p&gt;::first-letter&lt;br&gt;&lt;br&gt;
::first-line&lt;br&gt;&lt;br&gt;
::before&lt;br&gt;&lt;br&gt;
::after  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3school.com.cn/css/css_pseudo_classes.asp&quot;&gt;https://www.w3school.com.cn/css/css_pseudo_classes.asp&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;pseudo-element&quot;&gt;伪类和伪元素的区别？pseudo-element&lt;/h1&gt;

&lt;p&gt;在 CSS3 中，伪类和伪元素的&lt;strong&gt;语法&lt;/strong&gt;不同&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;伪类，单冒号   :link  :hover&lt;br&gt;&lt;/li&gt;
&lt;li&gt;伪元素，双冒号  ::before   ::after&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于css3之前已经存在的伪元素，也是支持单冒号的，但我们在开发过程中还是要尽量规范写法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;本质&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;伪类本质上是为了弥补常规 css 选择器的不足，以便获取到更多信息&lt;br&gt;&lt;/li&gt;
&lt;li&gt;伪元素本质上是创建了一个有内容的虚拟容器&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;作用对象&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;伪类作用对象是整个元素，比如整个链接、段落、div等&lt;br&gt;&lt;/li&gt;
&lt;li&gt;伪元素作用于元素的一部分，比如一个段落的第一行或者第一个字母&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;【区别】&lt;/p&gt;

&lt;p&gt;伪类：将特殊的效果添加到特定选择器上。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#FF00FF&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;伪元素：在内容元素的前后插入额外的元素或样式，但是这些元素实际上并不在文档中生成。它们只在外部显示可见，但不会在文档的源代码中找到它们，因此，称为“伪”元素。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;第一章：&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;Hot!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::first-line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;::first-letter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总结来看，伪类的操作对象是文档树中已有的元素，而伪元素则是创建文档树以外的元素并为其添加样式。所以二者最核心区别就在于，&lt;code&gt;是否创造了“新的元素&amp;quot;&lt;/code&gt;。&lt;/p&gt;

&lt;h1 id=&quot;triangle&quot;&gt;Triangle&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;用纯CSS创建一个三角形的原理是什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;把上、左、右三条边隐藏掉（颜色设为 transparent）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;span class=&quot;nl&quot;&gt;border-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;span class=&quot;nl&quot;&gt;border-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;span class=&quot;nl&quot;&gt;border-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;layout-ping&quot;&gt;layout-PING&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;一个满屏 品 字布局 如何设计?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上面的div宽100%，&lt;/p&gt;

&lt;p&gt;下面的两个div分别宽50%，&lt;/p&gt;

&lt;p&gt;然后用float或者inline使其不换行即可&lt;/p&gt;

&lt;h1 id=&quot;layout-equal-height&quot;&gt;layout-Equal-height&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;css多列等高如何实现？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;利用padding-bottom|margin-bottom正负值相抵；&lt;/p&gt;

&lt;p&gt;设置父容器设置超出隐藏（overflow:hidden），这样子父容器的高度就还是它里面的列没有设定&lt;/p&gt;

&lt;p&gt;padding-bottom时的高度，当它里面的任一列高度增加了，则父容器的高度被撑到里面最高那列的高度，&lt;/p&gt;

&lt;p&gt;其他比这列矮的列会用它们的padding-bottom补偿这部分高度差。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#parentDiv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.right&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-10000px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://pengyouyi.site/css/2017/03/22/css-layout&quot;&gt;css等高布局&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;12px&quot;&gt;12px&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决&lt;/p&gt;

&lt;h1 id=&quot;hover&quot;&gt;hover&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;超链接访问过后hover样式就不出现了 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;被点击访问过的超链接样式不在具有hover和active了解决方法是改变CSS属性的排列顺序:&lt;/p&gt;

&lt;p&gt;L-V-H-A :  a:link {} a:visited {} a:hover {} a:active {}&lt;br&gt;&lt;br&gt;
记忆顺序：喜欢（L-o-V-e），讨厌（H-A-t-e）&lt;/p&gt;

&lt;h1 id=&quot;css-init&quot;&gt;css init&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;为什么要初始化CSS样式。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。&lt;/p&gt;

&lt;p&gt;当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。&lt;/p&gt;

&lt;p&gt;最简单的初始化方法： * {padding: 0; margin: 0;} （强烈不建议）&lt;/p&gt;

&lt;p&gt;淘宝的样式初始化代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }
body, button, input, select, textarea { font:12px/1.5tahoma, arial, \5b8b\4f53; }
h1, h2, h3, h4, h5, h6{ font-size:100%; }
address, cite, dfn, em, var { font-style:normal; }
code, kbd, pre, samp { font-family:couriernew, courier, monospace; }
small{ font-size:12px; }
ul, ol { list-style:none; }
a { text-decoration:none; }
a:hover { text-decoration:underline; }
sup { vertical-align:text-top; }
sub{ vertical-align:text-bottom; }
legend { color:#000; }
fieldset, img { border:0; }
button, input, select, textarea { font-size:100%; }
table { border-collapse:collapse; border-spacing:0; }&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;visibility-collapse&quot;&gt;visibility-collapse&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;CSS里的visibility属性有个collapse属性值是干嘛用的？在不同浏览器下以后什么区别？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于普通元素visibility:collapse;会将元素完全隐藏,不占据页面布局空间,与display:none;表现相同.&lt;/p&gt;

&lt;p&gt;如果目标元素为table,visibility:collapse;将table隐藏,但是会占据页面布局空间.&lt;/p&gt;

&lt;p&gt;仅在Firefox下起作用,IE会显示元素,Chrome会将元素隐藏,但是占据空间.&lt;/p&gt;

&lt;h1 id=&quot;display&quot;&gt;display&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;position跟display、margin collapse、overflow、float这些特性相互叠加后会怎么样？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果元素的display为none,那么元素不被渲染,position,float不起作用,&lt;/p&gt;

&lt;p&gt;如果元素拥有position:absolute;或者position:fixed;属性那么元素将为绝对定位,float不起作用.&lt;/p&gt;

&lt;p&gt;如果元素float属性不是none,元素会脱离文档流,根据float属性值来显示.&lt;/p&gt;

&lt;p&gt;有浮动,绝对定位,inline-block属性的元素,margin不会和垂直方向上的其他元素margin折叠.&lt;/p&gt;

&lt;h1 id=&quot;float&quot;&gt;float&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;请解释一下为什么需要清除浮动？清除浮动的方式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;清除浮动是为了清除使用浮动元素产生的影响。浮动的元素，高度会塌陷，而高度的塌陷使我们页面后面的布局不能正常显示。&lt;/p&gt;

&lt;p&gt;1、父级div定义height；&lt;/p&gt;

&lt;p&gt;2、父级div 也一起浮动；&lt;/p&gt;

&lt;p&gt;3、常规的使用一个class；&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.clearfix&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;both&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.clearfix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;zoom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4、SASS编译的时候，浮动元素的父级div定义伪类:after&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:after&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;both&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解析原理：&lt;/p&gt;

&lt;p&gt;1) display:block 使生成的元素以块级元素显示,占满剩余空间;&lt;/p&gt;

&lt;p&gt;2) height:0 避免生成内容破坏原有布局的高度。&lt;/p&gt;

&lt;p&gt;3) visibility:hidden 使生成的内容不可见，并允许可能被生成内容盖住的内容可以进行点击和交互;&lt;/p&gt;

&lt;p&gt;4）通过 content:&amp;quot;.&amp;quot;生成内容作为最后一个元素，至于content里面是点还是其他都是可以的，例如oocss里面就有经典的 content:&amp;quot;.&amp;quot;,有些版本可能content 里面内容为空,一丝冰凉是不推荐这样做的,firefox直到7.0 content:”&amp;quot; 仍然会产生额外的空隙；&lt;/p&gt;

&lt;p&gt;5）zoom：1 触发IE hasLayout。&lt;/p&gt;

&lt;p&gt;通过分析发现，除了clear：both用来闭合浮动的，其他代码无非都是为了隐藏掉content生成的内容，这也就是其他版本的闭合浮动为什么会有font-size：0，line-height：0。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pengyouyi.site/css/2016/11/16/css-clear-float&quot;&gt;清除浮动带来的影响&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;margin&quot;&gt;margin&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;什么是外边距合并？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。&lt;/p&gt;

&lt;p&gt;合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3school.com.cn/css/css_margin_collapsing.asp&quot;&gt;w3school介绍网址：&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;zoom&quot;&gt;zoom&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;zoom:1的清除浮动原理?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;清除浮动，触发hasLayout；&lt;br&gt;
Zoom属性是IE浏览器的专有属性，它可以设置或检索对象的缩放比例。解决ie下比较奇葩的bug。&lt;br&gt;
譬如外边距（margin）的重叠，浮动清除，触发ie的haslayout属性等。&lt;/p&gt;

&lt;p&gt;来龙去脉大概如下：&lt;br&gt;
当设置了zoom的值之后，所设置的元素就会就会扩大或者缩小，高度宽度就会重新计算了，这里一旦改变zoom值时其实也会发生重新渲染，运用这个原理，也就解决了ie下子元素浮动时候父元素不随着自动扩大的问题。&lt;/p&gt;

&lt;p&gt;Zoom属是IE浏览器的专有属性，火狐和老版本的webkit核心的浏览器都不支持这个属性。然而，zoom现在已经被逐步标准化，出现在 CSS 3.0 规范草案中。&lt;/p&gt;

&lt;p&gt;目前非ie由于不支持这个属性，它们又是通过什么属性来实现元素的缩放呢？&lt;br&gt;
可以通过css3里面的动画属性scale进行缩放。&lt;/p&gt;

&lt;h1 id=&quot;media&quot;&gt;@media&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;移动端的布局用过媒体查询吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1) link元素中的CSS媒体查询&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(max-width: 800px)&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;example.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当媒体查询为真时，相关的样式表或样式规则会按照正常的级联规被应用。&lt;/p&gt;

&lt;p&gt;当媒体查询返回假， &lt;link&gt; 标签上带有媒体查询的样式表仍将被下载 （只不过不会被应用）。&lt;/p&gt;

&lt;p&gt;2) 样式表中的CSS媒体查询&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;landscape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;.sidebar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;包含了一个媒体类型和至少一个使用宽度、高度和颜色等媒体属性来限制样式表范围的表达式。&lt;/p&gt;

&lt;p&gt;CSS3加入的媒体查询使得无需修改内容便可以使样式应用于某些特定的设备范围。&lt;/p&gt;

&lt;h1 id=&quot;css&quot;&gt;CSS优化&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;CSS优化、提高性能的方法有哪些？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关键选择器（key selector）。选择器的最后面的部分为关键选择器（即用来匹配目标元素的部分）；&lt;/p&gt;

&lt;p&gt;如果规则拥有 ID 选择器作为其关键选择器，则不要为规则增加标签。过滤掉无关的规则（这样样式系统就不会浪费时间去匹配它们了）；&lt;/p&gt;

&lt;p&gt;提取项目的通用公有样式，增强可复用性，按模块编写组件；增强项目的协同开发性、可维护性和可扩展性;&lt;/p&gt;

&lt;p&gt;使用预处理工具或构建工具（gulp对css进行语法检查、自动补前缀、打包压缩、自动优雅降级）；&lt;/p&gt;

&lt;h1 id=&quot;before&quot;&gt;::before&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;::before 和 :after中双冒号和单冒号 有什么区别？解释一下这2个伪元素的作用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。（伪元素由双冒号和伪元素名称组成）&lt;/p&gt;

&lt;p&gt;双冒号是在当前规范中引入的，用于区分伪类和伪元素。不过浏览器需要同时支持旧的已经存在的伪元素写法，&lt;/p&gt;

&lt;p&gt;比如:first-line、:first-letter、:before、:after等，&lt;/p&gt;

&lt;p&gt;而新的在CSS3中引入的伪元素则不允许再支持旧的单冒号的写法。&lt;/p&gt;

&lt;p&gt;想让插入的内容出现在其它内容前，使用::before，否则，使用::after；&lt;/p&gt;

&lt;p&gt;在代码顺序上，::after生成的内容也比::before生成的内容靠后。&lt;/p&gt;

&lt;p&gt;如果按堆栈视角，::after生成的内容会在::before生成的内容之上&lt;/p&gt;

&lt;h1 id=&quot;input-webkit-autofill&quot;&gt;input:-webkit-autofill&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;如何修改chrome记住密码后自动填充表单的黄色背景 ？&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:-webkit-autofill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:-webkit-autofill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:-webkit-autofill&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;189&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* #FAFFBD; */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;webkit-text-size-adjust-none&quot;&gt;-webkit-text-size-adjust:none&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;怎么让Chrome支持小于12px 的文字？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1、用图片：如果是内容固定不变情况下，使用将小于12px文字内容切出做图片，这样不影响兼容也不影响美观。&lt;/p&gt;

&lt;p&gt;2、使用12px及12px以上字体大小：为了兼容各大主流浏览器，建议设计美工图时候设置大于或等于12px的字体大小，如果是接单的这个时候就需要给客户讲解小于12px浏览器不兼容等事宜。&lt;/p&gt;

&lt;p&gt;3、继续使用小于12px字体大小样式设置：如果不考虑chrome可以不用考虑兼容，同时在设置小于12px对象设置-webkit-text-size-adjust:none，做到最大兼容考虑。&lt;/p&gt;

&lt;h1 id=&quot;webkit-font-smoothing&quot;&gt;-webkit-font-smoothing&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;让页面里的字体变清晰，变细用CSS怎么做？&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-font-smoothing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;antialiased&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;font-style-oblique&quot;&gt;font-style:oblique;&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;font-style属性可以让它赋值为“oblique” oblique是什么意思？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.runoob.com/cssref/pr-font-font-style.html&quot;&gt;倾斜的字体样式&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.normal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.italic&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.oblique&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;oblique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Italic是使用文字的斜体，Oblique是让没有斜体属性的文字倾斜！&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zhidao.baidu.com/question/85429500.html&quot;&gt;CSS中font-style的属性有Italic oblique的区别&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;meta&quot;&gt;meta&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;position:fixed;在android下无效怎么处理？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;fixed的元素是相对整个页面固定位置的，你在屏幕上滑动只是在移动这个所谓的viewport，&lt;/p&gt;

&lt;p&gt;原来的网页还好好的在那，fixed的内容也没有变过位置，&lt;/p&gt;

&lt;p&gt;所以说并不是iOS不支持fixed，只是fixed的元素不是相对手机屏幕固定的。&lt;/p&gt;

&lt;p&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no&amp;quot;/&amp;gt;&lt;/p&gt;

&lt;h1 id=&quot;animation-time&quot;&gt;animation-time&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms&lt;/p&gt;

&lt;h1 id=&quot;cookie&quot;&gt;Cookie隔离&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;什么是Cookie 隔离？（或者说：请求资源的时候不要让它带cookie怎么做）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果静态文件都放在主域名下，那静态文件请求的时候都带有的cookie的数据提交给server的，非常浪费流量，所以不如隔离开。&lt;/p&gt;

&lt;p&gt;因为cookie有域的限制，因此不能跨域提交请求，故使用非主要域名的时候，请求头中就不会带有cookie数据，这样可以降低请求头的大小，降低请求时间，从而达到降低整体请求延时的目的。&lt;/p&gt;

&lt;p&gt;同时这种方式不会将cookie传入Web Server，也减少了Web Server对cookie的处理分析环节，提高了web server的http请求的解析速度。&lt;/p&gt;

&lt;h1 id=&quot;font-size&quot;&gt;font-size&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;在网页中的应该使用奇数还是偶数的字体？为什么呢？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;网页中使用偶数居多&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;比例关系:在使用移动端布局，和百分比布局的时候，换算单位和数值更加的方便精准&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UI设计师的缘故:大多数设计师用的软件如ps提供的字号是偶数，自然到了 前端那边也是用的是偶数。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;浏览器缘故:低版本的浏览器ie6会把奇数字体强制转化为偶数、为了平分字体&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;系统差别:字体点阵&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;也可以使用奇数！！！&lt;/p&gt;

&lt;p&gt;使用奇数号字体不好的地方是，文本段落无法对齐。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/jian_xi/article/details/79346477&quot;&gt;谈谈网页中使用奇数字体和偶数字体&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;height-margin-top&quot;&gt;height-margin-top&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;元素竖向的百分比设定是相对于容器的高度吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于height属性取值百分比，是现对于容器高度的&lt;/p&gt;

&lt;p&gt;对于margin-top、margin-bottom、padding-top、padding-bottom这些竖直方向的内外边距属性的百分比取值，参考的其实是容器的宽度而不是高低。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_34099161/article/details/51505782&quot;&gt;元素竖向的百分比设定是相对于容器的高度吗?&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;full-screen-rolling&quot;&gt;Full-screen-rolling&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;全屏滚动的原理是什么？用到了CSS的那些属性？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;图片轮播原理，只不过图片宽高100%、超出隐藏、调整比例适应屏幕大小&lt;/p&gt;

&lt;p&gt;一种是整体的元素一直排列下去，假设有五个需要展示的全屏页面，那么高度是500%，只是展示100%，剩下的可以通过transform进行Y轴定位，也可以通过margin-top实现，&lt;/p&gt;

&lt;p&gt;切换的属性变化，可以有2种：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;transform:translateX/translateY的值&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;left/top的值；&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/xiaofeixiang/p/5042324.html&quot;&gt;CSS-页面滑屏滚动原理&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;dedia&quot;&gt;@dedia&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;页面的设计和开发应当根据用户行为以及设备环境（系统平台、屏幕尺寸、屏幕定向等）进行相应的响应和调整。具体的实践方式由多方面组成，包括弹性网格和布局、图片、css media query的使用等。无论用户正在使用笔记本还是iPad，我们的页面都应该能够自动切换分辨率、图片尺寸及相关脚本功能等，以适应不同设备；换句话说，页面应该有能力去自动响应用户的设备环境。&lt;/p&gt;

&lt;p&gt;响应式网页设计就是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。这样，我们就可以不必为不断到来的新设备做专门的版本设计和开发了。&lt;/p&gt;

&lt;p&gt;响应式设计的基本原理是通过媒体查询@media检测不同的设备屏幕尺寸做处理。页面头部必须有meta声明viewport：&lt;/p&gt;

&lt;p&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no”&amp;gt;&lt;/p&gt;

&lt;p&gt;兼容IE可以使用JS辅助一下来解决&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/baiyygynui/p/5903749.html&quot;&gt;浏览器兼容与响应式布局&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/luckyXcc/p/5772274.html&quot;&gt;什么是响应式设计？为什么要做响应式设计？响应式设计的基本原理是什么？&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;screen-rolling&quot;&gt;screen-rolling&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;视差滚动效果，如何给每页做不同的动画？（回到顶部，向下滑动要再次出现，和只出现一次分别怎么做？）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;视差滚动（Parallax Scrolling）就是这样的效果之一。这种技术通过在网页向下滚动的时候，控制背景的移动速度比前景的移动速度慢来创建出令人惊叹的3D效果。&lt;/p&gt;

&lt;p&gt;原理：&lt;/p&gt;

&lt;p&gt;（1）CSS3实现&lt;br&gt;
优点：开发时间短、性能和开发效率比较好，缺点是不能兼容到低版本的浏览器&lt;/p&gt;

&lt;p&gt;（2）jquery实现&lt;br&gt;
通过控制不同层滚动速度，计算每一层的时间，控制滚动效果。&lt;/p&gt;

&lt;p&gt;优点：能兼容到各个版本的，效果可控性好&lt;/p&gt;

&lt;p&gt;缺点：开发起来对制作者要求高&lt;/p&gt;

&lt;p&gt;（3）插件实现方式&lt;br&gt;
例如：parallax-scrolling，兼容性十分好&lt;/p&gt;

&lt;h1 id=&quot;line-height&quot;&gt;line-height&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;你对line-height是如何理解的？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;line-height只影响行内元素，并不能直接应用于块级元素。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;line-height 具有可继承性，块级元素的子元素会继承该特性，并且在行内元素上生效。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;撑开div高度的是line-height不是文字内容。&lt;/p&gt;

&lt;p&gt;line-height指的是在同一个元素中，两个文本行基线间的距离&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2009/11/css%E8%A1%8C%E9%AB%98line-height%E7%9A%84%E4%B8%80%E4%BA%9B%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E5%8F%8A%E5%BA%94%E7%94%A8/&quot;&gt;css行高line-height的一些深入理解及应用&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.html-js.com/article/3465&quot;&gt;对于行高(line-height)的一些理解&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;webkit-overflow-scrolling&quot;&gt;-webkit-overflow-scrolling&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;overflow: scroll时不能平滑滚动的问题怎么处理？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你对某个div或模块使用了overflow: scroll属性，在iOS系统的手机上浏览时，则会出现明显的卡顿现象。但是在android系统的手机上则不会出现该问题。&lt;/p&gt;

&lt;p&gt;解决这种卡顿:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-overflow-scrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;touch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CSS的属性-webkit-overflow-scrolling是真的创建了带有硬件加速的系统级控件，所以效率很高。&lt;/p&gt;

&lt;p&gt;推荐一些相关插件：&lt;a href=&quot;http://www.360doc.com/content/14/0724/11/16276861_396699901.shtml&quot;&gt;iScroll&lt;/a&gt;、&lt;a href=&quot;http://www.chjtx.com/JRoll/#todo/go?do=use&quot;&gt;jRoll(中文名：酸萝卜) &lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/1f4693d0ad2d&quot;&gt;解决页面使用overflow: scroll在iOS上滑动卡顿的问题&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;layout-self-adaption&quot;&gt;layout-self-adaption&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;有一个高度自适应的div，里面有两个div，一个高度100px，希望另一个填满剩下的高度。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;css3弹性盒子(Flex Box)解法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;纵向从上往下排列（顶对齐）&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;b&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;position absolute 方案&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;外层position: relative；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;百分百自适应元素直接position: absolute; top: 100px; bottom: 0; left: 0&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;b&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;box-sizing: border-box方案&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;外层box-sizing: border-box; 同时设置padding: 100px 0 0；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内层100像素高的元素向上移动100像素，或使用absolute定位防止占据空间；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;另一个元素直接height: 100%;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;box-sizing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;border-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/*position: relative;*/&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/*position: absolute;
    top:0;*/&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;a&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;b&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/46dd9274bef8&quot;&gt;简书&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000000762512/a-1020000000762933&quot;&gt;segmentfault&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;fouc&quot;&gt;FOUC&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;什么是FOUC？你如何来避免FOUC？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于css引入使用了@import 或者存在多个style标签以及css文件在页面底部引入使得css文件加载在html之后导致页面闪烁、花屏&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;style标签写在body后与body前有什么区别？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;写在head标签中利于浏览器逐步渲染（resources downloading-&amp;gt;CSSOM+DOM-&amp;gt;RenderTree(composite)-&amp;gt;Layout-&amp;gt;paint）。&lt;/p&gt;

&lt;p&gt;写在body标签后由于浏览器以逐行方式对html文档进行解析，当解析到写在尾部的样式表（外联或写在style标签）会导致浏览器停止之前的渲染，等待加载且解析样式表完成之后重新渲染，在windows的IE下可能会出现FOUC现象（即样式失效导致的页面闪烁问题）&lt;/p&gt;

&lt;p&gt;建议：用link加载css文件，一般样式放在head标签里面&lt;/p&gt;

&lt;h1 id=&quot;em&quot;&gt;解释em&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ElementID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.5em&quot;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;em是个相对单位。&lt;/p&gt;

&lt;h1 id=&quot;rem-em&quot;&gt;rem 和 em&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;rem 和 em 都是 css 中的相对长度单位，他们的区别就是，rem 是相对于根元素字体大小进行计算的，任意浏览器的默认字体都是16px，所以一般 1rem = 16px。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;而 em 是相对于当前元素的字体大小来计算的，但是为什么我们经常说相对于父元素呢，其实也很好理解，因为 font-size 字体大小这个属性是可以被继承的，所以父元素的字体大小势必会影响到他的子元素的字体大小，也就是说子元素如果没有自己的font-size，那么它的 font-size 就会继承父元素，那此时 1em 的值就可以认为是相对于父元素字体大小来计算。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;另外 rem 是 css3 新增的一个相对单位，r 就是 root 根的缩写，它的出现也就是为了解决 em 的缺点，em 是相对于父元素或当前元素的字体大小进行换算的，当当前元素或父元素字体大小改变时，就又得重新计算了，那么层级较多的时候，换算也就会越来越复杂，而 rem 只相对于 HTML 根元素，有了 rem这个单位我们只需要调整根元素 HTML 的 font-size，就能达到所有元素的动态适配，避免了一些复杂的层级关系。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;补充：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; rem 是相对于根元素进行计算，而 em 是相对于当前元素或父元素的字体大小。rem 不仅可以设置字体的大小，还支持元素宽、高等属性。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;em 的一些应用场景：设置行高 line-height: 1.5em; 给中文文字段首空两个字符 text-indent: 2em;&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;readonly-amp-disable&quot;&gt;readonly &amp;amp; disable&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;form中的input可以设置为readonly和disable，请问二者有什么区别？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;readonly不可编辑，但可以选择和复制；值可以传递到后台  &lt;/p&gt;

&lt;p&gt;disabled不能编辑，不能复制，不能选择；值不可以传递到后台&lt;/p&gt;

&lt;h1 id=&quot;graceful-degradation&quot;&gt;优雅降级 graceful degradation&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;什么叫优雅降级和渐进增强？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;渐进增强 progressive enhancement：&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;优雅降级 graceful degradation：&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。   &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;区别：&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;a. 优雅降级是从复杂的现状开始，并试图减少用户体验的供给 &lt;/p&gt;

&lt;p&gt;b. 渐进增强则是从一个非常基础的，能够起作用的版本开始，并不断扩充，以适应未来环境的需要 &lt;/p&gt;

&lt;p&gt;c. 降级（功能衰减）意味着往回看；而渐进增强则意味着朝前看，同时保证其根基处于安全地带&lt;/p&gt;

&lt;h1 id=&quot;more&quot;&gt;更多-more&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Questions-and-Answers&quot;&gt;https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions/Questions-and-Answers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_30325409/article/details/71084423&quot;&gt;https://blog.csdn.net/qq_30325409/article/details/71084423&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>JS 判断一个元素是否在可视区域中</title>
   <link href="/js/2023/08/25/js-getBoundingClientRect"/>
   <updated>2023-08-25T00:00:00+08:00</updated>
   <id>/js/2023/08/25/js-getBoundingClientRect</id>
   <content type="html">&lt;h1 id=&quot;js&quot;&gt;JS 判断一个元素是否在可视区域中&lt;/h1&gt;

&lt;h1 id=&quot;use&quot;&gt;用途 use&lt;/h1&gt;

&lt;p&gt;在日常开发中，我们经常需要判断目标元素是否在视窗之内或者和视窗的距离小于一个值（例如 100 px），从而实现一些常用的功能。比如：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;图片的懒加载&lt;br&gt;&lt;/li&gt;
&lt;li&gt;列表的无限滚动&lt;br&gt;&lt;/li&gt;
&lt;li&gt;计算广告元素的曝光情况&lt;br&gt;&lt;/li&gt;
&lt;li&gt;可点击链接的预加载&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;method&quot;&gt;实现方式 method&lt;/h1&gt;

&lt;p&gt;判断一个元素是否在可视区域，我们常用的有三种办法：&lt;/p&gt;

&lt;p&gt;❶ getBoundingClientRect&lt;br&gt;&lt;br&gt;
❷ offsetTop、scrollTop&lt;br&gt;&lt;br&gt;
❸ Intersection Observer  &lt;/p&gt;

&lt;h1 id=&quot;getboundingclientrect&quot;&gt;getBoundingClientRect&lt;/h1&gt;

&lt;h2 id=&quot;getboundingclientrect&quot;&gt;getBoundingClientRect() 简介&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect&quot;&gt;Element.getBoundingClientRect()&lt;/a&gt; 方法返回一个 DOMRect 对象，其提供了元素的大小及其相对于视口的位置。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect/element-box-diagram.png&quot; alt=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect/element-box-diagram.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;返回值&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;返回值是一个 DOMRect 对象，是包含整个元素的最小矩形（包括 padding 和 border-width）。该对象使用 left、top、right、bottom、x、y、width 和 height 这几个以像素为单位的只读属性描述整个矩形的位置和大小。除了 width 和 height 以外的属性是&lt;code&gt;相对于视图窗口的左上角&lt;/code&gt;来计算的。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;purple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;div&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     x: 123,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     y: 50,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     width: 440,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     height: 240,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     top: 50,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     right: 563,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     bottom: 290,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     left: 123 &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;getboundingclientrect&quot;&gt;getBoundingClientRect() 判断元素是否在可视区域&lt;/h2&gt;

&lt;p&gt;如果一个元素在视窗之内的话，那么它一定满足下面四个条件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;top 大于等于 0&lt;/li&gt;
&lt;li&gt;left 大于等于 0&lt;/li&gt;
&lt;li&gt;bottom 小于等于视窗高度&lt;/li&gt;
&lt;li&gt;right 小于等于视窗宽度&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isInViewPort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// const viewWidth = (window.innerWidth || document.documentElement.clientWidth) + 100;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// const viewHeight = (window.innerHeight || document.documentElement.clientHeight) + 100;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bottom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;viewHeight&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;offsettop-scrolltop&quot;&gt;offsetTop、scrollTop&lt;/h1&gt;

&lt;p&gt;scrollTop 是一个属性，表示元素滚动条向下滚动的距离。offsetTop 是一个属性，表示元素相对于其最近的定位父元素的顶部偏移量。&lt;/p&gt;

&lt;p&gt;content.offsetHeight：元素的高度。&lt;br&gt;
content.offsetTop：元素顶部距离父容器顶部的高度。&lt;br&gt;
document.documentElement.clientHeight：浏览器可见区域高度。&lt;br&gt;
document.documentElement.scrollTop：浏览器滚动条滚动的距离。&lt;/p&gt;

&lt;p&gt;元素进入可视区域,需要满足以下2个条件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;❶ content.offsetTop + content.offsetHeight &amp;gt; scrollTop&lt;/li&gt;
&lt;li&gt;❷ content.offsetTop &amp;lt; scrollTop + clientHeight&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;❶&lt;/p&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2023/7-8-9/offset1.jpg&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;❷&lt;/p&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2023/7-8-9/offset2.jpg&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;documentElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isVisible1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isVisible2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isVisible1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isVisible2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;intersection-observer&quot;&gt;Intersection Observer&lt;/h1&gt;

&lt;p&gt;待学习。。。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>vue 面试题集合</title>
   <link href="/framework/2023/08/24/vue-interview"/>
   <updated>2023-08-24T00:00:00+08:00</updated>
   <id>/framework/2023/08/24/vue-interview</id>
   <content type="html">&lt;h1 id=&quot;vue&quot;&gt;vue 面试题集合&lt;/h1&gt;

&lt;h1 id=&quot;vue2&quot;&gt;vue2 双向数据绑定的原理是什么？&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;举一个双向数据绑定的例子，当你在输入框输入文字的时候，vue 会检测到数据的变化，然后更新对应的视图。反过来也一样，如果你通过代码修改了数据，vue 也会自动更新视图。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;双向数据绑定的原理是通过数据劫持 和 发布订阅模式实现的。首先 vue 通过 Object.defineProperty() 方法对数据进行劫持，在数据变动的时候进行拦截，调用 getter 和 setter 方法。其次，当监听到数据变动时，vue 就会触发发布订阅模式，vue 会通知所有的订阅者进行更新。因此，当用户在页面上进行修改的时候，vue 会更新对应的数据，并通知所有订阅者更新视图；同时，当数据发生改变的时候，vue 也会更新对应的视图。通过这样的机制，vue 实现了双向数据绑定，使得数据和视图的变化可以互相影响。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;补充：订阅者是 vue 中的一个概念，它是用于管理更新视图的对象，当数据发生变化时，vue 会通知所有的订阅者进行更新。发布者就是变动的数据，订阅者就是在页面中使用到该变量的地方，对此进行数据更新。【一个发布者多个订阅者】。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vue3 中用 ES6 的 proxy 对象替换了 Object.defineProperty()，因为 Object.defineProperty() 只能劫持一个属性，而 proxy 可以劫持对象的所有属性&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;vue2-vue3&quot;&gt;vue2 和 vue3 的区别？&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;vue2和vue3双向数据绑定原理发生了改变。&lt;br&gt;
vue2 的双向数据绑定是利用 ES5 的一个 API Object.definePropert() 对数据进行劫持 ，结合发布订阅模式的方式来实现的。vue3 中使用了 es6 的 ProxyAPI 对数据代理。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Vue3 支持碎片(Fragments)，就是说在组件中可以拥有多个根节点。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Vue2 与Vue3 最大的区别 — Vue2 使用选项类型 API，Vue3 合成型API。旧的选项型 API 在代码里分割了不同的属性: data,computed 属性，methods，等等。新的合成型 API 能让我们用方法（function）stup(){} 来分割，相比于旧的 API 使用属性来分组，这样代码会更加简便和整洁。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;建立数据 data。Vue2 把数据放在 data 中，在 Vue3 中，我们就需要使用一个新的 setup() 方法，此方法在组件初始化构造的时候触发。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用以下三步来建立反应性数据：  &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;① 从 vue 引入 reactive&lt;br&gt;&lt;br&gt;
② 使用 reactive() 方法来声名我们的数据为响应性数据&lt;br&gt;&lt;br&gt;
③ 使用 setup() 方法来返回我们的响应性数据，从而我们的 template 可以获取这些响应性数据  &lt;/p&gt;

&lt;h1 id=&quot;dom&quot;&gt;什么是虚拟 DOM?&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 Vue 中，虚拟 DOM（Virtual DOM）是一个轻量级的 JavaScript 对象，用于描述真实 DOM 的层次结构和属性。每当 Vue 组件的数据发生变化时，Vue 会先对虚拟 DOM 进行操作，然后再将变化的部分同步到真实 DOM 中，从而避免了直接操作真实 DOM 时的性能问题。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虚拟 DOM 的出现是为了解决传统前端开发中频繁操作真实 DOM 的问题。由于真实 DOM 的操作往往非常消耗性能，因此频繁操作会导致页面的性能问题。而虚拟 DOM 可以在内存中对 DOM 进行操作，只有在必要的时候才将变化同步到真实 DOM，从而避免了频繁操作真实 DOM 的性能问题。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;具体来说，当 Vue 组件的数据发生变化时，Vue 会通过比较新旧虚拟 DOM 树的差异来确定需要更新的部分，并将这些部分同步到真实 DOM 中。这样就避免了不必要的 DOM 操作，从而提高了页面的性能和响应速度。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;此外，虚拟 DOM 还可以方便地实现一些高级特性，例如组件的复用和动画效果。虚拟 DOM 使得 Vue 可以在不操作真实 DOM 的情况下实现这些功能，从而提高了开发效率。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;vue&quot;&gt;vue 组件之间的通信&lt;/h1&gt;

&lt;p&gt;❶ 父传子：父组件通过自定义属性传递给子组件，子组件中通过 props 接收父组件中的绑定的属性.  &lt;/p&gt;

&lt;p&gt;❷ 子传父：子组件通过广播的方式 $emit 发送自定义事件，将值传递给父组件，父组件监听事件，触发一个函数去接收子组件中传递过来的值.  &lt;/p&gt;

&lt;p&gt;❸ 兄弟间传值： &lt;/p&gt;

&lt;p&gt;(1) 通过父组件中转来传值，即 A 和 B 是兄弟组件，可以 A 传给父组件，由父组件再传给 B.&lt;br&gt;&lt;br&gt;
(2) new 一个 Bus 实例，在需要发送数据的组件中自定义方法，通过 $emit 传递数据，在需要接收数据的组件生命周期 created 中，通过 $on 监听获取数据。&lt;br&gt;&lt;br&gt;
(3) 使用 vuex 状态管理，可以实现数据的随意存储和获取。  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;兄弟间传值,小项目少页面用 eventBus，大项目多页面使用 vuex&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;vuex&quot;&gt;vuex 状态管理工具的五个核心属性？&lt;/h1&gt;

&lt;p&gt;vuex 中的 state 数据不允许直接赋值修改，所以 vuex 创建了 mutations 用于定义方法来修改 state 中的数据，但是只能同步修改。如果异步修改会造成调试工具跟实际数据不对应，所以vuex 又提供了 actions，用于异步触发 mutations 中的方法。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;state: 用来存储公共数据的（变量），类似于组件中的 data。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;mutations：数据修改的逻辑，也是唯一修改 state 数据的地方。(提交更新数据的方法),它必须是同步操作，如果有异步操作的话，那么就需要 actions。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;actions：它也是用来改变数据的，但是它无法直接修改 state，actions 提交的是 mutations，在 mutations 里面更改数据，actions 支持异步操作。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;getters：从基本数据，派生过来的数据，相当于组件里的计算属性 computed。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;modules：是用来模块化 vuex 的，可以让每一个模块拥有自己的 state、mutation、actions、getters 使得结构更加清晰，方便管理。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;流程图：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如果只有同步&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;相应视图 -&amp;gt; 视觉触发 Mutation  -&amp;gt;  修改 state 中的数据&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如果有异步操作&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;相应视图 -&amp;gt; 视觉触发 Action  -&amp;gt; Action 再触发 Mutation 里的方法  -&amp;gt;  修改 state 中的数据&lt;/p&gt;

&lt;h2 id=&quot;mutations&quot;&gt;直接调用 mutations 里的方法&lt;/h2&gt;

&lt;p&gt;vuex 定义：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vuex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 展示数据&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mutations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//方法名字自定义（）&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;changeDetail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 信息&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;直接调用 mutaions 里的方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//使用state里的数据&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//修改sate里的数据&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'changeDetail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;action-mutations&quot;&gt;使用 action 里的方法间接调用 mutations 方法&lt;/h2&gt;

&lt;p&gt;actions 是放全局可以调用的函数,修改 state 里的变量, 但 actions 里不能直接修改 state 的变量，里面还是需要通过 mutations 里定义的函数来修改。比如：commit(&amp;#39;change&amp;#39;, 1); 同时在 mutations 里有一个 change(state, value)方法，其实它就是个“中介”。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vuex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//定义数据&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mutations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//真正修改state里的数据&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;//中介，修改数据&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;changeDetail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'change'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 这里就是调用了以上 mutations 里定义的 change 方法&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// fetchData 这个方法有异步操作&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// async fetchData({ commit }) {&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//     const response = await fetch('https://api.example.com/data')&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//     const data = await response.json()&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//     commit('change', data);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;直接调用 actions 里的方法：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'changeDetail'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;总结：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;mutations 同步&lt;/code&gt;, 通过 &lt;strong&gt;this.$store.dispatch(‘mutations方法名’,值)&lt;/strong&gt; 直接修改 state 中的值。&lt;br&gt;&lt;br&gt;
&lt;code&gt;actions 异步&lt;/code&gt;，通过 &lt;strong&gt;this.$store.commit(‘mutations方法名’,值)&lt;/strong&gt; 提交 mutations 中的方法，间接修改 state 中的值；并且执行异步操作。  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;lazy&quot;&gt;如何实现图片懒加载？lazy&lt;/h1&gt;

&lt;p&gt;懒加载是一种在页面加载时，延迟加载一些非关键资源的技术，换句话说，就是按需要加载。当我们碰到长网页有很多图片时，我们先加载出现在视口内的几张图片，当滚动条滚动到对应图片的位置时，再去加载别的图片。这种延迟加载的方式就是懒加载。(卷出去的高度 + 屏幕的高度 = 文档的高度)  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;图片懒加载是怎么实现的？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;就是我们先设置图片的 data-set 属性 (当然也可以是其他任意的，只要不会发送 http 请求就行了，作用就是为了存取值)值为其图片路径，由于不是 src，所以不会发送 http 请求。然后我们计算出页面 scrolITop 的高度和浏览器的高度之和，如果图片距离页面顶端的坐标 Y (相对于整个页面，而不是浏览器窗口)小于前两者之和，就说明图片就要显示出来了 (合适的时机，当然也可以是其他情况) ，这时候我们再将 data-set 属性替换为 src 属性即可。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vue 中使用 vue 异步组件 和 ES 中的 import 实现懒加载。&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;异步组件使用路由懒加载,方法如下：component：resolve =&amp;gt; (require([‘需要加载的路由的地址’])，resolve)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 代码如下:&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'vue'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'vue-router'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* 此处省去之前导入的HelloWorld模块 */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'HelloWorld'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@/components/HelloWorld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;ES 提出的 import 方法，（----最常用----）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 方法如下：const HelloWorld = （）=&amp;gt; import('需要加载的模块地址')（不加 { } ，表示直接return）&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'vue'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'vue-router'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HelloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@/components/HelloWorld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'HelloWorld'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HelloWorld&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;token-vuex-localstorage&quot;&gt;为什么 token 要同时存在 vuex 和 localStorage 中?&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;vuex 存储数据的特点：数据统一全局管理，一旦数据在某组件更新，其他所有组件数据都会更新，也就是说它是响应式的，但是如果数据只存在 vuex 中，&lt;code&gt;刷新页面 vuex 里的数据会重新初始化&lt;/code&gt;，导致数据丢失，恢复到原来的状态。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;localStorage (本地存储)存储数据的特点: 永久性存储，但不是响应式的，当某个组件数据修改时，其他组件无法同步更新。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;另外，vuex 是存储在内存中，localStorage 本地存储是存储到磁盘里，从内存中读取数据，速度是远高于磁盘的，所以把数据存在 vuex 中可以提高获取 token 速度，提高性能。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;结论: 所以我们在项目中通常是结合这两者使用，拿到 token 后，把 token 存储到 localStorage 和 vuex 中，vuex 保证数据在各组件间同步更新，如果刷新页面数据丢失，我们可以从localStorage 获取，通过结合 vuex 和 localStorage 本地存储，实现数据的持久化。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;vue-created-mounted&quot;&gt;vue 中请求到底写在 created 中还是 mounted 中？&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;created: 中文意思创建完成，这时候已经初始化了某些属性值，Vue 实例中的 data 和 methods 已经可以使用了。但是，还没有挂载到页面上。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;mounted: 中文意思挂载完成，这时候初始化页面完成，此时页面已经渲染出来了，可以进行 dom 操作。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在实际开发中请求不论放在 created 还是 mounted 大多时候是没有区别的，因为 created 和 mounted 都是同步的，而请求是异步的，不会堵塞页面渲染的主线程，我们也不能控制请求回来的时间。主要是看个人习惯吧。  &lt;/p&gt;

&lt;p&gt;但是如果是需要操作 dom 相关的请求，就要在 mounted 中执行，因为这时候页面才挂载完成，才可以进行 dom 操作。  &lt;/p&gt;

&lt;p&gt;另外需要补充一点，官方文档上给大家提的一个醒，就是 mounted 阶段不保证所有的子组件也都被挂载完成，这时候如果我们希望等到整个视图都渲染完毕再做操作，那就需要使用到 this.$nextTick方法。&lt;/p&gt;

&lt;h1 id=&quot;thousand&quot;&gt;后端返回十万条数据，前端怎么处理？thousand&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;触底加载&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;只要滚动一次就要判断一次加载时机，当滚动上去的高度 + 屏幕的高度 &amp;gt;= 页面的高度，需要加载下一页数据。&lt;br&gt;
我们需要获取到滚动上去的高度，窗口的高度，文档的高度。&lt;br&gt;
获取页面滚动上去的高度：document.documentElement.scrollTop/document.body.scrollTop&lt;/p&gt;

&lt;p&gt;获取当前元素的宽度和高度：ele.offsetHeight/ele.offsetWidth&lt;br&gt;
获取窗口的宽度和高度：window.innerHeight&lt;br&gt;
获取文档的宽度和高度：document.documentElement.scrollHeight&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;虚拟列表&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;由于最终效果需要是一个长列表的形式，那么常规的分页渲染，显然是不符合要求的。这个时候我们可以考虑用虚拟列表来实现需求。  &lt;/p&gt;

&lt;p&gt;什么是虚拟列表？  &lt;/p&gt;

&lt;p&gt;虚拟列表就是只对可见区域进行渲染，对非可见区域中的数据不渲染或部分渲染，以实现减少消耗，提高用户体验的技术。它是长列表的一种优化方案，性能良好。&lt;/p&gt;

&lt;p&gt;实现思路：  &lt;/p&gt;

&lt;p&gt;（1）写一个代表可视区域的 div，固定其高度，通过 overflow 使其允许纵向 Y 轴滚动。&lt;br&gt;&lt;br&gt;
（2）第二步，计算区域中可以显示的数据条数。这个可以用可视区域的高度除以单条数据高度得到。&lt;br&gt;&lt;br&gt;
（3）监听滚动，当滚动条变化时，计算出被卷起的数据的高度。&lt;br&gt;&lt;br&gt;
（4）计算区域内数据的起始索引，也就是区域内的第一条数据：这个用卷起的高度除以单条数据高度可以拿到。&lt;br&gt;&lt;br&gt;
（5）计算区域内数据的结束索引。通过起始索引+可显示的数据的条数可以拿到。&lt;br&gt;&lt;br&gt;
（6）取起始索引和结束索引中间的数据，渲染到可视区域。&lt;br&gt;&lt;br&gt;
（7）计算起始索引对应的数据在整个列表中的偏移位置并设置到列表上。  &lt;/p&gt;

&lt;p&gt;整个步骤下来，最终的效果是：不论怎么滚动，我们改变的只是滚动条的高度和可视区的元素内容。每次只会渲染一个固定的条数，不会增加多余元素。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{height: `${contentHeight}px`}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content_box&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scroll=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;scroll&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!--这层div是为了把高度撑开，让滚动条出现，height值为所有数据总高--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{'height': `${itemHeight*(listAll.length)}px`, 'position': 'relative'}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--可视区域里所有数据的渲染区域--&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{'position': 'absolute', 'top': `${top}px`}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--单条数据渲染区域--&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-for=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(item,index) in showList&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;:key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;index&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;item&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;list&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;listAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//所有数据showList: [],  //可视区域显示的数据&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;contentHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//可视区域高度itemHeight: 30,      //每条数据所占高度&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;showNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//可是区域显示的最大条数top: 0, //偏移量&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//卷起的高度&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;startIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//可视区域第一条数据的索引&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;endIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//可视区域最后一条数据后面那条数据的的索引，因为后面要用slice(start,end)方法取需要的数据，但是slice规定end对应数据不包含在里面&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//构造10万条数据&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;getList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`我是第&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;条数据呀`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}},&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//计算可视区域数据&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;getShowList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contentHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;itemHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;c1&quot;&gt;//可视区域最多出现的数据条数，值是小数的话往上取整，因为极端情况是第一条和最后一条都只显示一部分this.startIndex = Math.floor(this.scrollTop/this.itemHeight);   &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//可视区域第一条数据的索引this.endIndex = this.startIndex + this.showNum;   &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//可视区域最后一条数据的后面那条数据的索引this.showList = this.listAll.slice(this.startIndex, this.endIndex)  &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//可视区域显示的数据，即最后要渲染的数据。实际的数据索引是从this.startIndex到this.endIndex-1const offsetY = this.scrollTop - (this.scrollTop % this.itemHeight);  &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//在这需要获得一个可以被itemHeight整除的数来作为item的偏移量，这样随机滑动时第一条数据都是完整显示的this.top = offsetY;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//监听滚动事件，实时计算scrollTopscroll(){this.scrollTop = document.querySelector('.content_box').scrollTop; &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//element.scrollTop方法可以获取到卷起的高度this.getShowList();}&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mounted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scoped&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.content_box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;/*只有这行代码写了，内容超出高度才会出现滚动条*/&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/*每条数据的样式*/&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#666&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;box-sizing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;border-box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;slot&quot;&gt;插槽是什么？插槽如何使用？slot&lt;/h1&gt;

&lt;p&gt;Vue 实现了一套内容分发的 API，将元素作为承载分发内容的出口。&lt;/p&gt;

&lt;p&gt;通过插槽可以动态指定某一个组件模板部分的渲染, 我们在调用组件的时候, 在组件的调用标签中间传递了什么样的标签结构, 那么该组件就会把我们传递的标签结构放在他的模板部分进行渲染。&lt;br&gt;
举一个例子，如果你在一个自定义组件标签中又加入了一段 HTML，默认情况下它里面的 DOM 元素是不会渲染出来的，但是如果你在子组件模板中写上插槽的话，这个标签内容会自动放在你写的插槽标签那个位置。&lt;/p&gt;

&lt;p&gt;vue 的 slot 主要分三种：默认插槽，具名插槽，作用域插槽。&lt;/p&gt;

&lt;p&gt;具名插槽：有名字的插槽，如果一个组件中有多个插槽，就可以写成具名插槽，给插槽提供的内容放在对应名字的的位置上。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;app&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;// 子组件 
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;Child&amp;gt;&lt;/span&gt;// 给插槽提供的内容
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-slot:default&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;button&amp;gt;&lt;/span&gt;按钮&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://huawei.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;跳转华为&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v-slot:header&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;h1&amp;gt;&lt;/span&gt;标题&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&lt;/span&gt;内容，21231215456454&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Child&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;Child&amp;gt;&lt;/span&gt;子组件的模板中:
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;这是子组件的内容&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;      // 给插槽提供的内容将会被放在这个位置，这是默认插槽
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用插槽是在存在父子关系的组件，可以在子组件中决定插槽的位置，同时子组件也可以给这些插槽的默认信息，当父组件中没有需要给子组件插槽插入信息时，显示的是子组件插槽定义的默认信息。&lt;/p&gt;

&lt;h1 id=&quot;spa&quot;&gt;什么是 SPA？&lt;/h1&gt;

&lt;p&gt;SPA(Single Page Application), 单页面应用程序, 使用 vue, react, angular ,创建的项目都属于 SPA。&lt;/p&gt;

&lt;p&gt;单页面应用，只在 web 页面初始化时，加载相应的 HTML、js、css，一旦页面加载完成，就不会因为用户的操作而进行页面的重新加载或者跳转。简单说，SPA 它只有一个 web 页面，例如：vue项目只有一个 index.html，但是我们为什么我们能看到不同的页面呢，这是因为 vue 的路由机制，通过监听路由的变化，实现 HTML 内容的变换，从而动态实现 UI 与用户的交互，就像我们在vue 项目中，从一个菜单项切换到另外一个菜单项，页面的内容虽然变了，但是并没有去请求一个新的 html 的动作，而是通过变化的路由，去找到当前路由对应的页面。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SPA的优点：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;由于页面初始化的时候，项目依赖的资源就统一加载了，所以后面切换页面就不用再向服务器请求，因此，切换速度快且流畅，用户体验性会更好，在一定程度上也会减小服务器的压力。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;前后端职责更加的清晰，前端就负责页面相关，以及调后端接口拿数据的工作；后端则负责数据相关的处理。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;SPA的缺点：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;首屏加载慢，因为是单页面应用，初次加载的时候资源会统一全部加载。当然，作为优化时的一种方案，部分页面也是可以按需加载的。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;另外，由于所有的内容都在一个页面中动态替换显示所以在 SEO 上有着天然的弱势，不利于搜索引擎优化。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;vue&quot;&gt;你怎么理解 vue 的单向数据流？&lt;/h1&gt;

&lt;p&gt;单项数据流是从上到下的，但是它不能从下到上。&lt;/p&gt;

&lt;p&gt;Vue 中单向数据流指的是父组件可以传值给子组件，子组件不能直接修改父组件传的值。&lt;br&gt;&lt;br&gt;
prop 也就是父组件传过来的数据，如果我们试图通过子组件的 v-model 去改变这个 prop，也就是试图通过子组件直接去改变父组件的数据，而不是通过发送事件的方式，这是不允许的。&lt;/p&gt;

&lt;h1 id=&quot;dom&quot;&gt;在什么阶段下才可以访问操作 DOM？&lt;/h1&gt;

&lt;p&gt;在 mounted 中可以访问操作 DOM。&lt;/p&gt;

&lt;p&gt;因为在钩子函数 mounted 被调用之前，Vue 已经将编译好的模板挂载到页面上。&lt;/p&gt;

&lt;h1 id=&quot;micro&quot;&gt;什么是微前端？micro&lt;/h1&gt;

&lt;p&gt;微前端是一种类似于微服务的架构，它将微服务的理念应用于浏览器端，即将 Web 应用由单一的单体应用转变为多个小型前端应用聚合为一的应用。各个前端应用可以独立运行、独立开发、独立部署。（建议先了解微服务）&lt;/p&gt;

&lt;p&gt;（1）微服务就是一种架构风格&lt;br&gt;&lt;br&gt;
（2）微服务就是把一个项目拆分成独立的多个服务，并且多个服务是可以独立运行的，而每个服务都会占用线程。  &lt;/p&gt;

&lt;h1 id=&quot;jquery&quot;&gt;如何解决 Jquery 版本泄露问题？&lt;/h1&gt;

&lt;p&gt;正确解决方法：升级版本。&lt;/p&gt;

&lt;h1 id=&quot;vue&quot;&gt;vue 生命周期有哪些?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;创建阶段: 只执行一次。&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;beforeCreate (开始进行一些数据和方法的初始化的操作, data 中的数据和 methods 中的方法还不能用)。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;created (已经完成数据和方法的初始化, data 中的数据和 methods 中的方法可以使用了)。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;挂载阶段：&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;beforeMount (开始渲染虚拟 DOM)。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;mounted (已经完成了虚拟 DOM 的渲染, 可以操作 DOM 了, 只执行一次)。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;更新阶段: 执行多次&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;beforeUpdate (data 中的数据即将被更新, 会执行多次)。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;updated (data 中的数据已经更新完毕, 会执行多次)。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;销毁阶段: 只执行一次&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;beforeDestroy (vue 实例即将销毁, 此时 data 中的数据和 methods 中的方法依然处于可用状态)。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;destroyed (vue 实例已经销毁, 此时 data 中的数据和 methods 中的方法已经不可用)。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;computed-watch&quot;&gt;computed 和 watch的区别？&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;computed 是计算属性, 所依赖得数据发生改变，就会重新计算结果那么就需要用到 computed。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最典型的例子就是购物车结算时候的总金额，就是依赖数量和单价来进行计算的；另外 computed 支持缓存，只有依赖的数据发生改变的时候，才会重新进行计算，否则，会直接从缓存中读取。使用的时候和 data 中的数据的使用方式基本上是一致的，而且计算属性它不支持异步，当 computed 内有异步操作时，是无效的，无法监听到数据的变化。 （计算属性的函数必须有返回值）&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;watch 是监视器, 当一个数据的变化，会影响其他一个或多个数据的时候，就需要监听这个数据，watch 不支持缓存，监听的数据发生变化就会触发相应的操作。重视过程。不用返回值，同步异步都可以。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;另外，watch 支持异步，而且我们监听的数据必须是 data 中声明过的数据，或者是从父组件中传递过来的 props 中的数据，另外，每个监听数据有两个可选的属性，分别是 immediate 和 deep。immediate 是组件加载是否立即触发回调函数执行，如果它的值是 true，组件加载就会立即触发一次；如果是 false，首次是不会执行这个监听逻辑的，只有当数据改变的时候才会监听。deep 是深度监听，为了监听对象内部值的变化，适合用在复杂类型的数据中。（楼层导航，切换楼层时，监听楼层索引的变化，调整滚动条位置）&lt;/p&gt;

&lt;h1 id=&quot;data&quot;&gt;Data 为什么是一个函数？&lt;/h1&gt;

&lt;p&gt;因为对象是一种引用数据类型,在内存中只有一份. 如果 data 的值直接是一个对象的话, 那么后期组件在不同的地方多次调用的时候, 会相互产生影响, 因为每一次调用操作的 data 对象是一样的。使用函数的方式返回对象, 可以保证组件的每一次调用都会创建一个新对象，这样组件的每一次调用不会相互产生影响。&lt;/p&gt;

&lt;h1 id=&quot;v-if-v-show&quot;&gt;v-if 和 v-show&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;共同点是：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;v-if 和 v-show 都能实现元素的显示隐藏。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;v-if 和 v-show 的区别&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;v-show 只是简单的控制元素的 display 属性，而 v-if 才是条件渲染（条件为真，元素会被渲染，条件为假，元素会被销毁）；&lt;/li&gt;
&lt;li&gt;v-show 有更高的首次渲染开销，而 v-if 的首次渲染开销要小的多；&lt;/li&gt;
&lt;li&gt;v-if 有更高的切换开销，v-show 切换开销小；&lt;/li&gt;
&lt;li&gt;v-if 有配套的 v-else-if 和 v-else，而 v-show 没有。&lt;/li&gt;
&lt;li&gt;v-if 可以搭配 template 使用，而 v-show 不能。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;v-show 与 v-if的使用场景&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;v-if 相比 v-show 开销更大（直接操作 dom 节点增加与删除），如果需要非常频繁地切换，则使用 v-show 较好。如果在运行时条件很少改变，则使用 v-if 比较好。&lt;/p&gt;

&lt;h1 id=&quot;v-for-key&quot;&gt;v-for 中的 key&lt;/h1&gt;

&lt;p&gt;为什么 vue 中循环遍历的时候，尽量不要用索引值作为动态绑定的 key 值？&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 Vue 中，循环遍历通常使用 v-for 指令来实现。v-for 指令通常需要绑定一个 key值，帮助 Vue 跟踪每个列表项的身份，以便在列表中发生变化时进行高效的更新。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用索引值作为 key 值可能会导致一些问题。例如，如果您的列表项在循环过程中被重新排序或过滤，则可能会出现问题。由于索引值是按顺序分配的，因此如果您在列表的中间插入或删除项目，则所有后续项目的索引值都会发生更改，从而导致 Vue 进行不必要的重新渲染。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;此外，使用索引值作为 key 值还可能导致性能问题。在处理大型列表时，Vue 可能需要在每次更新时对整个列表进行重新渲染，这可能会导致性能瓶颈。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为了避免这些问题，建议使用列表项中具有唯一标识符的属性作为 key 值。这可以确保每个项具有唯一的身份，并且在列表中进行排序或过滤时仍然能够正确更新。如果您的列表项没有唯一标识符，则可以考虑创建一个。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;nexttick&quot;&gt;nextTick&lt;/h1&gt;

&lt;p&gt;在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 修改数据&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// DOM 还没有更新&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// DOM 更新了&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$nextTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;keep-alive&quot;&gt;keep-alive&lt;/h1&gt;

&lt;p&gt;说一下 keep-alive 标签的作用，以及它的使用场景？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;keep-alive 标签的作用&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在 Vue 中，keep-alive 标签可以用来缓存组件，当一个组件被包裹在 keep-alive 标签中时，离开当前页面时，这个组件不会被销毁，而是被缓存起来，当这个组件再次被使用时，Vue 会从缓存中提取组件实例，并重新挂载，而不是重新渲染。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;keep-alive 的使用场景&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;这个功能可以提高应用的性能，特别是在需要频繁切换组件的场景下，就比如 Tab 切换或者路由切换，因为不需要每一次切换时都重新创建和销毁组件，而是直接从缓存中获取，这样可以避免重复的初始化和渲染，从而提高应用的响应速度和性能。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;举个应用场景，有个员工列表，现在我们点击某条数据，查看员工详情后，再返回到员工列表，这个时候我们就希望这个列表能够保持刚才的状态，这时候就可以使用 keep-alive 把这个列表所在的组件包裹起来。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;com&quot;&gt;组件化和模块化一样吗？com&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;模块化, 是从代码逻辑角度进行划分的，保证每个模块的职能单一，比如登录页的登录功能，就是一个模块，注册功能又算是一个模块。&lt;/li&gt;
&lt;li&gt;组件化，是从 UI 界面的角度划分的；页面上每个独立的区域，都可以视为一个组件，前端组件化开发，便于 UI 组件的复用，减少代码量。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;区别是：划分角度不同，组件化是从 UI 界面角度来划分的，模块化是从代码逻辑角度来划分的。&lt;/p&gt;

&lt;h1 id=&quot;data-props&quot;&gt;data 和 props 的区别？&lt;/h1&gt;

&lt;p&gt;在实际 vue 项目中，我们经常会在子组件里看到 data 和 props 属性，这两者里面的数据使用方式基本是一致的。但是还是有一定的区别。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data 不需要父组件传值，自身进行维护；而 props 需要父组件传值。&lt;/li&gt;
&lt;li&gt;data 上的数据都是可读可写的；而 props 的数据都是父组件传递过来的，而且由于它是单向数据流，因此数据只可读，无法重新修改。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果传递的 props 值是基本类型(像 Number，Boolean，String)子组件直接修改,控制台肯定会报错的，但是如果传递的是引用类型，像 Object，数组结构，子组件修改里面的属性值或者某一数组元素，控制台是不会报错的。因为对于引用类型改的只是值，而不是引用地址。&lt;br&gt;
不过，不管传递什么形式的数据，我们都是不建议在子组件中直接修改 Props 的值的，因为这样会破坏单一数据流，可能会导致数据的变化无法追踪。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;问：那在子组件中修改 props 的正确操作又是什么呢?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;答：如果子组件只是想修改后自己使用，不想影响到父组件的数据，那么我们可以在子组件中的 data 里定义一个变量，让这个变量的初始值等于父组件传过来的 props 值，相当于 copy 一份这个props 值，后面需要修改的话就改自己 data 里的这个值。这样就不会影响到父组件了。如果处理后想同步修改父组件的值，那么可以通过 &lt;code&gt;this.$emit&lt;/code&gt; 事件触发父组件去修改。&lt;/p&gt;

&lt;h1 id=&quot;first-paint&quot;&gt;白屏时间和首屏时间的区别？First Paint&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;白屏时间(First Paint)：是指用户输入内容回车，到浏览器开始出现第一个字符，即开始显示内容的时间。所以，白屏时间 = 页面开始展示的时间点 - 开始请求的时间点。&lt;/li&gt;
&lt;li&gt;首屏时间(First Contentful Paint)：是指浏览器从响应用户输入网络地址，到首屏内容渲染完成的时间。所以，首屏时间=首屏内容渲染结束时间点 - 开始请求的时间点。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过刚刚的两个概念，我们知道，首屏时间一定比白屏时间长，因为首屏时间的另一种计算是：首屏时间 = 白屏时间 + 首屏开始渲染至渲染结束的时间。&lt;/p&gt;

&lt;h1 id=&quot;refresh&quot;&gt;说三种刷新页面的方式？refresh&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;原生js方式：location.reload()，我们只需要在需要刷新的地方加这么一行代码即可做到刷新。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;借助 Vue 中的路由跳转方式：如果需要刷新，则写入 this.$router.go(0)，这个方法解释一下，就是我们要跳转路由，而需要跳转的页面就是本页面，所以是 go(0)，这样就可以做到页面的重新加载。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;provide / inject 组合方式。前两种方法都是强制刷新，页面会出现短暂空白，而 provide/inject 是普通刷新，不会使页面出现空白。这个方法，允许一个祖先组件通过 provide 向其所有子孙后代提供数据，不论组件层次有多深，子组件都可以通过 inject 来注入，接收这个数据。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;具体实现：在项目的 app.vue 文件中定义一个布尔类型的数据，通过 v-if 来控制 router-view 是否展示，同时定义一个刷新函数，函数内部逻辑主要是将展示设为 false，等 nextTick 执行后再将展示设为 true，实现页面的重新加载；写好刷新函数后，在需要刷新的组件中通过 inject 注入刚刚 app.vue 中 provide 提供的依赖，也就是那个刷新函数，然后直接调用这个函数即可实现刷新。&lt;/p&gt;

&lt;p&gt;总结刷新函数做的事情就是，想要刷新的时候，我们就调用刷新函数，结合 v-if 的作用，先将组件是否展示设为 false 让组件先销毁，再将是否展示设为 true 让组件创建。除了以上方式，还有 this.$forceUpdate() 等刷新方式。&lt;/p&gt;

&lt;h1 id=&quot;vue&quot;&gt;vue 中如何单独更改某个页面的背景颜色？&lt;/h1&gt;

&lt;p&gt;【需求】全局页面背景色是白色，现需要更改某个页面的背景色为灰色。&lt;br&gt;&lt;br&gt;
【无效】尝试直接改 body 标签的样式，但是设置后，发现所有页面背景色都变成灰色了。&lt;br&gt;&lt;br&gt;
【原因】vue 是一个单页面应用，只有一个 index.html，牵一发而动全身。&lt;br&gt;&lt;br&gt;
【正确做法】在这个页面创建前，也就是 beforeCreate 生命周期函数里把 body 背景色改成我们想要的颜色，同时在这个页面销毁前，也就是 beforeDestroy 生命周期钩子中，移除我们刚加的背景色样式。这样跳到其他页面时，刚在那个页面加的 body 背景色就会移除，继续使用全局的那个背景样式。  &lt;/p&gt;

&lt;p&gt;具体代码是:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;beforeCreate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'style'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'background-color:#fff'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;beforeDestroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'body'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'style'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;除了在需要修改的页面上里改 body 的背景样式外，我们也可以把这块逻辑封在路由守卫中，当进入需要更改的页面路由时，做刚刚的样式操作。离开这个路由时移除。&lt;/p&gt;

&lt;h1 id=&quot;ref&quot;&gt;ref 的作用以及使用场景？&lt;/h1&gt;

&lt;p&gt;ref 可以用来获取 dom 元素。如果我们给一个元素绑定 ref=“test”，那么我们就可以通过 this.$refs.test 获取 dom，然后做一些我们需要的操作。&lt;/p&gt;

&lt;p&gt;ref 也可以获取子组件中的方法或者 data 等。如果给子组件上绑定一个 ref，值依然假设为 test，那么在父组件中通过 this.$refs.test ，就可以拿到一个 VueComponent 对象，这个对象里面有这个子组件的各个属性，打印出来会发现里面有个 $el 属性，这就是这个子组件的 dom 对象。如果子组件的 data 中有个 msg 属性，那么在父组件内我们就可以通过 this.$refs.test.msg 拿到子组件的这个 msg 值；再假设子组件有一个 getData 方法，那么父组件内通过 this.$refs.test.getDgta() 也可以调用子组件的 getData 方法。  &lt;/p&gt;

&lt;h1 id=&quot;assets-static&quot;&gt;静态资源放在哪里？assets 和 static 的区别？&lt;/h1&gt;

&lt;p&gt;vue 项目的目录结构通常在 src 目录下有个 assets 文件夹，和 src 同级的地方有个 static 文件夹。&lt;/p&gt;

&lt;p&gt;【相同点】&lt;/p&gt;

&lt;p&gt;两个文件夹下都可以用于存储项目中所需的静态资源，像图片，样式文件等等。&lt;/p&gt;

&lt;p&gt;【区别】&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;assets 下存放的静态资源文件在项目打包时，也就是执行 npm run build 指令时，会走 webpack 的打包流程，做压缩代码体积、代码格式化这种操作；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;static 中存放的资源文件不会走打包流程，而是直接复制进最终的 dist 目录里。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;【总结】&lt;/p&gt;

&lt;p&gt;由于第三方类库资源一般都已经经过处理了，所以我们可以在 static 里放一些外部的第三方资源文件; assets 放我们自己项目中的图片等资源，让这些资源走打包流程，减少最终包的体积。但是实际开发中情况肯定是多变的，还是要根据实际情况来看把静态资源文件放在哪里更合适。&lt;/p&gt;

&lt;h1 id=&quot;vue-route-router&quot;&gt;vue 中 route 和 router 的区别？&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;this.$router 是 VueRouter 的一个实例，是一个全局路由对象，它可以用来操作路由，项目中比较常用的就是拿来做路由跳转，比如经常我们需要跳转到另一个页面时，就会写 this.$router.push( )，&lt;br&gt;&lt;/li&gt;
&lt;li&gt;this.$route 是当前激活的路由对象，通过它我们可以拿到当前路由的一些信息比如 path,，query，meta 等属性。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;比如我们希望查看某条数据的详情，点击详情时需要跳转路由到详情页面，这里就可以通过 this.$router.push 来做跳转，并且我们可以给即将跳转到的详情路由对象的 query 对象里传个该条数据的 id，为的是希望路由跳转后，通过这个 id 去获取数据的详情并展示，跳转后怎么拿 id 呢，我们就可以通过 this.$route 先拿到当前路由的所有信息，然后去 query 对象里拿刚刚在上一页面跳转前放进去的 id 属性，这样拿到 id 后再去查详情数据。完整的就是 this$route.query.id。&lt;/p&gt;

&lt;p&gt;概括来说就是，route 是用来获取当前路由信息的，也就是读路由信息，而 router 是用来操作路由的，是写路由的。&lt;/p&gt;

&lt;h1 id=&quot;go&quot;&gt;平时项目中怎么做跳转？go&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;第一个方法就是标签，我们可以在标签里面添加 to 属性来配置需要跳转的路径，浏览器解析的时候会将其解析为类似于 a 标签的东西，&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第二种方案就是 this.$router.push() 方法，我们可以在某个函数里面要用路由的这个方法来实现跳转。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第三种方法是 this.$router.replace()，this.$router.push() 跳转到指定 url 路径的同时也会像 history 栈中添加一条记录，点击后退就会返回到上一个页面，this.$router.replace()方法跳转到指定URL 路径点击返回，他是跳转到你看到的上上个页面也就是说目标页面直接替换了，而不是添加一条记录，  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第四种方法 this.$router.go(n)，我们可以利用这个方法向前或者向后跳转 n 个页面，比如说 n 是1，可以跳到下一页，如果是 -1，则回退到上一页，0 就是当前页面。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;echarts&quot;&gt;项目中如何做到 echarts 图表自适应？&lt;/h1&gt;

&lt;p&gt;【需求】浏览器窗口大小变化的时候，echarts 图表要随着浏览器窗口变化而变化。&lt;/p&gt;

&lt;p&gt;【解决】window.addEventListener 方法监听窗口的变化，当窗口变化时，让需要自适应的 echarts 实例调用 echarts 官方给的自适应 resize方法，可以在 mounted 钩子函数中写下面的代码，这样就可以实现自适应了。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'resize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myEchart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;lazy&quot;&gt;说几种图片懒加载的实现方式？lazy&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;背景及原理&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在前端项目中，当页面有很多图片的时候，图片加载就需要一定的时间，这样是很耗费服务器性能的，不仅影响渲染速度还会浪费带宽，为了解决这个问题，提高用户体验，所以就出现了懒加载这种方式来减轻服务器的压力，就是优先加载可视区域的内容，其他部分的内容等进入了可视区域再进行加载，从而提高性能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实现思路&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;图片都是根据 src 属性进行加载的，所以我们可以在图片没有进入可视区域前，先不给 src 赋值（或者可以先给一个很小的 loading 图的地址），等到图片进入可视区域再给 src 赋真正的值。图片的真实地址可以先存储在 data-src 中。了解了实现思路，那继续最关键的一步，那就是如何计算图片是否进入了可视区域？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;具体实现方式&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h6&amp;gt;&lt;/span&gt;图片懒加载&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h6&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-3.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-4.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-1.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-4.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-4.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-3.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-4.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-old.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-4.jpg&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-1.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-4.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/static/images/login-bg-4.jpg&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;br&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;第一种：vue-lazyload 插件实现&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(1) 安装插件&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lazyload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(2) 在main.js文件中引入并使用&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueLazy&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lazyload&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VueLazyload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(3) 修改图片显示方式为懒加载即可。将:src=“xxx” 属性直接改为v-lazy=“xxx”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第二种：IntersectionObserver API 实现。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个api可以自动&amp;quot;观察&amp;quot;元素是否可见，Chrome 51+ 已经支持。由于可见的本质是，目标元素与视口产生一个交叉区，所以这个 API 又叫做交叉观察器。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intersectionObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;intersectionObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'img'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;observer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IntersectionObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'imgs==='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// imgs: 目标元素集合imgs.forEach((img) =&amp;gt; {&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// img.isIntersecting代表目标元素可见，可见的时候给src赋值if (img.isIntersecting) {const item = img.targetitem.src = item.dataset.srcobserver.unobserve(item);}})})&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//定时器和Array.from的目的是让images可遍历setTimeout(()=&amp;gt;{Array.from(images).forEach(item =&amp;gt; {observer.observe(item);})},300)}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// isIntersecting 为true 代表该目标元素可见，可以加载；target 即对应页面中的真实img。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;第三种：元素的 offsetTop API 实现。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;判断进入可视区域的条件有变，通过下图，可以看出，这里进入可视区域的判断条件是某一元素e的 e.offsetTop &amp;lt; document.body.clientHeight + document.body.scrollTop&lt;br&gt;
获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置 &amp;lt; 网页可视区域的高度 + 网页被卷去的高度&lt;/p&gt;

&lt;h1 id=&quot;more&quot;&gt;more&lt;/h1&gt;

&lt;p&gt;文章抄写&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.taodudu.cc/news/show-5964710.html?action=onClick&quot;&gt;2023前端面试题汇总&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>安全漏洞</title>
   <link href="/js/2023/08/22/js-security"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/js/2023/08/22/js-security</id>
   <content type="html">&lt;h1 id=&quot;security&quot;&gt;平常做项目的时候，遇到过哪些安全漏洞？security&lt;/h1&gt;

&lt;p&gt;（1）form 表单提交前加上校验，防止 xss 攻击。  &lt;/p&gt;

&lt;p&gt;为防止 xss 攻击，表单的每个字段提交需要做校验或者编码过滤。校验的话可以用正则，比如校验手机号或者邮箱之类的。编码过滤的话，提交前需要对提交的内容进行编码过滤，防止特殊的标签之类的提交到后台。比如用户输入 &amp;#39;’ 这类的脚本或者 html 标签之类的。要过滤掉，防止提交到后台。&lt;/p&gt;

&lt;p&gt;（2）限制 URL 访问，越权访问。  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;在公共模块增加校验方式，查看是否具有对应权限。例如，每个客户只能查看和修改自己的信息，在 url 地址栏参数中，带的参数有序列号之类的，攻击者可能会想到，客户的序列号是按照顺序往下排的，要是按顺序加一减一是不是就可能访问到别人的账号（水平越权）。还有一种是不同级别的登陆者登陆所拥有的功能权限不同，低权限者可能访问高权限者的账号，从而使用原本它不具有的功能，这种也是越权漏洞，属于垂直越权。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;监听路由跳转，在路由跳转之前，增加校验（路由导航守卫）。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;和后台联调，将对应的信息存入 cookie，在数据访问时进行对比。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;（3）文件上传漏洞。例如用户上传任意类型的文件可能会让攻击者注入危险内容或恶意代码，并在服务器上运行。&lt;/p&gt;

&lt;p&gt;解决：  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;严格限制用户上传的文件后缀以及文件类型。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;定义上传文件类型白名单，只允许白名单里面类型的文件上传。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;文件上传目录禁止执行脚本解析，避免攻击者进行二次攻击。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>js 判断空对象的方法</title>
   <link href="/js/2023/08/22/js-object-isEmptyObj"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/js/2023/08/22/js-object-isEmptyObj</id>
   <content type="html">&lt;h1 id=&quot;js&quot;&gt;js 判断空对象的方法&lt;/h1&gt;

&lt;h2 id=&quot;json-stringify-quot-quot&quot;&gt;JSON.stringify() == &amp;quot;{}&amp;quot;&lt;/h2&gt;

&lt;p&gt;空对象对应的字符串为&amp;quot;{}&amp;quot;,&lt;/p&gt;

&lt;p&gt;使用 &lt;code&gt;JSON.stringify()&lt;/code&gt; 方法把对象转化成字符串.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;es6-object-keys&quot;&gt;ES6 的 Object.keys()&lt;/h2&gt;

&lt;p&gt;Object.keys() 返回对象中属性名(&lt;code&gt;可枚举&lt;/code&gt;)组成的数组。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;object-getownpropertynames&quot;&gt;Object.getOwnPropertyNames()&lt;/h2&gt;

&lt;p&gt;getOwnPropertyNames() 返回一个数组，其包含给定对象中所有自有属性（包括&lt;code&gt;可枚举和不可枚举属性&lt;/code&gt;，但不包括使用 symbol 值作为名称的属性）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getOwnPropertyNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames&quot;&gt;Object.getOwnPropertyNames()&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;for-in&quot;&gt;for...in 循环&lt;/h2&gt;

&lt;p&gt;使用 for...in 循环可以遍历所有属性以此判断对象是否为空对象：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isEmptyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;object-keys-for-in&quot;&gt;Object.keys() 和 for...in 的区别&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Object.keys() 返回一个数组，包括对象自身的（&lt;code&gt;不含继承&lt;/code&gt;的）所有可枚举属性（不含 Symbol 属性）。&lt;br&gt;&lt;br&gt;
for...in 循环遍历对象自身的和&lt;code&gt;继承&lt;/code&gt;的可枚举属性（不含 Symbol 属性）。  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;object-keys-object-getownpropertynames&quot;&gt;Object.keys() 和 Object.getOwnPropertyNames() 的区别&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Object.keys() 返回对象中属性名(&lt;code&gt;可枚举&lt;/code&gt;)组成的数组。&lt;br&gt;&lt;br&gt;
getOwnPropertyNames() 返回一个数组，其包含给定对象中所有自有属性（包括&lt;code&gt;可枚举和不可枚举属性&lt;/code&gt;，但不包括使用 symbol 值作为名称的属性）&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>JSON.stringify() 有什么缺点</title>
   <link href="/js/2023/08/22/js-json-stringify"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/js/2023/08/22/js-json-stringify</id>
   <content type="html">&lt;h1 id=&quot;json-stringify&quot;&gt;JSON.stringify() 有什么缺点&lt;/h1&gt;

&lt;p&gt;JSON.parse(JSON.stringify(obj)) 用 JSON 实现深拷贝，然而这个方法还有弊端。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;如果 obj 里面有时间对象，则 JSON.stringify 后再 JSON.parse 的结果，时间将是字符串的形式，而不是对象的形式。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果 obj 里有 RegExp(正则表达式的缩写)、Error对象，则序列化的结果将只得到空对象。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果 obj 里有函数、undefined、Symbol，则序列化的结果会把函数或 undefined 丢失。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果 obj 里有 NaN、Infinity 和 -Infinity，则序列化的结果会变成 null。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;JSON.stringify() 只能序列化对象的可枚举的自有属性，例如 如果 obj 中的对象是有构造函数生成的， 则使用 JSON.parse(JSON.stringify(obj)) 深拷贝后，会丢弃对象的constructor。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果对象中存在循环引用的情况也无法正确实现深拷贝。&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;more&quot;&gt;more&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.taodudu.cc/news/show-3403780.html?action=onClick&quot;&gt;利用 JSON.stringify 深拷贝的弊端&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a href=&quot;https://blog.csdn.net/jason_renyu/article/details/123640102&quot;&gt;JS中JSON序列化JSON.stringify的坑点和处理&lt;/a&gt;  &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>地址栏输入 URL 敲下回车后发生了什么?</title>
   <link href="/http/2023/08/22/js-http-url-onload"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/http/2023/08/22/js-http-url-onload</id>
   <content type="html">&lt;h1 id=&quot;url&quot;&gt;地址栏输入 URL 敲下回车后发生了什么?&lt;/h1&gt;

&lt;h1 id=&quot;simple&quot;&gt;简单答案 simple&lt;/h1&gt;

&lt;p&gt;❶ URL 解析&lt;br&gt;&lt;br&gt;
❷ 缓存判断&lt;br&gt;&lt;br&gt;
❸ DNS 查询&lt;br&gt;&lt;br&gt;
❹ TCP 连接 (三次握手)&lt;br&gt;&lt;br&gt;
❺ HTTP 请求&lt;br&gt;&lt;br&gt;
❻ 响应请求&lt;br&gt;&lt;br&gt;
❼ 页面渲染&lt;br&gt;&lt;br&gt;
❽ 关闭 TCP 连接（四次挥手)&lt;/p&gt;

&lt;h1 id=&quot;detail&quot;&gt;详细分解 detail&lt;/h1&gt;

&lt;h2 id=&quot;url&quot;&gt;URL 解析&lt;/h2&gt;

&lt;p&gt;在浏览器的地址栏输入 URL 并按下回车键时，浏览器首先会对 URL 进行解析。&lt;/p&gt;

&lt;p&gt;首先判断它是否是一个合法的 URL，一个 url 的解析如下：&lt;/p&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2023/7-8-9/url.webp&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;cache&quot;&gt;缓存判断 cache&lt;/h2&gt;

&lt;p&gt;浏览器会先判断是否存在缓存，并且比较缓存是否过期。&lt;/p&gt;

&lt;h2 id=&quot;dns-ip&quot;&gt;DNS 查询 IP 地址&lt;/h2&gt;

&lt;p&gt;浏览器解析 URL 后，提取其中域名部分，然后进行 DNS 查询，将域名转换为对应的 IP 地址。&lt;/p&gt;

&lt;h2 id=&quot;tcp&quot;&gt;建立 TCP连接（三次握手）&lt;/h2&gt;

&lt;p&gt;根据 IP 建立 TCP 连接, TCP 三次握手确保连接可靠。&lt;/p&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2023/7-8-9/http-tcp-three.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;客户端发送一个带有 SYN 标志的数据包给服务端，服务端收到后，回传一个带有 SYN/ACK 标志的数据包以示传达确认信息，最后客户端再回传一个带 ACK 标志的数据包，代表握手结束，连接成功。&lt;/p&gt;

&lt;p&gt;通俗化之后就是：&lt;/p&gt;

&lt;p&gt;客户端：老弟我要跟你链接  &lt;/p&gt;

&lt;p&gt;服务端：好的，同意了  &lt;/p&gt;

&lt;p&gt;客户端：好嘞  &lt;/p&gt;

&lt;h2 id=&quot;http&quot;&gt;浏览器发送 HTTP 请求&lt;/h2&gt;

&lt;p&gt;浏览器向服务器发送 HTTP 请求。&lt;/p&gt;

&lt;p&gt;完整的HTTP请求包含请求起始行、请求头部、请求正文三部分。&lt;/p&gt;

&lt;h2 id=&quot;return&quot;&gt;服务器处理请求，返回数据 return&lt;/h2&gt;

&lt;p&gt;服务器接收到 HTTP 请求后，会根据请求的内容进行处理。服务器可能会读取请求体中的数据，查询数据库，执行业务逻辑等操作。&lt;/p&gt;

&lt;p&gt;处理完成之后，服务器会生成 HTTP 响应并发送会浏览器。&lt;/p&gt;

&lt;h2 id=&quot;paint&quot;&gt;页面渲染 paint&lt;/h2&gt;

&lt;p&gt;《1》查看响应头的信息，根据不同的指示做对应处理，eg：重定向， 存储 cookie，解压 gzip，缓存资源等等&lt;/p&gt;

&lt;p&gt;《2》查看响应头的 Content-type 的值，根据不同的资源类型采用不同的解析方式&lt;/p&gt;

&lt;p&gt;① 解析 HTML，构建 DOM 树&lt;br&gt;&lt;br&gt;
② 解析 CSS ，生成 CSS 规则树&lt;br&gt;&lt;br&gt;
③ 合并 DOM 树和 CSS 规则，生成 render 树&lt;br&gt;&lt;br&gt;
④ 布局 render 树（ Layout / reflow ），负责各元素尺寸、位置的计算&lt;br&gt;&lt;br&gt;
⑤ 绘制 render 树（ paint ），绘制页面像素信息&lt;br&gt;&lt;br&gt;
⑥ 浏览器会将各层的信息发送给 GPU，GPU 会将各层合成（ composite ），显示在屏幕上  &lt;/p&gt;

&lt;h2 id=&quot;tcp&quot;&gt;关闭 TCP 连接（四次挥手）&lt;/h2&gt;

&lt;p&gt;关闭 TCP 连接或继续保持连接&lt;/p&gt;

&lt;p&gt;通过四次挥手关闭连接(FIN ACK, ACK, FIN ACK, ACK)。&lt;/p&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2023/7-8-9/http-tcp-four.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;第一次挥手是浏览器发完数据后，发送 FIN 请求断开连接。&lt;/p&gt;

&lt;p&gt;第二次挥手是服务器发送 ACK 表示同意，如果在这一次服务器也发送 FIN 请求断开连接似乎也没有不妥，但考虑到服务器可能还有数据要发送，所以服务器发送 FIN 应该放在第三次挥手中。&lt;/p&gt;

&lt;p&gt;这样浏览器需要返回 ACK 表示同意，也就是第四次挥手。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>for...in 和 for...of 的区别</title>
   <link href="/js/2023/08/22/js-for-in-for-of"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/js/2023/08/22/js-for-in-for-of</id>
   <content type="html">&lt;h1 id=&quot;for-in-for-of&quot;&gt;for...in 和 for...of 的区别&lt;/h1&gt;

&lt;h1 id=&quot;for-in&quot;&gt;for...in&lt;/h1&gt;

&lt;p&gt;for...in 可以遍历对象和数组&lt;/p&gt;

&lt;h2 id=&quot;for-in&quot;&gt;for...in 遍历对象&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'张三'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;张三&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;for-in&quot;&gt;for...in 遍历数组&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;0
string
a

1
string
5

method
string
f() {return this.length}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有上段代码可以总结出 for...in 遍历数组的特点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;遍历的索引为字符串类型;&lt;/li&gt;
&lt;li&gt;遍历顺序可能不是按照数组顺序（随机顺序）;&lt;/li&gt;
&lt;li&gt;使用 for in 会遍历数组所有的可枚举属性，包括原型。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;for-of&quot;&gt;for...of&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;for...of 不能遍历对象，&lt;br&gt;&lt;br&gt;
for...of 可以简单、正确的遍历数组（不遍历原型上的 name 和 method）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'数组'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;a
5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;for...of 遍历数组得到的是数组的每一项值,不是索引。&lt;/p&gt;

&lt;h1 id=&quot;javascript&quot;&gt;Javascript 中可迭代对象&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;String&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Array&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Arguments&lt;br&gt;&lt;/li&gt;
&lt;li&gt;NodeList&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Map&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Set&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具有迭代器对象才可以使用 for...of，否则报错。&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;总结 Summary&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;for...in 适合遍历对象，for...of 适合遍历数组&lt;/code&gt;&lt;/strong&gt;  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;for...in 遍历的是数组的索引&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;for...in 遍历的是对象的属性，以及原型链上的属性&lt;/strong&gt;  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;for...of 遍历的是数组的值，不是索引&lt;/strong&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>ES6箭头函数和普通函数的区别</title>
   <link href="/js/2023/08/22/js-es6-arrow-function"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/js/2023/08/22/js-es6-arrow-function</id>
   <content type="html">&lt;h1 id=&quot;es6&quot;&gt;ES6箭头函数和普通函数的区别&lt;/h1&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary 箭头函数和普通函数的区别&lt;/h2&gt;

&lt;p&gt;❶ 声明方式不同：普通函数可以是声明式的，也可以是赋值式；而箭头函数只能是赋值式的；&lt;br&gt;&lt;br&gt;
❷ &lt;code&gt;this 指向不同&lt;/code&gt;：普通函数有原型 prototype，this 指向不确定；箭头函数本身没有 this ，因为没有原型，this 指向确定，&lt;code&gt;指向他父级作用域&lt;/code&gt;；&lt;br&gt;&lt;br&gt;
❸ 改变 this: 普通函数的 this 指向可以通过call、apply、bind改变；箭头函数的 this 永远不会变，call、apply、bind 也无法改变；&lt;br&gt;&lt;br&gt;
❹ 箭头函数没有原型 prototype；&lt;br&gt;&lt;br&gt;
❺ new 不同：普通函数可以 new;箭头函数不能 new;&lt;br&gt;&lt;br&gt;
❻ 是否可以当构造函数：&lt;code&gt;箭头函数不可以当作构造函数&lt;/code&gt;；&lt;br&gt;&lt;br&gt;
❼ 传参方式：普通函数可以获取 arguments 对象，箭头函数不能获取，可以通过 ...rest, 用 rest 对象代替  &lt;/p&gt;

&lt;h2 id=&quot;more&quot;&gt;more 更多详细例子等待补充...&lt;/h2&gt;
</content>
 </entry>
 
 <entry>
   <title>token</title>
   <link href="/bom/2023/08/22/http-token"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/bom/2023/08/22/http-token</id>
   <content type="html">&lt;h1 id=&quot;token-token&quot;&gt;token 在项目中是用来干什么的？为何要携带 token？&lt;/h1&gt;

&lt;h1 id=&quot;token&quot;&gt;token 在项目中是用来干什么的？&lt;/h1&gt;

&lt;p&gt;token 是令牌的意思，客户第一次登陆时，服务器会生成一段加密的字符串，然后会返回给客户端。后面客户端每次向服务端请求资源的时候，只需要带着 token，不需要带着用户名和密码去请求。&lt;/p&gt;

&lt;h1 id=&quot;token&quot;&gt;为什么要带 token ？&lt;/h1&gt;

&lt;p&gt;是因为用户登录成功之后，后续还会登陆去服务器获取数据。服务器对每一次前端的请求都要去验证是哪一位用户发送的，用户是否合法，这样反复去查询数据库，会给服务器造成压力，当后续请求都带上 token 后，服务器直接解密 token，就知道了用户的相关信息，省去了查询数据库的操作，减轻了数据库的压力。这就是 token 的作用。又因为基本的所有请求都要携带 token，总不能每一次都要手动配置，所以我们可以在请求拦截器中统一封装，让每一次请求都能带上 token。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>tcp和udp的区别及应用场景</title>
   <link href="/http/2023/08/22/http-tcp-udp"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/http/2023/08/22/http-tcp-udp</id>
   <content type="html">&lt;h1 id=&quot;tcp-udp&quot;&gt;tcp 和 udp 的区别及应用场景&lt;/h1&gt;

&lt;p&gt;tcp 和 udp 是传输层上两个性质不同的协议，但是它们的通信机制和应用场景不同。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TCP (Transmission Control Protocol)，传输控制协议。TCP 是一种面向连接的、可靠的、基于字节流的传输层通信协议。&lt;br&gt;&lt;br&gt;
UDP (User Data Protocol)，用户数据报协议。UDP 是一种无连接传输协议。  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;tcp&quot;&gt;tcp 特点&lt;/h1&gt;

&lt;p&gt;当一台计算机想要与另一台计算机通讯时，两台计算机之间的通信需要畅通且可靠，这样才能保证正确收发数据。例如，当你想查看网页或查看电子邮件时，希望完整且按顺序查看网页，而不丢失任何内容。当你下载文件时，希望获得的是完整的文件，而不仅仅是文件的一部分，因为如果数据丢失或乱序，都不是你希望得到的结果，于是就用到了TCP。&lt;/p&gt;

&lt;p&gt;❶ 面向连接&lt;br&gt;&lt;br&gt;
❷ 字节流传输&lt;br&gt;&lt;br&gt;
❸ 可靠传输（应答机制、超时重传、拥塞控制）&lt;br&gt;&lt;br&gt;
❹ 仅支持单播传输&lt;br&gt;&lt;br&gt;
❺ 提供全双工通信  &lt;/p&gt;

&lt;h1 id=&quot;udp&quot;&gt;udp 特点&lt;/h1&gt;

&lt;p&gt;❶ 实时性高&lt;br&gt;&lt;br&gt;
❷ 资源占用少&lt;br&gt;&lt;br&gt;
❸ 基于数据报&lt;br&gt;&lt;br&gt;
❹ 头部开销小&lt;br&gt;&lt;br&gt;
❺ 有单播、多播、广播的功能  &lt;/p&gt;

&lt;h2 id=&quot;tcp-udp&quot;&gt;tcp 和 udp 的区别&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;tcp 是面向连接的(需要建立连接后传输数据，这里说的就是 tcp 的三次握手); udp 是无连接的(发送数据前不需要建立连接)。&lt;/li&gt;
&lt;li&gt;tcp 是可靠传输(因为 tcp 拥有拥塞控制等机制，能够保证数据无差错传递）；udp 是不可靠传输（udp 没有相关机制，不保证数据的可靠交付)。&lt;/li&gt;
&lt;li&gt;tcp 将数据看成一串无结构的字节流，是面向字节流传输的；udp 是面向报文传输。&lt;/li&gt;
&lt;li&gt;tcp 是一对一的两点服务，即一条连接只有两个端点；udp 支持一对一、一对多、多对多的交互通信。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;综上，可知 &lt;code&gt;tcp 是可靠的传输协议，但效率慢&lt;/code&gt;;而 &lt;code&gt;udp 是不可靠的传输协议，但效率快&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;tcp-udp&quot;&gt;tcp 和 udp 的应用场景&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;tcp 的适用场景：用于对通信数据的完整性和准确性要求较高的情况。如: 重要文件传输，邮件发送等。&lt;br&gt;&lt;br&gt;
udp 的适用场景：用于对通讯速度要求较高，对数据信息的安全性和完整性要求相对较低的情况。如: 网络电话、视频会议、直播等实时通信。  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;sumary&quot;&gt;总结 sumary&lt;/h1&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;关键词&lt;/th&gt;
&lt;th&gt;TCP&lt;/th&gt;
&lt;th&gt;UDP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;是否连接&lt;/td&gt;
&lt;td&gt;面向连接&lt;/td&gt;
&lt;td&gt;无连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否可靠&lt;/td&gt;
&lt;td&gt;可靠传输&lt;/td&gt;
&lt;td&gt;不可靠传输&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;连接对象个数&lt;/td&gt;
&lt;td&gt;只能一对一通信&lt;/td&gt;
&lt;td&gt;支持一对一、一对多、多对一、多对多交互通信&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;传输方式&lt;/td&gt;
&lt;td&gt;面向字节流&lt;/td&gt;
&lt;td&gt;面向报文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;首部开销&lt;/td&gt;
&lt;td&gt;首部最小20字节，最大60字节&lt;/td&gt;
&lt;td&gt;首部开销小，近8字节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;适用场景&lt;/td&gt;
&lt;td&gt;要求可靠传输，如文件传输&lt;/td&gt;
&lt;td&gt;实时应用，如IP电话、视频会议、直播&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>tcp 的三次握手和四次挥手</title>
   <link href="/http/2023/08/22/http-tcp-three-four"/>
   <updated>2023-08-22T00:00:00+08:00</updated>
   <id>/http/2023/08/22/http-tcp-three-four</id>
   <content type="html">&lt;h1 id=&quot;tcp&quot;&gt;tcp 的三次握手和四次挥手&lt;/h1&gt;

&lt;h1 id=&quot;tcp&quot;&gt;tcp 建立连接（三次握手）&lt;/h1&gt;

&lt;p&gt;首先我们要知道建立连接的目的是什么，我们是为了可靠的传输数据。那既然是可靠的传输数据，我们必须保证客户端和服务端都能正常的发送和接收数据，如果某一方不能正常的发送或者接收数据，那整个数据的传输就不能成功，也就不可靠。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三次握手&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一次握手：第一次握手是客户端发送同步报文到服务端，这个时候客户端是知道自己具备发送数据的能力的，但是不知道服务端是否有接收和发送数据的能力；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第二次握手：当服务端接收到同步报文后，回复确认同步报文，此时服务端是知道客户端具有发送报文的能力，并且知道自己具有接收和发送数据的能力，但是并不知道客户端是否有接收数据的能力；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第三次握手：当客户端收到服务端的确认报文后，知道服务端具备接收和发送数据的能力，但是此时服务端并不知道自己具有接收的能力，所以还需要发送一个确认报文，告知服务端自己是具有接收能力的。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，当整个三次握手结束过后，客户端和服务端都知道自己和对方具备发送和接收数据的能力，随后整个连接建立就完成了，可以进行后续数据的传输了。&lt;/p&gt;

&lt;h1 id=&quot;tcp&quot;&gt;tcp 断开连接（四次挥手）&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;四次挥手&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一次挥手：客户端发起关闭连接的请求给服务端；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第二次挥手：服务端收到关闭请求的时候可能这个时候数据还没发送完，所以服务端会先回复一个确认报文，表示自己知道客户端想要关闭连接了，但是因为数据还没传输完，所以还需要等待；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第三次挥手：当数据传输完了，服务端会主动发送一个 FIN 报文，告诉客户端，表示数据已经发送完了，服务端这边准备关闭连接了。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第四次挥手：当客户端收到服务端的 FIN 报文过后，会回复一个 ACK 报文，告诉服务端自己知道了，再等待一会就关闭连接。&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;为什么握手要三次，挥手却要四次？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;因为握手的时候并没有数据传输，所以服务端的 SYN 和 ACK 报文可以一起发送，但是挥手的时候有数据在传输，所以 ACK 和 FIN 报文不能同时发送，需要分两步，所以会比握手多一步。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;为什么客户端在第四次挥手后还会等待 2MSL？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;等待 2MSL 是因为保证服务端接收到了 ACK 报文，因为网络是复杂了，很有可能 ACK 报文丢失了，如果服务端没接收到 ACK 报文的话，会重新发送 FIN 报文，只有当客户端等待了 2MSL 都没有收到重发的 FIN 报文时就表示服务端是正常收到了 ACK 报文，那么这个时候客户端就可以关闭了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>慕课网-前端性能优化企业级解决方案 6大角度+大厂视野实现项目全面优化</title>
   <link href="/other/2020/12/02/muke-performance-optimization"/>
   <updated>2020-12-02T00:00:00+08:00</updated>
   <id>/other/2020/12/02/muke-performance-optimization</id>
   <content type="html">&lt;h1 id=&quot;2-two&quot;&gt;第2章 性能优化的指标和工具-two&lt;/h1&gt;

&lt;h2 id=&quot;why-web&quot;&gt;why 为什么要进行Web性能优化【企业刚需】&lt;/h2&gt;

&lt;p&gt;性能 - Web 网站和应用的支柱&lt;/p&gt;

&lt;p&gt;流量 - 搜索 - 转换率 - 用户体验&lt;/p&gt;

&lt;p&gt;阅读：Amazon 发现每 100ms 延迟导致 1% 的销量损失&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;寻找性能瓶颈&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;了解性能指标 - 多快才算快&lt;br&gt;&lt;/li&gt;
&lt;li&gt;利用测量工具和APIs&lt;br&gt;&lt;/li&gt;
&lt;li&gt;优化问题，重新测量（迭代）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;移动端挑战多&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;设备硬件，网速，屏幕尺寸，交互方式&lt;br&gt;&lt;/li&gt;
&lt;li&gt;用户缺少耐心，&amp;gt;3秒加载导致53%的跳出率（bounce rate）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;持续增长的移动用户和移动电商业务&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;index&quot;&gt;性能指标和优化目标-index【了解行业标准】&lt;/h2&gt;

&lt;p&gt;chrome 浏览器 检查中的 &lt;code&gt;Network、Lighthouse 、Performace&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;优化所有的异步请求在1秒内返回，可以做压缩，如果还不行，就需要前端交互，比如做加载动画。&lt;/p&gt;

&lt;p&gt;性能优化 - 加载&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;理解加载瀑布图【Network-Waterfall】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;基于 HAR 存储于重建性能信息&lt;br&gt;&lt;/li&gt;
&lt;li&gt;速度指数（Lighthouse - Speed Index）【4s】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;重要测量指标&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;性能优化 - 加载&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Speed Index【Lighthouse - Speed Index (4s)】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;TTFB【Waterfall-Waiting】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;页面加载时间【Waterfall-Load 红线】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;首次渲染【Lighthouse - First Contentful Paint】&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;性能优化 - 响应&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;交互动作的反馈时间&lt;br&gt;&lt;/li&gt;
&lt;li&gt;动画帧率 FPS&lt;br&gt;&lt;/li&gt;
&lt;li&gt;异步请求的完成时间&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rail&quot;&gt;RAIL 测量模型【黄金指南】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;什么是 RAIL ？&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Response 响应【网站给用户的响应体验】 &lt;/li&gt;
&lt;li&gt;Animation 动画&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Idle 空闲【让浏览器有足够的空闲时间】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Load 加载【用户白屏时间】&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;RAIL 的目标&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;让良好的用户体验成为性能优化的目标  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RAIL 评估标准&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;响应：处理事件应在50ms以内完成&lt;br&gt;&lt;/li&gt;
&lt;li&gt;动画：每10ms产生一帧&lt;br&gt;&lt;/li&gt;
&lt;li&gt;空闲：尽可能增加空闲时间&lt;br&gt;&lt;/li&gt;
&lt;li&gt;加载：在5s内完成内容加载并可以交互&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;性能测量工具&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chrome DevTools 开发调试、性能评测&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Lighthouse 网站整体质量评估&lt;br&gt;&lt;/li&gt;
&lt;li&gt;WebPageTest 多测试地点、全面性能报告&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpagetest&quot;&gt;WebPageTest 多测试地点、全面性能报告【快捷好用的在线分析工具】&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webpagetest.org/&quot;&gt;https://webpagetest.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解读 WebpageTest 的报告&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;waterfall chart 请求瀑布图&lt;br&gt;&lt;/li&gt;
&lt;li&gt;first view 首次访问&lt;br&gt;&lt;/li&gt;
&lt;li&gt;repeat view 二次访问&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WebPageTest&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在线进行网站性能分析, WebPageTest 多测试地点、全面性能报告&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如何本地部署 WebPageTest 工具&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lighthouse&quot;&gt;Lighthouse 网站整体质量评估【一站式全面呈现性能指标】&lt;/h2&gt;

&lt;h2 id=&quot;chrome-devtools&quot;&gt;使用 Chrome DevTools 分析性能【最大法宝】&lt;/h2&gt;

&lt;p&gt;Network&lt;br&gt;
 Performace&lt;/p&gt;

&lt;h2 id=&quot;apis&quot;&gt;常用的性能测量 APIs【不可不知，打开精细化、自定义测量的大门】 &lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 计算一些关键的性能指标&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// load 事件后触发&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'load'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Time to Interactive 可交互时间&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;performance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getEntriesByType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'navigation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domInteractive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TTI: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/body&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/html&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;更多的性能指标如何计算&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;DNS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;解析耗时:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domainLookupEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domainLookupStart&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;TCP&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;连接耗时:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connectEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connectStart&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;SSL&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;安全连接耗时:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connectEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secureConnectionStart&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;网络请求耗时&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TTFB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestStart&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;数据传输耗时:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseStart&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;解析耗时:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domInteractive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseEnd&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;资源加载耗时:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadEventStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domContentLoadedEventEnd&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;First&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;时间:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domainLookupStart&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;白屏时间:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchStart&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;首次可交互时间:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domInteractive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchStart&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ready&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;时间:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;domContentLoadEventEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchStart&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;页面完全加载时间:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadEventStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchStart&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;头部大小：&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;transferSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encodedBodySize&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;重定向次数：&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;performance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;redirectCount&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;重定向耗时:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redirectEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;redirectStart&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 观察长任务&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;observer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PerformanceObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getEntries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;observer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entryTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'longtask'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 见面可见性的状态监听&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'visibilitychange'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitHidden&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// webkit prefix detected&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;vEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'webkitvisibilitychange'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visibilityChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hidden&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitHidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Web page is hidden.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Web page is visible.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visibilityChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 网络状态&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mozConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;effectiveType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateConnectionStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Connection type changed from &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; to &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;effectiveType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;effectiveType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'change'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateConnectionStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;3-three&quot;&gt;第3章 渲染优化-three (与浏览器为友，共进退)&lt;/h1&gt;

&lt;h2 id=&quot;principle&quot;&gt;浏览器渲染原理和关键渲染路径-principle【大厂前端面试必考】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;浏览器的渲染流程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript -&amp;gt; Style -&amp;gt; Layout -&amp;gt; Paint -&amp;gt; Composite&lt;/p&gt;

&lt;p&gt;构建 DOM 对象&lt;br&gt;
HTML -&amp;gt; DOM&lt;/p&gt;

&lt;p&gt;构建 CSSOM 对象&lt;br&gt;
CSS -&amp;gt; CSSOM&lt;/p&gt;

&lt;p&gt;浏览器构建渲染树&lt;br&gt;
DOM + CSSOM = Render Tree&lt;/p&gt;

&lt;h2 id=&quot;thrashing&quot;&gt;回流与重绘, 如何避免布局抖动-thrashing&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;布局（layouts）与绘制（paint）&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;渲染树只包含网页需要的节点&lt;br&gt;&lt;/li&gt;
&lt;li&gt;布局计算每个节点精确的位置和大小-“盒模型”&lt;br&gt;&lt;/li&gt;
&lt;li&gt;绘制是像素化每个节点的过程&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;影响回流的操作&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;添加/删除元素&lt;/li&gt;
&lt;li&gt;display:none&lt;br&gt;&lt;/li&gt;
&lt;li&gt;移动元素位置&lt;br&gt;&lt;/li&gt;
&lt;li&gt;操作 styles&lt;br&gt;&lt;/li&gt;
&lt;li&gt;offsetLeft,scrollLeft,clientWidth&lt;br&gt;&lt;/li&gt;
&lt;li&gt;修改浏览器大小，字体&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;避免 layout thrashing 布局抖动&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;避免回流&lt;br&gt;&lt;/li&gt;
&lt;li&gt;读写分离&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fastdom&quot;&gt;使用 FastDom【防止布局抖动的利器】&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wilsonpage/fastdom&quot;&gt;https://github.com/wilsonpage/fastdom&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用 FastDOM 批量对 DOM 的读写操作 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;什么是 FastDom&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如何使用 FastDom 的 APIs 【measure读、mutate写】&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 读&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fastdom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'measure'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 写&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fastdom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mutate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fastdom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'measure'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fastdom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mutate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mutate&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mutate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;layers&quot;&gt;复合线程与图层-layers【深入渲染流水线的最后一站】&lt;/h2&gt;

&lt;p&gt;复合线程（compositor thread）与图层（layers）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;复合线程做什么？&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;将页面拆分图层进行绘制再进行复合&lt;br&gt;&lt;/li&gt;
&lt;li&gt;利用 DevTools 了解网页的图层拆分情况&lt;br&gt;&lt;/li&gt;
&lt;li&gt;哪些样式仅影响复合&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;只触发复合，不触发布局和重绘 transform、opacity&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Position  transform: translate(npx, npx)
Scale     transform: scale(n)
Rotation  transform: ratate(ndeg)
Opacity   opacity: 0...1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;repaint&quot;&gt;避免重绘-repaint【必学，加速页面呈现】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;减少重绘的方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;利用 DevTools 识别 paint 的瓶颈&lt;br&gt;&lt;/li&gt;
&lt;li&gt;利用 CSS 的 &lt;code&gt;will-change&lt;/code&gt; 属性 创造新的图层&lt;br&gt;&lt;/li&gt;
&lt;li&gt;做动画的时候尽量使用 transform 而不是使用影响布局的 width 等&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;debounce&quot;&gt;高频事件防抖-debounce【解救页面卡顿的秘药】&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 利用 Chrome DevTllos 打开时可以复现抖动的问题（pointer events）&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pointermove'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;防抖之后&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ticking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pointermove'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ticking&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ticking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ticking&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;4-four&quot;&gt;第4章 代码优化-four (快来看看怎样写出真正高性能的代码)&lt;/h1&gt;

&lt;h2 id=&quot;js-parsing-js&quot;&gt;JS 开销和如何缩短解析时间-parsing【为什么我的JS运行慢】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JS 开销在哪里？&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;加载&lt;br&gt;&lt;/li&gt;
&lt;li&gt;解析 &amp;amp; 编译&lt;br&gt;&lt;/li&gt;
&lt;li&gt;执行&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Code splitting 代码拆分，按需加载&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Tree shaking 代码减重&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;减少主线程工作量&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;避免长任务&lt;br&gt;&lt;/li&gt;
&lt;li&gt;避免超过 1kb 的行间脚本&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用 RAF 和 rIC（requestIdleCallback） 进行时间调度&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;★ 让用户知道开始访问网站的过程，减少白屏时间；&lt;br&gt;&lt;br&gt;
★ 内容是不是有用的，加载一些文字或者图片；&lt;br&gt;&lt;br&gt;
★ 什么时候可以开始交互了。  &lt;/p&gt;

&lt;h2 id=&quot;v8&quot;&gt;配合 V8 有效优化代码【路走对了才能快】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;v8 编译原理&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;拿到JS代码 -&amp;gt; 解析 -&amp;gt; 抽象语法树 -&amp;gt; 解释器 -&amp;gt; 优化编译&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;抽象语法树&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;源码 =&amp;gt; 抽象语法树 =&amp;gt; 字节码 Bytecode =&amp;gt; 机器码&lt;br&gt;&lt;/li&gt;
&lt;li&gt;编译过程会进行优化&lt;br&gt;&lt;/li&gt;
&lt;li&gt;运行时可能发生反优化&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;V8 优化机制&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;脚本流（正常流程是先下载，解析，执行；优化：脚本大的时候，下载的过程中同时解析）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;字节码缓存（使用频率高的缓存）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;懒解析（函数声明了，但是没有马上用，用的时候浏览器才会去解析）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;保存文件，在Node环境下运行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;const {performance, PerformanceObserver} = require('perf_hooks');

const add = (a, b) =&amp;gt; a+b;

const num1 = 1;
const num2 = 2;

performance.mark('start');

for(let i = 0; i &amp;lt; 10000000; i++) {
    add(num1, num2);
}

add(num1, 's');

for(let i = 0; i &amp;lt; 10000000; i++) {
    add(num1, num2);
}

performance.mark('end');

const observer = new PerformanceObserver((list) =&amp;gt; {
    console.log(list.getEntries()[0]);
})
observer.observe({entryTypes: ['measure']});

performance.measure('测量1', 'start', 'end');
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;function-optimization&quot;&gt;函数优化-Function optimization【必会】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;函数的解析方式&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lazy parsing 懒解析 VS eager parsing 饥饿解析&lt;br&gt;&lt;/li&gt;
&lt;li&gt;利用 &lt;a href=&quot;https://github.com/nolanlawson/optimize-js&quot;&gt;Optimize.js&lt;/a&gt; 优化初次加载时间&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;test.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// lazy parsing&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// const add = ((a, b) =&amp;gt; a + b);  // 变成 饥饿解析的函数&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;object-optimization-js&quot;&gt;对象优化-Object optimization【JS对象避坑地图】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;对象优化可以做哪些&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;❶ 以相同顺序初始化对象成员，避免隐藏类的调整&lt;br&gt;&lt;br&gt;
❷ 实例化后避免添加新属性&lt;br&gt;&lt;br&gt;
❸ 尽量使用 Array 代替 array-like 对象&lt;br&gt;&lt;br&gt;
❹ 避免读取超过数组从长度&lt;br&gt;&lt;br&gt;
❺ 避免元素类型转换  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以相同顺序初始化对象成员，避免隐藏类的调整&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;good&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RectArea&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HC0 &lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HC1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HC2&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rect1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RectArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 创建了隐藏类HC0, HC1, HC2&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rect2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RectArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 相同的对象结构，可复用之前的所有隐藏类&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;bad&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;car1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HC0&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;car1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;seats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// HC1&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;car2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;seats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 没有可复用的隐藏类，创建HC2&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;car2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'blue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 没有可复用的隐藏类，创建HC3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;实例化后避免添加新属性&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;bad&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;car1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// In-object 属性&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;car1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;seats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Normal/Fast 属性，存储在property store里，需要通过描述数组间接查找 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;尽量使用 Array 代替 array-like 对象&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 不如在真实数组上效率高&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 转换的代价比影响优化小&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;避免读取超过数组的长度&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;bad&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 越界比较&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//  1.造成undefined与数进行比较 2.沿原型链的查找&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 业务上无效、出错&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;    
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;避免元素类型转换&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// PACKED_SMI_ELEMENTS&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// PACKED_DOUBLE_ELEMENTS&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;html&quot;&gt;HTML 优化【必会】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;HTML 优化也重要&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;减少 iframes 使用&lt;br&gt;&lt;/li&gt;
&lt;li&gt;压缩空白符&lt;br&gt;&lt;/li&gt;
&lt;li&gt;避免节点深层次级嵌套&lt;br&gt;&lt;/li&gt;
&lt;li&gt;避免 table 布局&lt;br&gt;&lt;/li&gt;
&lt;li&gt;删除注释&lt;br&gt;&lt;/li&gt;
&lt;li&gt;css &amp;amp; js 尽量外链&lt;br&gt;&lt;/li&gt;
&lt;li&gt;删除元素默认属性&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;借助工具&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;html-minifier  &lt;/p&gt;

&lt;h2 id=&quot;css&quot;&gt;CSS 对性能的影响 【必会】&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;降低 CSS 对渲染的阻塞&lt;br&gt;&lt;/li&gt;
&lt;li&gt;利用 GPU 进行完成动画&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用 contain 属性  &lt;code&gt;contain: layout&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;字体使用 font-display 属性&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-five&quot;&gt;第5章 资源优化-five (经典性能优化解决方案)&lt;/h1&gt;

&lt;h2 id=&quot;compress&quot;&gt;资源的压缩与合并-compress【见效最明显的优化方法】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;为什么要压缩 &amp;amp; 合并&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;减少 HTTP 请求数量&lt;br&gt;&lt;/li&gt;
&lt;li&gt;减少请求资源的大小&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;HTML 压缩&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用在线工具进行压缩&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用 html-minifier 等 npm 工具&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;CSS 压缩&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用在线工具进行压缩&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用 clean-css 等 npm 工具&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;JS 压缩与混淆&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用在线工具进行压缩&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用 webpack 对 JS 在构建时压缩&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;css js 文件合并&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;若干小文件，maybe。。。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;无冲突，服务相同的模块，OK&lt;br&gt;&lt;/li&gt;
&lt;li&gt;优化加载，NO&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;image&quot;&gt;图片格式优化-image【多种图片格式，哪种最合适】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;图片优化方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;图片格式&lt;br&gt;&lt;/li&gt;
&lt;li&gt;图片大小&lt;br&gt;&lt;/li&gt;
&lt;li&gt;适配不同屏幕的尺寸&lt;br&gt;&lt;/li&gt;
&lt;li&gt;压缩&lt;br&gt;&lt;/li&gt;
&lt;li&gt;资源优先级&lt;br&gt;&lt;/li&gt;
&lt;li&gt;延迟加载&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;图片格式&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jpeg/jpg&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jpeg/jpg 的优点：压缩比高、画质保存好 &lt;/li&gt;
&lt;li&gt;jpeg/jpg 的使用场景：大图、色彩丰富的图&lt;br&gt;&lt;/li&gt;
&lt;li&gt;jpeg/jpg 的缺点：纹理、边缘锯齿&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;jpeg/jpg 优化工具 https://github.com/imagemin/imagemin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PNG&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PNG 的优点：做透明背景&lt;br&gt;&lt;/li&gt;
&lt;li&gt;PNG 的使用场景：logo&lt;/li&gt;
&lt;li&gt;PNG 缺陷：保留了很好的线条、纹理、边缘等细腻,所以体积较大&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imagemin/imagemin-pngquant&quot;&gt;PNG 图片优化工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;65%~80%&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebP&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WebP 的优点：跟 png 同样的质量，但压缩比率高&lt;/li&gt;
&lt;li&gt;支持 WebP 的浏览器，兼容性不是很好&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;load&quot;&gt;图片加载优化-load【突破大型网站图片加载的瓶颈】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;图片的懒加载&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;原生的图片懒加载方案 &lt;code&gt;&amp;lt;img loading=&amp;quot;lazy&amp;quot;&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;第三方图片懒加载方案&lt;br&gt;&lt;/li&gt;
&lt;li&gt;verlok/lazyload&lt;/li&gt;
&lt;li&gt;yall.js&lt;/li&gt;
&lt;li&gt;Blazy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Aljullu/react-lazy-load-image-component&quot;&gt;https://github.com/Aljullu/react-lazy-load-image-component&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用渐进式图片&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;baseline JPEG : 图片加载一行显示一行&lt;/li&gt;
&lt;li&gt;progressive JPEG: 图片逐渐变清楚,低像素到高像素【用户体验更好】&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;渐进式图片的解决方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;progressive-image&lt;br&gt;&lt;/li&gt;
&lt;li&gt;libjpeg&lt;br&gt;&lt;/li&gt;
&lt;li&gt;jpeg-recompress&lt;br&gt;&lt;/li&gt;
&lt;li&gt;ImageMagick&lt;br&gt;&lt;/li&gt;
&lt;li&gt;jpegtran&lt;br&gt;&lt;/li&gt;
&lt;li&gt;imagemin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;使用响应式图片&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;srcset 属性的使用&lt;br&gt;&lt;/li&gt;
&lt;li&gt;sizes 属性的使用&lt;br&gt;&lt;/li&gt;
&lt;li&gt;picture 的使用&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;font-family&quot;&gt;字体优化-font-family【千万不可忽略】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;什么是 FOIT 和 FOUT&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;字体未下载完成时，浏览器隐藏或自动降级，导致字体闪烁&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Flash Of Invisible Text&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Flash Of UNstyled Text&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;使用 font-display【推荐】&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;auto&lt;br&gt;&lt;/li&gt;
&lt;li&gt;swap【尽早用默认字体展示出来，新字体下载完了替换，】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;optional【100ms下载时间内，一旦浏览器做出选择，不会再替换】【手机端使用，推荐】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;block【3s内不显示，再使用默认字体，字体下载成功后再替换】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;fallback【block的优化;100ms内不显示，再使用默认字体，字体下载成功后再替换】【推荐】&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@font--face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;font-display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ballback&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;使用 AJAX + Base64【图推荐】&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;解决兼容性问题&lt;br&gt;&lt;/li&gt;
&lt;li&gt;缺点：缓存问题&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;6-six-webpack&quot;&gt;第6章 构建优化-six(揭开webpack性能优化的内幕)&lt;/h1&gt;

&lt;h2 id=&quot;webpack-webpack&quot;&gt;webpack 的优化配置【了解这些优化配置才敢说会用webpack】 &lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Tree-shaking&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上下文未用到的代码（dead code）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;基于 ES6 import export&lt;br&gt;&lt;/li&gt;
&lt;li&gt;package.json 中配置 sideEffects&lt;br&gt;&lt;/li&gt;
&lt;li&gt;注意 Babel 默认配置的影响&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;JS 压缩&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;webpack 4 后引入 uglifyjs-webpack-plugin&lt;br&gt;&lt;/li&gt;
&lt;li&gt;支持 ES6 替换为 terser-webpack-plugin&lt;br&gt;&lt;/li&gt;
&lt;li&gt;减小 JS 文件体积&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;作用域提升&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;代码体积减小&lt;br&gt;&lt;/li&gt;
&lt;li&gt;提高执行效率&lt;br&gt;&lt;/li&gt;
&lt;li&gt;同样注意 babel 的 modules 配置&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;babel7 优化配置&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在需要的地方引入 pofyfill 【useBuiltIns: usage】 &lt;/li&gt;
&lt;li&gt;辅助函数的按需引入【&amp;quot;@babel/plugin-transform-runtime&amp;quot;】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;根据目标浏览器按需转换代码&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpack-dependency&quot;&gt;webpack 的依赖优化-dependency【小改动，大作用】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;noParse&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;提高构建速度&lt;br&gt;&lt;/li&gt;
&lt;li&gt;直接通知 webpack 忽略较大的库&lt;br&gt;&lt;/li&gt;
&lt;li&gt;被忽略的库不能有 import 、require、define 的引入方式&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;DllPlugin&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;避免打包时对不变的库重复构建&lt;br&gt;&lt;/li&gt;
&lt;li&gt;提高构建速度&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpack-splitting&quot;&gt;基于 webpack 的代码拆分-splitting【让网站按需加载】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;code splitting 代码拆分做什么&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;把单个 bundle 文件拆分成若干小 bundles/chunks&lt;br&gt;&lt;/li&gt;
&lt;li&gt;缩短首屏加载时间&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;webpack 代码拆分的方法&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;手工定义入口&lt;br&gt;&lt;/li&gt;
&lt;li&gt;splitChunds 提取公有代码，拆分业务代码与第三方库&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpack-minification&quot;&gt;手把手教你做 webpack 的资源压缩-minification&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;基于 webpack 的资源压缩（minification）&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Terser 压缩 JS&lt;br&gt;&lt;/li&gt;
&lt;li&gt;mini-css-extract-plugin 压缩 CSS&lt;br&gt;&lt;/li&gt;
&lt;li&gt;HtmlWebpackPlugin-minify 压缩 HTML&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpack-cache&quot;&gt;基于 webpack 的持久化缓存-cache&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;持久化缓存方案&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;每个打包的资源文件有唯一的 hash 值&lt;br&gt;&lt;/li&gt;
&lt;li&gt;修改后只有受影响的文件 hash 变化&lt;br&gt;&lt;/li&gt;
&lt;li&gt;充分利用浏览器缓存【推荐 contenthash】&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webpack-stats&quot;&gt;基于 webpack 的应用大小监测与分析-stats&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;检测与分析&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stats 分析与可视化图&lt;br&gt;&lt;/li&gt;
&lt;li&gt;webpack-bundle-analyzer 进行体积分析&lt;br&gt;&lt;/li&gt;
&lt;li&gt;speed-measure-webpack-plugin 速度分析&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://alexkuz.github.io/webpack-chart/&quot;&gt;Webpack Chart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;source-map-explorer&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;analyze&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;source-map-explorer 'build/*.js'&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;7-seven&quot;&gt;第7章 传输加载优化-seven（前沿技术解决高访问量网站性能优化问题）&lt;/h1&gt;

&lt;h2 id=&quot;gzip&quot;&gt;启用压缩 Gzip【必会的传输压缩方案】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Gzip&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;对传输资源进行体积压缩，可高达 90%&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如何配置 Nginx 启动 Gzip&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;keep-alive&quot;&gt;启用 Keep Alive【通过一个参数提速连接】&lt;/h2&gt;

&lt;p&gt;http1.1 默认开启 Keep Aliv&lt;/p&gt;

&lt;p&gt;Network -&amp;gt; Headers&lt;/p&gt;

&lt;p&gt;Connection: keep-alive&lt;/p&gt;

&lt;p&gt;nginx 配置文件中&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keepalive_timeout&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;keepalive_timeout&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 超过多长时间关闭连接&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;keepalive_requests&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 一直持续连接的次数&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Keep Alive&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一个持久的TCP连接，节省了连接创建时间&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Nginx 默认开启 keep alive&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;http-http&quot;&gt;HTTP 资源缓存【必会的HTTP缓存方法】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;HTTP 缓存&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;提高重复访问时资源加载的速度&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cache-Control/Expires&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Last-Modified + if-Modified-Since&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Etag + If-None-Match&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;service-workers&quot;&gt;一次性理解 Service workers 技术，给网站提速&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Service Workers 作用&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;加速重复访问&lt;br&gt;&lt;/li&gt;
&lt;li&gt;离线支持&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Service Works 注意&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;延长了首屏时间，但页面总加载时间减少&lt;br&gt;&lt;/li&gt;
&lt;li&gt;兼容性&lt;br&gt;&lt;/li&gt;
&lt;li&gt;只能在 localhost 或 https 下使用&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;http-2&quot;&gt;HTTP 2 的性能提升&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;HTTP 2的性能提升&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;二进制传输&lt;br&gt;&lt;/li&gt;
&lt;li&gt;请求响应多路复用&lt;br&gt;&lt;/li&gt;
&lt;li&gt;server push&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;浏览器页面不安全的时候&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;直接在页面输入&lt;code&gt;thisisunsafe&lt;/code&gt;可以绕过&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;搭建 HTTP2 服务&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;HTTPS&lt;br&gt;&lt;/li&gt;
&lt;li&gt;适合较高的请求量&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ssr&quot;&gt;用流行的 SSR 技术给前端减负&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;SSR 的好处&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;加速首屏加载&lt;br&gt;&lt;/li&gt;
&lt;li&gt;更好的 SEO&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;8-eight&quot;&gt;第8章 前沿优化解决方案-eight&lt;/h1&gt;

&lt;h2 id=&quot;svg&quot;&gt;拯救移动端图标 SVG【拯救移动端图标】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;从 PNG 到 IconFont&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;多个图标 -- &amp;gt; 一套字体，减少获取时的请求数量和体积&lt;br&gt;&lt;/li&gt;
&lt;li&gt;矢量图标，可伸缩&lt;br&gt;&lt;/li&gt;
&lt;li&gt;直接通过 CSS 修改样式（颜色，大小）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;只有一种颜色&lt;br&gt;&lt;/li&gt;
&lt;li&gt;搜索引擎优化不友好&lt;br&gt;&lt;/li&gt;
&lt;li&gt;要用就需要引入一整套&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;从 IconFont 到 SVG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;优点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;保持了图片的能力，支持多色彩&lt;br&gt;&lt;/li&gt;
&lt;li&gt;独立的矢量图形&lt;br&gt;&lt;/li&gt;
&lt;li&gt;XML 语法，搜索引擎 SEO 和无障碍读屏软件读取&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;flexbox&quot;&gt;使用 Flexbox 优化布局（上）&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Flexbox 的优势&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;更高效的实现方案&lt;br&gt;&lt;/li&gt;
&lt;li&gt;容器有能力决定子元素的大小，顺序，对其，间隔等&lt;br&gt;&lt;/li&gt;
&lt;li&gt;双向布局&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Flexbox 的使用&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flex container 容器&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Flex items 元素&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;preload&quot;&gt;优化资源加载的顺序-preload【给资源设置优先级】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;资源优先级&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;浏览器默认安排资源优先加载优先级&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用 preload, prefetch 调整优先级&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;preload, prefetch 使用场景&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;preload: 提前加载较晚出现，但对当前页面非常重要的资源&lt;br&gt;&lt;/li&gt;
&lt;li&gt;prefetch: 提前加载后继路由需要的资源，优先级低【当前页面资源加载完了之后才 prefetch】&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;preload 示例&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;img/.svg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;preload&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.woff2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;font/woff2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;prefetch 示例&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;prefetch&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;ssr&quot;&gt;预渲染页面-SSR【提前完成任务的意义】&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;预渲染的作用&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;大型单页应用的性能瓶颈：JS下载+解析+执行&lt;br&gt;&lt;/li&gt;
&lt;li&gt;SSR 的主要问题：牺牲 TTFB 来补救 First Paint；实现复杂&lt;br&gt;&lt;/li&gt;
&lt;li&gt;pre-rendering 打包时提前渲染页面，没有服务器参与&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;使用 react-snap&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;配置 postbuild&lt;br&gt;&lt;/li&gt;
&lt;li&gt;使用 ReactDOM.hydrate()&lt;br&gt;&lt;/li&gt;
&lt;li&gt;首屏内联样式，避免明显的 FOUC（样式闪动）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;windowing&quot;&gt;Windowing 提高列表性能【开源节流，用什么画什么】&lt;/h2&gt;

&lt;p&gt;Windowing（窗口化）提高列表性能&lt;/p&gt;

&lt;p&gt;react-window 插件&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;windowing 的作用&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;加载大列表、大表单的每一行严重影响性能&lt;br&gt;&lt;/li&gt;
&lt;li&gt;lazy loading 仍然会让 DOM 变得过大&lt;br&gt;&lt;/li&gt;
&lt;li&gt;windowing 只渲染可见的行，渲染和滚动的性能都会提升&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;使用 react-window&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;配置一个一维列表 List&lt;br&gt;&lt;/li&gt;
&lt;li&gt;配置一个二维列表 Grid&lt;br&gt;&lt;/li&gt;
&lt;li&gt;配置滚动到指定元素&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;placeholder&quot;&gt;使用骨架组件减少布局移动-Placeholder【论占位置的重要性】&lt;/h2&gt;

&lt;p&gt;使用骨架组件减少布局移动（layout shift）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Skeleton/Placeholder 的作用&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;占位&lt;br&gt;&lt;/li&gt;
&lt;li&gt;提升用户感知性能&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;react-placerholder&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;预置的 placeholders&lt;br&gt;&lt;/li&gt;
&lt;li&gt;自定义 placeholder&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;9-nine&quot;&gt;第9章 性能优化问题面试指南-nine&lt;/h1&gt;

&lt;h2 id=&quot;web-amp&quot;&gt;Web加载&amp;amp;渲染基本原理&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;从输入URL 到页面加载显示完成都发生了什么？&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;网络线程&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;DNS 查找 IP -&amp;gt; 如果是https 需要建立TLS 连接 -&amp;gt; 设置UA等信息，发送 GET 请求 -&amp;gt; web server 上的应用处理请求 -&amp;gt; 读取response，分析数据类型 -&amp;gt; 安全检查 -&amp;gt; 通知 UI 数据准备就绪  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;渲染线程&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;解析文本，构建 DOM&lt;br&gt;
边解析 DOM 边加载子资源&lt;br&gt;&lt;br&gt;
JS 阻塞解析 async/defer  &lt;/p&gt;

&lt;p&gt;解析 CSS ，计算 computed styles&lt;br&gt;
构造布局树 &amp;amp; 大小&lt;/p&gt;

&lt;h2 id=&quot;first-screen&quot;&gt;首屏加载优化-First screen&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;什么是首屏加载？怎么优化？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;测量指标&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First Contentful Paint (FCP)【让用户知道访问的请求成功了，0~2s】&lt;/p&gt;

&lt;p&gt;Largest Contentful Paint (LCP)【网站有没有用，0~2.5s】&lt;/p&gt;

&lt;p&gt;Time to Interactive (TTI)【什么时候用户可以交互，0~3.8s】&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;❶ 资源体积太大？&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;资源压缩，&lt;br&gt;&lt;/li&gt;
&lt;li&gt;传输压缩，&lt;br&gt;&lt;/li&gt;
&lt;li&gt;代码拆分，&lt;br&gt;&lt;/li&gt;
&lt;li&gt;tree shaking，&lt;br&gt;&lt;/li&gt;
&lt;li&gt;HTTP2，&lt;br&gt;&lt;/li&gt;
&lt;li&gt;缓存&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;❷ 首页内容太多？&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;路由/组件/内容 lazy-loading,&lt;br&gt;&lt;/li&gt;
&lt;li&gt;预渲染/SSR,&lt;br&gt;&lt;/li&gt;
&lt;li&gt;首屏 Inline CSS&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;❸ 加载顺序不合适&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;prefetch, preload&lt;/p&gt;

&lt;h2 id=&quot;javascript&quot;&gt;JavaScript 内存管理&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JS 是怎样管理内存的？什么情况会造成内存泄露？&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内存泄露严重影响性能&lt;br&gt;&lt;/li&gt;
&lt;li&gt;高级语言 != 不需要管理内存&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;变量创建时自动分配内存，不使用时“自动”释放内存-GC&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内存释放的主要问题是如何确定不再需要使用的内存&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所有的GC都是近似实现，只能通过判断变量是否还能再次访问到  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;局部变量，函数执行完，没有闭包引用，就会被标记回收  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全局变量，直到浏览器卸载页面时释放  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;GC 实现机制&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;引用计数 - 无法解决循环引用的问题&lt;br&gt;&lt;/li&gt;
&lt;li&gt;标记清除【常用】&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;如何避免内存泄露&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;避免意外的全局变量产生&lt;br&gt;&lt;/li&gt;
&lt;li&gt;避免反复运行引发大量闭包&lt;br&gt;&lt;/li&gt;
&lt;li&gt;避免脱离的 DOM 元素&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>慕课网-前端框架及项目面试 聚焦Vue/React/Webpack - 第12章 项目流程</title>
   <link href="/other/2020/08/29/muke-project-process"/>
   <updated>2020-08-29T00:00:00+08:00</updated>
   <id>/other/2020/08/29/muke-project-process</id>
   <content type="html">&lt;h1 id=&quot;12&quot;&gt;第12章 项目流程&lt;/h1&gt;

&lt;h2 id=&quot;why&quot;&gt;why面试为何会考察项目流程&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;项目流程&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;项目分多人、多角色参与&lt;br&gt;&lt;/li&gt;
&lt;li&gt;项目分多阶段&lt;br&gt;&lt;/li&gt;
&lt;li&gt;项目需要计划和执行&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;为何考察项目流程？&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;确定你真正参与过实际项目（而不是个人项目、毕业设计等）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;确定你能真正解决项目的问题&lt;br&gt;&lt;/li&gt;
&lt;li&gt;看你能否独立承担起一个项目（作为项目负责人）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;看几个面试题&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PM想在项目开发过程中增加需求，该怎么办？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;项目即将延期，该怎么办？&lt;br&gt;&lt;/li&gt;
&lt;li&gt;你将如何保证项目质量？&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;如何讲解&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;项目的所有角色&lt;br&gt;&lt;/li&gt;
&lt;li&gt;项目的全流程&lt;br&gt;&lt;/li&gt;
&lt;li&gt;各个阶段中常见问题&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;role&quot;&gt;和前端开发相关的项目角色有哪些-role&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;项目角色&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PM 产品经理&lt;br&gt;&lt;/li&gt;
&lt;li&gt;UE 视觉设计师&lt;br&gt;&lt;/li&gt;
&lt;li&gt;FE 前端开发&lt;br&gt;&lt;/li&gt;
&lt;li&gt;RD 后端开发&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CRD 移动端开发&lt;br&gt;&lt;/li&gt;
&lt;li&gt;QA 测试人&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stage&quot;&gt;一个完整的项目要分哪些阶段-stage&lt;/h2&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2020/7-8-9/8-29-1.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;❶ 需求分析 【各个角色】&lt;br&gt;&lt;br&gt;
❷ 技术方案 【FE、RD、CRD】 &amp;amp; 视觉设计&lt;br&gt;&lt;br&gt;
❸ 开发 【FE】&lt;br&gt;&lt;br&gt;
❹ 联调 【FE、RD、CRD】&lt;br&gt;&lt;br&gt;
❺ 测试 【FE、QA】&lt;br&gt;&lt;br&gt;
❻ 上线 【FE】  &lt;/p&gt;

&lt;h2 id=&quot;stage1&quot;&gt;&lt;strong&gt;Stage1-需求分析&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;了解背景&lt;br&gt;&lt;/li&gt;
&lt;li&gt;质疑需求是否合理&lt;br&gt;&lt;/li&gt;
&lt;li&gt;需求是否闭环【例如：点完赞还有个点赞排行榜、APP分享到微信后吸引其他用户到自己的APP】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;开发难度如何&lt;br&gt;&lt;/li&gt;
&lt;li&gt;是否需要其他支持&lt;br&gt;&lt;/li&gt;
&lt;li&gt;不要急于给排期&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stage2&quot;&gt;&lt;strong&gt;Stage2-技术方案设计&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;求简，不过渡设计&lt;br&gt;&lt;/li&gt;
&lt;li&gt;产出文档&lt;br&gt;&lt;/li&gt;
&lt;li&gt;找准设计重点【组件设计、组件拆分、数据结构设计、接口文档、协议、输入输出】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;组内评审【设计是否合理、扩展性、安全隐患、性能问题、公司现成的工具】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;和 RD 、 CRD 沟通&lt;br&gt;&lt;/li&gt;
&lt;li&gt;发出会议结论&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stage3&quot;&gt;&lt;strong&gt;Stage3-开发&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;如何保证代码质量&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何反馈排期【预留 buffer、1/4 的时间，其他并行、其他上游依赖人的排期】、工作量的排期&lt;br&gt;&lt;/li&gt;
&lt;li&gt;符合开发规范【git、git 分支规范、注释的规范、模块命名】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;写出开发文档&lt;br&gt;&lt;/li&gt;
&lt;li&gt;及时单元测试&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Mock API&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Code Review&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stage4&quot;&gt;&lt;strong&gt;Stage4-联调&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;和 RD 、CRD 技术联调&lt;br&gt;&lt;/li&gt;
&lt;li&gt;让 UE 确定视觉效果&lt;br&gt;&lt;/li&gt;
&lt;li&gt;让 PM 确定产品功能&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;PM加需求怎么办&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不能拒绝，走需求变更流程即可&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果公司有规定，则按规定走&lt;br&gt;&lt;/li&gt;
&lt;li&gt;否则，发起项目组和 leader 的评审，重新评估排期&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stage5&quot;&gt;&lt;strong&gt;Stage5-测试&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;提测发邮件，抄送项目组&lt;br&gt;&lt;/li&gt;
&lt;li&gt;测试问题要详细记录&lt;br&gt;&lt;/li&gt;
&lt;li&gt;有问题及时沟通，QA 和 FE 天生信息不对称&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;不要对QA说：我电脑没问题！&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不要说这句话&lt;br&gt;&lt;/li&gt;
&lt;li&gt;当面讨论，让QA帮你复现&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果需要特定设备才能复现，让QA提供设备&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stage6&quot;&gt;&lt;strong&gt;Stage6-上线&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;上线之后及时通知QA回归测试&lt;br&gt;&lt;/li&gt;
&lt;li&gt;上线之后及时同步给PM和项目组&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果有问题，及时回滚。先止损，再排查问题&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;communicate&quot;&gt;项目沟通的重要性-communicate&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;多人协作，沟通是最重要的事情&lt;br&gt;&lt;/li&gt;
&lt;li&gt;每日一沟通（如站会），有事说事，无事报平安&lt;br&gt;&lt;/li&gt;
&lt;li&gt;及时识别风险，及时汇报&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>慕课网-前端框架及项目面试 聚焦Vue/React/Webpack - 第11章 项目设计</title>
   <link href="/framework/2020/08/28/muke-project-design"/>
   <updated>2020-08-28T00:00:00+08:00</updated>
   <id>/framework/2020/08/28/muke-project-design</id>
   <content type="html">&lt;h1 id=&quot;project-design&quot;&gt;项目设计 - Project design&lt;/h1&gt;

&lt;h2 id=&quot;why&quot;&gt;why面试为何会考察组件和状态设计&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;组件和状态设计&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;框架（vue React）的使用和高级特性是必要条件&lt;br&gt;&lt;/li&gt;
&lt;li&gt;能独立负责项目？还是需要别人带着？ - 考察设计能力&lt;br&gt;&lt;/li&gt;
&lt;li&gt;面试必考（二面、三面），场景题&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;考察重点&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;数据驱动视图&lt;br&gt;&lt;/li&gt;
&lt;li&gt;状态：数据结构设计（React-state,Vue-data）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;视图：组件结构和拆分&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;回顾面试题&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React 设计 todolist （组件结构，redux state 数据结构）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;vue 设计购物车（组件结构，vuex state 数据结构）&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;react-todolist&quot;&gt;React 实现 todolist&lt;/h1&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2020/7-8-9/8-28-1.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;state 数据结构设计&lt;br&gt;&lt;/li&gt;
&lt;li&gt;组件设计（拆分、组合）和组件通讯&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;state&quot;&gt;状态设计的思路和要点-state&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;state 数据结构设计&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用数据描述所有内容（而不是功能）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;数据要结构化，易于程序操作（遍历、查找）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;数据要可扩展，可以增加新的功能&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'标题1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// &lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;component&quot;&gt;组件设计的思路和要点-component&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;组件设计&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;从功能上拆分层次&lt;br&gt;&lt;/li&gt;
&lt;li&gt;尽量让组件原子化&lt;br&gt;&lt;/li&gt;
&lt;li&gt;容器组件（只管理数据、事件）&amp;amp; UI 组件 （显示视图、交互）&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2020/7-8-9/8-28-2.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;最外层的红色框是容器组件，蓝色和绿色是 UI 组件&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* 只负责管理数据 */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InputItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* 只负责输入，将数据结果给父组件 */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* 只负责显示列表，从父组件获取数据 */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* 显示单条数据，删除、切换完成状态 */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/List&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/App&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;react-todolist&quot;&gt;React实现TodoList代码演示&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;项目结构&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TodoList

&lt;ul&gt;
&lt;li&gt;UI

&lt;ul&gt;
&lt;li&gt;CheckBox.js&lt;/li&gt;
&lt;li&gt;Input.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;index.js&lt;/li&gt;
&lt;li&gt;InputItem&lt;/li&gt;
&lt;li&gt;List.js&lt;/li&gt;
&lt;li&gt;ListItem.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;index.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./List'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;InputItem&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./InputItem'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'标题1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'标题2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'标题3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InputItem&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 新增一项&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 使用 concat 返回不可变值&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// id 累加&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 删除一项&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 使用 filter 返回不可变值&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 切换完成状态&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 使用 map 返回不可变值&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;completed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;completed&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;completed&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 切换完成状态&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 返回新对象&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;completed&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;InputItem.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./UI/Input'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;InputItem&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;changeHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clickHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;新增&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;changeHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newTitle&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clickHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;InputItem&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;List.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListItem&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./ListItem'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListItem&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ListItem.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CheckBox&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./UI/CheckBox'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListItem&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CheckBox&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;completedChangeHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deleteHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;删除&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;completedChangeHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'checked'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;toggleCompleted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;deleteHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;deleteItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListItem&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;UI/CheckBox.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CheckBox&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onCheckboxChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;onCheckboxChange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 传给父组件&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CheckBox&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;UI/Input.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 传给父组件&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newVal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Input&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;vue&quot;&gt;Vue实现购物车&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;data 数据结构设计&lt;br&gt;&lt;/li&gt;
&lt;li&gt;组件设计和组件通讯&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2020/7-8-9/8-28-3.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;vue-data&quot;&gt;Vue实现购物车data如何设计&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;data 数据结构设计&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;productionList&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'商品1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：总价是功能，不是内容，是通过计算出来，类似的还有均价、最低最高价等。&lt;br&gt;
通过 id 引用可以解决数据冗余问题，扩展性好，可以只修改 productionList 一处的信息&lt;/p&gt;

&lt;h2 id=&quot;vue&quot;&gt;Vue实现购物车-组件设计和代码演示&lt;/h2&gt;

&lt;div class=&quot;rd&quot;&gt;
    &lt;img src=&quot;/assets/images/2020/7-8-9/8-28-4.png&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;

&lt;p&gt;项目结构&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cart

&lt;ul&gt;
&lt;li&gt;CartList

&lt;ul&gt;
&lt;li&gt;CartItem.vue&lt;/li&gt;
&lt;li&gt;index.vue&lt;/li&gt;
&lt;li&gt;TotalPrice.vue&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ProductionList

&lt;ul&gt;
&lt;li&gt;index.vue&lt;/li&gt;
&lt;li&gt;ProductionItem.vue&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;event.js&lt;/li&gt;
&lt;li&gt;index.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cart/index.vue&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProductionList&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;productionList&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CartList&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;productionList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;productionList&quot;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cartList&quot;&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProductionList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./ProductionList/index'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CartList&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./CartList/index'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./event'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ProductionList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CartList&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;productionList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'商品A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'商品B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'商品C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 购物数量&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 加入购物车&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;addToCart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 先看购物车中是否有该商品&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 数量加一&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;prd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 购物车没有该商品&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 默认购物数量 1&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 从购物车删除一个（即购物数量减一）&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;delFromCart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 从购物车中找出该商品&lt;/span&gt;
            &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 数量减一&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;prd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 如果数量减少到了 0&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quantity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mounted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'addToCart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addToCart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'delFromCart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;delFromCart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;event.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'vue'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CartList/index.vue&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CartItem&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item in list&quot;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item.id&quot;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item&quot;&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;总价&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CartItem&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./CartItem'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CartItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;productionList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     id: 1,&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     title: '商品A',&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     price: 10&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     id: 1,&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     quantity: 1&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;computed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 购物车商品列表&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cartListItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 找到对应的 productionItem&lt;/span&gt;
                &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;productionItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;productionList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;prdItem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prdItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cartListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;// 返回商品信息，外加购物数量&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;productionItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cartListItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quantity&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 如：&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//     id: 1,&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//     title: '商品A',&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//     price: 10,&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;//     quantity: 1 // 购物数量&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 总价&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;totalPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;curItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quantity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CartList/CartItem.vue&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nbsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;数量&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nbsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;addClickHandler(item.id, $event)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;增加&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nbsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;delClickHandler(item.id, $event)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;减少&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../event'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// id: 1,&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// title: '商品A',&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// price: 10,&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// quantity: 1 // 购物数量&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;addClickHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'addToCart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;delClickHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'delFromCart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CartList/TotalPrice.vue&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/p&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ProductionList/index.vue&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProductionItem&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item in list&quot;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item.id&quot;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item&quot;&lt;/span&gt;
        &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProductionItem&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./ProductionItem'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ProductionItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     id: 1,&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     title: '商品A',&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;//     price: 10&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ProductionList/ProductionItem.vue&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nbsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;元&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nbsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;clickHandler(item.id, $event)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;加入购物车&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/template&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../event'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// id: 1,&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// title: '商品A',&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// price: 10&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;clickHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'addToCart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;vuex&quot;&gt;结合vuex实现购物车&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/&quot;&gt;https://github.com/vuejs/vuex/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/examples/shopping-cart&quot;&gt;https://github.com/vuejs/vuex/tree/dev/examples/shopping-cart&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>慕课网-前端框架及项目面试 聚焦Vue/React/Webpack - 第10章 webpack 和 babel - webpack 基本配置</title>
   <link href="/framework/2020/08/27/muke-webpack-base-configuration"/>
   <updated>2020-08-27T00:00:00+08:00</updated>
   <id>/framework/2020/08/27/muke-webpack-base-configuration</id>
   <content type="html">&lt;h1 id=&quot;webpack&quot;&gt;webpack 基本配置&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;拆分配置和 merge  【 webpack.common.js/webpack.dev.js/webpack.prod.js等，需要安装 &amp;#39;webpack-merge&amp;#39; 】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;启动本地服务 【 跨域访问 api,配置 proxy 代理 】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;处理 ES6 【 使用 babel-loader 】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;处理样式&lt;br&gt;&lt;/li&gt;
&lt;li&gt;处理图片 【处理体积小的图片转换成 base 64】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;（模块化）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;css-loader&quot;&gt;处理样式 css-loader&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;loader 的执行顺序是：从后往前&lt;br&gt;&lt;/li&gt;
&lt;li&gt;css-loader  【加载.css文件】&lt;br&gt;&lt;/li&gt;
&lt;li&gt;style-loader 【通过style标签将css插入页面】&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.cnblogs.com/twodog/p/12137542.html&quot;&gt;hash、chunkhash、contenthash&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;my-webpack-base&quot;&gt;my-webpack-base&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;webpack-base

&lt;ul&gt;
&lt;li&gt;build-base-conf

&lt;ul&gt;
&lt;li&gt;paths.js&lt;/li&gt;
&lt;li&gt;webpack.common.js&lt;/li&gt;
&lt;li&gt;webpack.dev.js&lt;/li&gt;
&lt;li&gt;webpack.prod.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;src

&lt;ul&gt;
&lt;li&gt;img&lt;/li&gt;
&lt;li&gt;style&lt;/li&gt;
&lt;li&gt;index.html&lt;/li&gt;
&lt;li&gt;index.js&lt;/li&gt;
&lt;li&gt;math.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;.babelrc&lt;/li&gt;
&lt;li&gt;package.json&lt;/li&gt;
&lt;li&gt;postcss.config.js&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;index.html&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;hi&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;index.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 引入css&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./style/style1.css'&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./style/style2.less'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// console.log('window.ENV', ENV)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./math'&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sumRes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'sumRes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sumRes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 引入图片&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;insertImgElem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgFile&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgFile1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./img/1.png'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;insertImgElem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgFile1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgFile2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./img/2.jpeg'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;insertImgElem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgFile2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;math.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;style/style1.css&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f1f1f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-45deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;style/style1.less&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;build-base-conf/webpack.common.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HtmlWebpackPlugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'html-webpack-plugin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;distPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./paths'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;js$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'babel-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/node_modules/&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//     test: /\.vue$/,&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//     loader: ['vue-loader'],&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//     include: srcPath&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// },&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// {&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//     test: /\.css$/,&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//     // loader 的执行顺序是：从后往前（知识点）&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//     loader: ['style-loader', 'css-loader']&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// },&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;css$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// loader 的执行顺序是：从后往前&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'style-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'css-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'postcss-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 加了 postcss&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;less$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// 增加 'less-loader' ，注意顺序&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'style-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'css-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'less-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'index.html'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;build-base-conf/webpack.dev.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpackCommonConf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./webpack.common.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack-merge'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webpackCommonConf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 直接引入图片 url&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;png|jpg|jpeg|gif&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'file-loader'&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefinePlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// window.ENV = 'development'&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'development'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;devServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;progress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 显示打包的进度条&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;contentBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;distPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 根目录&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 自动打开浏览器&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 启动 gzip 压缩&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// 设置代理&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 将本地 /api/xxx 代理到 localhost:3000/api/xxx&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'/api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:3000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 将本地 /api2/xxx 代理到 localhost:3000/xxx&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'/api2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:3000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;pathRewrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;s1&quot;&gt;'/api2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;build-base-conf/webpack.prod.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CleanWebpackPlugin&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'clean-webpack-plugin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpackCommonConf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./webpack.common.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack-merge'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;distPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./paths'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webpackCommonConf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'production'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bundle.[contentHash:8].js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 打包代码时，加上 hash 戳&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;distPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// publicPath: 'http://cdn.abc.com'  // 修改所有静态文件 url 的前缀（如 cdn 域名），这里暂时用不到&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 图片 - 考虑 base64 编码的情况&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;png|jpg|jpeg|gif&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'url-loader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// 小于 5kb 的图片用 base64 格式产出&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// 否则，依然延用 file-loader 的形式，产出 url 格式&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

                        &lt;span class=&quot;c1&quot;&gt;// 打包到 img 目录下&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;outputPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/img1/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

                        &lt;span class=&quot;c1&quot;&gt;// 设置图片的 cdn 地址（也可以统一在外面的 output 中设置，那将作用于所有静态资源）&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;// publicPath: 'http://cdn.abc.com'&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CleanWebpackPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 会默认清空 output.path 文件夹&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefinePlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
             &lt;span class=&quot;c1&quot;&gt;// window.ENV = 'production'&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'production'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;build-base-conf/paths.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;srcPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'..'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'src'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;distPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'..'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'dist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;srcPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;distPath&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;package.json&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;my-webpack-demo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;echo \&quot;Error: no test specified\&quot; &amp;amp;&amp;amp; exit 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;webpack-dev-server --config build-base-conf/webpack.dev.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;webpack --config build-base-conf/webpack.prod.js&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ISC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;@babel/core&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^7.10.5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;@babel/preset-env&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^7.10.4&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;autoprefixer&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^9.8.5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;babel-loader&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^8.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;css-loader&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^4.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;file-loader&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^6.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;html-webpack-plugin&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^4.3.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;less-loader&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^6.2.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;postcss-loader&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^3.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;style-loader&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^1.2.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;url-loader&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^4.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;webpack&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^4.44.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;webpack-cli&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^3.3.12&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;webpack-dev-server&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^3.11.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;webpack-merge&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;^5.0.9&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;browserslist&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt; 1%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;last 2 versions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;not ie &amp;lt;= 8&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.babelrc&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;presets&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@babel/preset-env&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;plugins&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;postcss.config.js&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'autoprefixer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 
</feed>
